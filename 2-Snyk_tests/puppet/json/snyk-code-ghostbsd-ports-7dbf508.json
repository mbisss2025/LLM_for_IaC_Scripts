{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "cpp/BufferOverflow",
              "name": "BufferOverflow",
              "shortDescription": {
                "text": "Buffer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array \u2014 hence the name overflow \u2014 and corrupt adjacent memory. Like most bugs, a buffer overflow doesn\u2019t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability \u2014 typically by a malicious actor who wants to gain access or information. In this post, we\u2019ll explain how a buffer overflow occurs and show you how to protect your C++ code from these attacks. Buffer overflows generally result in program crashes, however if the data that would overflow is user controlled, an attacker may cause more damage including deny of service attacks, infinite loops, or even remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "BufferOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iiitv/algos/commit/f55b97c0702e5416ecda62b33fabd69eb2b2174f?diff=split#diff-075b726a53851ef1448de2c45d79110a51e67d7ffbc860414764b9d73a972f29L-1",
                    "lines": [
                      {
                        "line": "scanf(\"%s\", str1);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "scanf(\"%s\", str2);\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(str1, \"mathematicians study maths\");\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "strcpy(str2, \"people study matrix multiplication\");\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/howerj/dbcc/commit/faddbb2e5d7f7dc157df17953b32971df729f4a9?diff=split#diff-a0cb465674c1b01a07d361f25a0ef2b0214b7dfe9412b7777f89add956da10ecL-1",
                    "lines": [
                      {
                        "line": "\toutpath = allocate(strlen(outpath) + strlen(outdir) + 2 /* '/' + '\\0'*/);\n",
                        "lineNumber": 216,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, outdir);\n",
                        "lineNumber": 217,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, \"/\");\n",
                        "lineNumber": 218,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, argv[i]);\n",
                        "lineNumber": 219,
                        "lineChange": "removed"
                      },
                      {
                        "line": "size_t outpath_size = strlen(outpath) + strlen(outdir) + 2; /* '/' + '\\0'*/\n",
                        "lineNumber": 217,
                        "lineChange": "added"
                      },
                      {
                        "line": "\toutpath = allocate(outpath_size);\n",
                        "lineNumber": 218,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, outdir);\n",
                        "lineNumber": 219,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, \"/\");\n",
                        "lineNumber": 220,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, argv[i]);\n",
                        "lineNumber": 221,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uclouvain/openjpeg/commit/8715ce2749d1e5a1e9c77646e9a2ddf0ec82bac9?diff=split#diff-c1330160924cae174cdacdb4b0a6ab7561d56a377c9e44dc867b24030ceda35aL-1",
                    "lines": [
                      {
                        "line": "  char output_file[64];\n",
                        "lineNumber": 98,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const char *output_file;\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  /* should be test_tile_encoder 3 2000 2000 1000 1000 8 tte1.j2k */\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if( argc == 9 )\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    num_comps = (OPJ_UINT32)atoi( argv[1] );\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_width = atoi( argv[2] );\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_height = atoi( argv[3] );\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_width = atoi( argv[4] );\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_height = atoi( argv[5] );\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    comp_prec = atoi( argv[6] );\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    irreversible = atoi( argv[7] );\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strcpy(output_file, argv[8] );\n",
                        "lineNumber": 110,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    output_file = argv[8];\n",
                        "lineNumber": 110,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 139,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "cpp/CMissingClose",
              "name": "CMissingClose",
              "shortDescription": {
                "text": "Missing Release of File Descriptor or Handle after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nA file descriptor or handler is allocated, and is not released after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.\n\nThis can lead to a denial of service, as an OS has a finite pool of file descriptors, and it may prevent other processes from obtaining their own file descriptors.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "CMissingClose",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/NCAR/ncl/commit/e0223ba7f96e77f00809a415e3308c70303f9542?diff=split#diff-df5e9e724e8583ee52188d12a745d16920f767c1810b04a27c6eeb7232423b58L-1",
                    "lines": [
                      {
                        "line": "\tif ((fp = fopen(\"/dev/tty\", \"w\")) == NULL) {\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfp = stderr;\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (header) (void) fprintf(fp, \"%s - \", header);\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fprintf(fp, \"Version %s\\n\", VERSION);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fflush(fp);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (fp != stderr) fclose(fp);\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sirupsen/flying-cat/commit/c06788fa4d076221fa4a00c3b1fd1452660c34fe?diff=split#diff-29219c331c8b7f6acd9f5ceb186c4e811fc2d027b47aae3368f1cf93973b8af0L-1",
                    "lines": [
                      {
                        "line": "FILE* s = fopen(argv[1], \"rb\");\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "FILE* d = fopen(argv[2], \"wb\");\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "int o = atoi(argv[3]);\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(o < 0)\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Offset must be a positive integer\\n\");\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(s == NULL)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for reading\\n\", argv[1]);\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(d == NULL)\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for writing\\n\", argv[2]);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "fseek(s, o, SEEK_SET);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "while(1)\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tchar c = fgetc(s);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(c == EOF)\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tbreak;\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tfputc(c, d);\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"Done\\n\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "fclose(s);\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "fclose(d);\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cr88192/bgbtech_misc/commit/5fbfccef27162e81e616231135641b95bfa071ce?diff=split#diff-e4ce6bdd50720d1880d4dae6f0ac1206fbff5542479518e49bb8d83812446ddfL-1",
                    "lines": [
                      {
                        "line": "fd=fopen(name, \"wb\");\n",
                        "lineNumber": 307,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(!fd)return(-1);\n",
                        "lineNumber": 308,
                        "lineChange": "none"
                      },
                      {
                        "line": "BTIC1H_Img_StoreTGA(fd, buf, w, h);\n",
                        "lineNumber": 309,
                        "lineChange": "none"
                      },
                      {
                        "line": "fclose(fd);\n",
                        "lineNumber": 310,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 57,
                "cwe": [
                  "CWE-775"
                ]
              }
            },
            {
              "id": "cpp/UnsafeFunctionStringHandling",
              "name": "UnsafeFunctionStringHandling",
              "shortDescription": {
                "text": "Potential buffer overflow from usage of unsafe function"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nA potential buffer overflow issue was identified via use of an insecure function. Use of this function could lead to memory corruption attacks if arbitrary user input (which has not been validated in terms of its length) is allowed to flow into it. It is advisable to use the safer alternative instead, which is less prone to memory corruption issues.\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array \u2014 hence the name overflow \u2014 and corrupt adjacent memory. Like most bugs, a buffer overflow doesn\u2019t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability \u2014 typically by a malicious actor who wants to gain access or information, or trigger a crash to deny service to others. Buffer overflows generally result in program crashes, however under certain circumstances, an attacker may be able to trigger remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "UnsafeFunctionStringHandling",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/root-project/root/commit/181bbef8d3999fb240c9b4c4c3a2362e74641aad?diff=split#diff-318d614eb480fcc82d94d700c94ab416d68a1dff5e8fb957ae94a6cb9b6793e1L-1",
                    "lines": [
                      {
                        "line": "char line[128];\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "strcpy(line,GetMethod());\n",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strncpy(line,GetMethod(),127);\n",
                        "lineNumber": 104,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nurdism/neko/commit/56bd6acf100f37ca12559f8def619e98f919af13?diff=split#diff-37254a1dc0e29dffd313e2e005c182ba8cd9dd747a0d053a1b597705846a388aL-1",
                    "lines": [
                      {
                        "line": "char cmd[12] = \"setxkbmap \";\n",
                        "lineNumber": 170,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcat(cmd, layout);\n",
                        "lineNumber": 171,
                        "lineChange": "removed"
                      },
                      {
                        "line": "char cmd[13] = \"setxkbmap \";\n",
                        "lineNumber": 170,
                        "lineChange": "added"
                      },
                      {
                        "line": "strncat(cmd, layout, 2);\n",
                        "lineNumber": 171,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/alisw/AliRoot/commit/f600fc614f90fcec43863a247fa68a0b25df501f?diff=split#diff-549671f05f93723480a35c85ff7681323ccf6764ef1b258da9195d9fa53b9803L-1",
                    "lines": [
                      {
                        "line": "sprintf(runNbFileName,\"%s/run%u\",ddlDir,aliHeader->Get(\"RunNb\"));\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "snprintf(runNbFileName,sizeof(runNbFileName),\"%s/run%u\",ddlDir,aliHeader->Get(\"RunNb\"));\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 33,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "cpp/UseAfterFree",
              "name": "UseAfterFree",
              "shortDescription": {
                "text": "Use After Free"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nMemory allocated on the heap is released, and then subsequently referenced. This can cause a program to crash, use unexpected values, or execute code.\n\n\n## Best practices for prevention\n* Store a new value in pointers immediately after `free()`\n  * The new value can be:\n    * a constant that can be checked (ie, `NULL`), or\n    * a reference to another valid object.\n\n\n## References\n\n* [CERT MEM01-C](https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152148)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "UseAfterFree",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jlmucb/cloudproxy/commit/4437ebf34a64c0ddadfbcdf834964c1f7680678b?diff=split#diff-fd44eb004baf0c6cd208492e38bd37d52740af1725f131e3058575d98686b723L-1",
                    "lines": [
                      {
                        "line": "out->assign((const char*)buf, n);\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/feiskyer/linux-perf-examples/commit/5c167c49f2fa8b11d7d4229f1d7de703472280de?diff=split#diff-4ac62d0e3e70045c820c45da8b94803e9a4ad44b254a604acfda40354db4a6aeL-1",
                    "lines": [
                      {
                        "line": "n1 = *v;\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "free(v);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, *v);\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, n1);\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/asfadmin/ASF_MapReady/commit/9eb2f300779a07e77127389e43421a6ca58a092c?diff=split#diff-6f0d067854363ef95657748d5a96a50d5130d0cfe620351ab6c8ae1a17933b32L-1",
                    "lines": [
                      {
                        "line": "FREE(out_file);\n",
                        "lineNumber": 2686,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 104,
                "cwe": [
                  "CWE-416"
                ]
              }
            },
            {
              "id": "cpp/UseAfterFree/test",
              "name": "UseAfterFree/test",
              "shortDescription": {
                "text": "Use After Free"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nMemory allocated on the heap is released, and then subsequently referenced. This can cause a program to crash, use unexpected values, or execute code.\n\n\n## Best practices for prevention\n* Store a new value in pointers immediately after `free()`\n  * The new value can be:\n    * a constant that can be checked (ie, `NULL`), or\n    * a reference to another valid object.\n\n\n## References\n\n* [CERT MEM01-C](https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152148)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "UseAfterFree",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jlmucb/cloudproxy/commit/4437ebf34a64c0ddadfbcdf834964c1f7680678b?diff=split#diff-fd44eb004baf0c6cd208492e38bd37d52740af1725f131e3058575d98686b723L-1",
                    "lines": [
                      {
                        "line": "out->assign((const char*)buf, n);\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/feiskyer/linux-perf-examples/commit/5c167c49f2fa8b11d7d4229f1d7de703472280de?diff=split#diff-4ac62d0e3e70045c820c45da8b94803e9a4ad44b254a604acfda40354db4a6aeL-1",
                    "lines": [
                      {
                        "line": "n1 = *v;\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "free(v);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, *v);\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, n1);\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/asfadmin/ASF_MapReady/commit/9eb2f300779a07e77127389e43421a6ca58a092c?diff=split#diff-6f0d067854363ef95657748d5a96a50d5130d0cfe620351ab6c8ae1a17933b32L-1",
                    "lines": [
                      {
                        "line": "FREE(out_file);\n",
                        "lineNumber": 2686,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 104,
                "cwe": [
                  "CWE-416"
                ]
              }
            },
            {
              "id": "java/XXE",
              "name": "XXE",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "XXE",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/vespa-engine/vespa/commit/610f41d9904de453ed3e4bfbbfb50700463fd670?diff=split#diff-d7960aa3dee113734822a81c452cf2c7579d243ab7760f7259ef060bb94179a7L-1",
                    "lines": [
                      {
                        "line": "        DocumentBuilder docBuilder = null;\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        try { // XXE prevention\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "            dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "        catch (ParserConfigurationException e) {\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "            throw new IllegalStateException(\"Could not disallow-doctype-decl\", e);\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "        DocumentBuilder docBuilder;\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "            docBuilder = dbf.newDocumentBuilder();\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "            Document doc = docBuilder.parse(file);\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wso2/carbon-device-mgt/commit/ee5b077e6a1fd074473adfe76905844d7bb3c6e1?diff=split#diff-dacd782d0ff47d46f712a406b833ebc0b402f99f819fd4953469687234066474L-1",
                    "lines": [
                      {
                        "line": "import javax.xml.XMLConstants;\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "import javax.xml.parsers.DocumentBuilder;\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "import javax.xml.parsers.DocumentBuilderFactory;\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "import java.io.File;\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class DataPublisherUtil {\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public static Document convertToDocument(File file) throws DataPublisherConfigurationException {\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        factory.setNamespaceAware(true);\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        try {\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "            DocumentBuilder docBuilder = factory.newDocumentBuilder();\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "            factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return docBuilder.parse(file);\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenOLAT/OpenOLAT/commit/a89d6adbb1ce9da9af7c987b61f19260fc4e0e6c?diff=split#diff-dcc6f458c28dadd022401d2b8275867afc3a023bfd3135b73ff1290661af516bL-1",
                    "lines": [
                      {
                        "line": "\tparser.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\n",
                        "lineNumber": 120,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tparser.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);\n",
                        "lineNumber": 121,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tparser.setFeature(\"http://xml.org/sax/features/validation\", false);\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "} catch(Exception e) {\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tlog.error(\"Cannot deactivate validation\", e);\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "parser.parse(new InputSource(stream));\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 58,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "cpp/DerefNull",
              "name": "DerefNull",
              "shortDescription": {
                "text": "Dereference of a NULL Pointer"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\nDereferencing a NULL pointer typically results in a program crash or other undefined behaviour. Pointers can be set to NULL a variety of ways, including by the retrun value of standard library functions, often in the case of an error with that function. Pointers may also be initalised to NULL, and subsequently not reassigned on some execution paths before being derefernced. Where it is possible a pointer is NULL, it is best to check before derefencing it.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "DerefNull",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/cctz/commit/61415a09a2aaad3a52047dd88f003db01ddfbdde?diff=split#diff-b9e810cccf931cbb5c6e498b7804d2ec87cdfcc660463bfb4cdd5c49c9269147L-1",
                    "lines": [
                      {
                        "line": "_dupenv_s(*tz_env, nullptr, \"TZ\");\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "_dupenv_s(&tz_env, nullptr, \"TZ\");\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RaJiska/JAPM/commit/e717737ffd5237ae384072e6c523d1e11dd9ef16?diff=split#diff-612b7cf36bdcb89724f956c18aff3c9296d7d9f44eca7869b1d10da0b7cd1705L-1",
                    "lines": [
                      {
                        "line": "if (*((found = strrchr(path, '\\\\')) + 1) == 0)\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if ((found = strrchr(path, '\\\\')) && *found + 1 == 0)\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t*found = 0;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GNOME/gnumeric/commit/5d6b0e0e854f143d5fa7062495df812933149bc4?diff=split#diff-4bf0193427fd407708e50a71b61d9b6bcac32cab136702e69dd71341ffa22f10L-1",
                    "lines": [
                      {
                        "line": "if (tmp[9] == 0)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (tmp && tmp[9] == 0)\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-476"
                ]
              }
            },
            {
              "id": "php/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "php",
                  "XSS",
                  "Security",
                  "SourceServer",
                  "SourceHttpHeader",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/pimcore/pimcore/commit/f69f17bbc9d622d7ba07fc07e3521814f400f6d9?diff=split#diff-00647d29b7fef0478c25db2de937530be2b69bdf3c46a1b18c3e74374a73d612L-1",
                    "lines": [
                      {
                        "line": "<title><?php echo $_SERVER[\"HTTP_HOST\"] ?> :: Pimcore</title>\r\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "<title><?php echo htmlentities($_SERVER[\"HTTP_HOST\"], ENT_QUOTES, 'UTF-8') ?> :: Pimcore</title>\r\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kirilkirkov/Ecommerce-CodeIgniter-Bootstrap/commit/7c3c32d6526268b1c78d6d5741361e79292e9c22?diff=split#diff-99e6b3a40f1cb571bd9d3b3a1f160a06445879fba1ab3228ff21b21595a48effL-1",
                    "lines": [
                      {
                        "line": "<input type=\"hidden\" name=\"old_image\" value=\"<?= $_POST['image'] ?>\">\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "<input type=\"hidden\" name=\"old_image\" value=\"<?= htmlspecialchars($_POST['image']) ?>\">\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/thulioph/world-cup-now/commit/66fd6988aa1d512ee258025258406a89eb0ccbe7?diff=split#diff-f77e334f16b0d13e3d3f176cc6cb8742c2094ea0062de1a6b2ae621e6ac51608L-1",
                    "lines": [
                      {
                        "line": " header('Content-type: text/html; charset=utf-8');\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": " header('Content-type: application/json; charset=utf-8');\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "$url = \"http://globoesporte.globo.com/temporeal/futebol/central.json\";\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "$dados = file_get_contents($url);\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "echo $dados;\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 73,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "php/XxePrePHP8",
              "name": "XxePrePHP8",
              "shortDescription": {
                "text": "XML External Entity (XXE) Injection"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "php",
                  "XxePrePHP8",
                  "Security",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceNetworkRequest",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/GetSimpleCMS/GetSimpleCMS/commit/4c44b947a3ebb94fc14e972d990e717add1c0b7c?diff=split#diff-217f1bbd5df9367c257f48b2e06e68dd0aea26ad58d70943d71671d753f14aa5L-1",
                    "lines": [
                      {
                        "line": "\t// disable libxml error output\r\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlibxml_use_internal_errors();\r\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// disable entity loading to avoid xxe\r\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlibxml_disable_entity_loader();\r\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t#step 1 - check post for data\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (!isset($_POST['data'])) {\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t$message = array('status' => 'error', 'message' => i18n_r('API_ERR_MISSINGPARAM'));\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\techo json_encode($message);\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\texit;\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t};\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t#step 2 - setup request\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t$in = simplexml_load_string($_POST['data'], 'SimpleXMLExtended', LIBXML_NOCDATA);\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fusionpbx/fusionpbx/commit/71479d69fccdad4a55a48b742b4886e11efcfd52?diff=split#diff-55e2b69ed40892b979338c0c785a1917404dd4d70d276586a10f1b2708cf63b7L-1",
                    "lines": [
                      {
                        "line": "\t\t\t\t$xml = simplexml_load_string($xml_string);\n",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t//disable xml entities\n",
                        "lineNumber": 106,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\tlibxml_disable_entity_loader(true);\n",
                        "lineNumber": 107,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 108,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t//load the string into an xml object\n",
                        "lineNumber": 109,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t$xml = simplexml_load_string($xml_string, 'SimpleXMLElement', LIBXML_NOCDATA);\n",
                        "lineNumber": 110,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 111,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t//send info to the log\n",
                        "lineNumber": 112,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zendframework/zend-soap/commit/3129a3e572f26a7f672393c49ef4ee2e6113a747?diff=split#diff-3eea692e203ad76df7232885d33c0dc396c9c4c807c5ce1ded7b03663c04882bL-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 662,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            libxml_disable_entity_loader(true);\n",
                        "lineNumber": 662,
                        "lineChange": "added"
                      },
                      {
                        "line": "            $dom = new DOMDocument();\n",
                        "lineNumber": 663,
                        "lineChange": "none"
                      },
                      {
                        "line": "            if(strlen($xml) == 0 || !$dom->loadXML($xml)) {\n",
                        "lineNumber": 664,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "python/InsecureXmlParser",
              "name": "InsecureXmlParser",
              "shortDescription": {
                "text": "Insecure Xml Parser"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nFor convenience, XML documents can use system identifiers to enable access to stored content, whether local or remote. The XML processor then uses the system identifier to access the resource rather than using the URI. When this weakness exists, the application permits user-supplied data, which could include the address of an XML external identity, to be passed directly to the XML parser. The application will then attempt to retrieve documents from outside of secure, controlled areas.\n\nAttackers can exploit this weakness to expose sensitive data, execute port scanning on the server side, or launch a denial-of-service attack (DoS) such as Billion Laughs.\n\n## Best practices for prevention\n* Avoid using vulnerable APIs\n* When possible, disable loading of data from external entities. The method of doing this will vary based on the language and XML parser being used.\n* Use a local, static document type definitions (DTDs) and ensure that external DTDs are disallowed entirely.\n* If user input cannot be avoided, perform validation against an allowlist of possible data sources. However, as long as external DTDs are allowed, XML code remains inherently vulnerable to attacks exploiting this weakness.\n\n\n## References\n* [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureXmlParser",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/DefectDojo/django-DefectDojo/commit/3bb6173ce1db621ebd99a1cb361e7da7cbaf1925?diff=split#diff-ef1e087c75390ecb8efe1b3990802470d172cb27c62e76392ba87bdae855ca2cL-1",
                    "lines": [
                      {
                        "line": "from xml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from xml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from defusedxml.dom import NamespaceErr\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "from defusedxml.etree import ElementTree\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "from datetime import datetime\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "from dojo.models import Finding\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "class CheckmarxXMLParser(object):\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def __init__(self, filename, test):\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cxscan = ElementTree.parse(filename)\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/tableau/server-client-python/commit/921d554e550cb494d71424750459dbc1348e6b13?diff=split#diff-1817d191ee3dba3576772719ed5f6fdf9dac5891ad290947042b6c496b544214L-1",
                    "lines": [
                      {
                        "line": "import xml.etree.ElementTree as ET\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "from defusedxml.ElementTree import fromstring\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "class TagItem(object):\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @classmethod\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "    def from_response(cls, resp, ns):\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return cls.from_xml_element(ET.fromstring(resp), ns)\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return cls.from_xml_element(fromstring(resp), ns)\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GeoNode/geonode/commit/084bbf0b44a3be4e7e97f8ec02c3b350163fc620?diff=split#diff-709ba0472e42f6d983a47dce6d65992b594de32b9db5ffeb056f5045bde5c8ffL-1",
                    "lines": [
                      {
                        "line": "                import xml.etree.ElementTree as ET\n",
                        "lineNumber": 473,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                from defusedxml import lxml as dlxml\n",
                        "lineNumber": 473,
                        "lineChange": "added"
                      },
                      {
                        "line": "                namespaces = {'wms': 'http://www.opengis.net/wms',\n",
                        "lineNumber": 474,
                        "lineChange": "none"
                      },
                      {
                        "line": "                              'xlink': 'http://www.w3.org/1999/xlink',\n",
                        "lineNumber": 475,
                        "lineChange": "none"
                      },
                      {
                        "line": "                              'xsi': 'http://www.w3.org/2001/XMLSchema-instance'}\n",
                        "lineNumber": 476,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 477,
                        "lineChange": "none"
                      },
                      {
                        "line": "                e = ET.fromstring(wms_capabilities)\n",
                        "lineNumber": 478,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                e = dlxml.fromstring(wms_capabilities)\n",
                        "lineNumber": 478,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-611"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1",
                    "lines": [
                      {
                        "line": "    return os.path.join(DATAROOT, obj_path)\n",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return safe_join(DATAROOT, obj_path)\n",
                        "lineNumber": 123,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_index_absolute_path(index):\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return os.path.join(INDEXDIR, index)\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "@scope_blueprint.route('/obj/<path:obj_path>')\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object_src_http(obj_path):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path = _get_obj_absolute_path(obj_path)\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    headers = Headers()\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # With add_etags=True, conditional=True\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Flask should be smart enough to do 304 Not Modified\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = send_file(path,\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "destdir = None\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "if sys.argv[1:]:\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "os.chdir(wdir)\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "tar = src + \".tar\"\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "gz = tar + \".gz\"\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "tgz = src + \".tgz\"\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"source:\", src\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"dest:\", tgz\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 180,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/DoubleFree/test",
              "name": "DoubleFree/test",
              "shortDescription": {
                "text": "Double Free"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nThe same memory address is released more than once, (ie - `free()` or `delete` is called on the same value multiple times).\n\nThis can corrupt the program's memory management data structures, and subsequently cause the program to crash, or lead to undefined behaviour, such as allowing two separate calls to `malloc()` to return the same address.\n\nThis in turn can lead to buffer overflow vulnerabilities, as well as undefined behaviour.\n\n## Best practices for prevention\n* Store a new value in pointers immediately after `free()`\n  * The new value can be:\n    * a constant that can be checked (ie, `NULL`), or\n    * a reference to another valid object.\n\n\n## References\n\n* [CERT MEM01-C](https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152148)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "DoubleFree",
                  "Security",
                  "InTest",
                  "FreeResource"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ElektraInitiative/libelektra/commit/e6edbaec27d9752248be7638aed92f666e7b15bc?diff=split#diff-961d573cf3f4b1faa46e6461a1a0827faec87503c558a4c238c5f612f0873695L-1",
                    "lines": [
                      {
                        "line": "\t\t\tfree (value);\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tkeyDel (read);\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\treturn -1;\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t// TODO: check for null keys\n",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tkeySetString(read, value);\n",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tksAppendKey (returned, read);\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfree(value);\n",
                        "lineNumber": 64,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tlen=0;\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 66,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cvxgrp/qcml/commit/148b45fbab9f797b3679506dbd156059d015e546?diff=split#diff-73f629e733c4fe4ae4aa9228e87de2e9c994e46da7967e5d034db487a21227caL-1",
                    "lines": [
                      {
                        "line": "if (data->Ai) free(data->Ai);\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (data->Ax) free(data->Ax);\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (data->Ap) free(data->Ap);\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (data->Ai) free(data->Ai);\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/hturner08/pystructures/commit/045533563d1d2cf533f71cd3c4a8fc8e24208661?diff=split#diff-626f2ad883e97e722829bc18581b68f8f1a394e5ec5a1c72b5e28f55f0870026L-1",
                    "lines": [
                      {
                        "line": "free(stack);\r\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "free(tree);\r\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 37,
                "cwe": [
                  "CWE-415"
                ]
              }
            },
            {
              "id": "cpp/ImproperNullTermination",
              "name": "ImproperNullTermination",
              "shortDescription": {
                "text": "Improper Null Termination"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nImproper null termination occurs when a character string's ending null character is omitted or outside the allocated memory for the string. This typically leads to information leaks or buffer overflows and occurs when:\n* There is an off-by-one error which leads to the null character being out of bounds\n* Raw data is passed to functions expecting strings. This can lead to out of bounds reading or writing (e.g., strlen / strcpy using raw data)\n\n## Best practices for prevention\n* Use functions that ensure proper null termination. Pay attention to the way the string functions affect the ending null character (e.g., strncpy doesn't necessarily ensure null termination)\n* Avoid passing raw data to functions expecting strings. If this can't be avoided ensure there is proper null termination (e.g., write a null character at the end of the buffer)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "ImproperNullTermination",
                  "Security",
                  "SourceImproperNullTermination",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aquynh/capstone/commit/22a5a761d8be37bab9d3d507841874f19625d3e9?diff=split#diff-66a380d2b83d14e1b2cc0743651892bfb6c73490ea39ba8b6eb027ddd1cbf97eL-1",
                    "lines": [
                      {
                        "line": "strncpy(insn->mnemonic, buffer, sizeof(insn->mnemonic) - 1);\n",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "insn->mnemonic[sizeof(insn->mnemonic) - 1] = '\\0';\n",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(insn->mnemonic, buffer);\n",
                        "lineNumber": 314,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uudiin/raspd/commit/39170d13306259d98816566a3ac30afa138c70ba?diff=split#diff-fb2adfba4fdb4b1695553f0e720141b28d8026ad94a502f3fd7256df5a979d6cL-1",
                    "lines": [
                      {
                        "line": "#include <string.h>\r\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <errno.h>\r\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <getopt.h>\r\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <unistd.h>\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/socket.h>\r\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/un.h>\r\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sock.h>\r\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "#define BUF_SIZE    1024\r\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "int main(int argc, char *argv[])\r\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\r\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    static struct option options[] = {\r\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { \"unix\", required_argument, NULL, 'u' },\r\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { 0, 0, 0, 0 }\r\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    };\r\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int c;\r\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char *unixsock = NULL;\r\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int fd;\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    union sockaddr_u addr;\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socklen_t len;\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char buffer[BUF_SIZE];\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int err;\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while ((c = getopt_long(argc, argv, \"du:\", options, NULL)) != -1) {\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (c) {\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case 'u': unixsock = optarg; break;\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\r\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (unixsock == NULL) {\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fprintf(stderr, \"must be set the unixsock socket file\");\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0)\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (strlen(unixsock) >= sizeof(addr.un.sun_path))\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    memset(&addr, 0, sizeof(addr));\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    addr.un.sun_family = AF_UNIX;\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strncpy(addr.un.sun_path, unixsock, sizeof(addr.un.sun_path));\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    len = SUN_LEN(&addr.un);\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (connect(fd, &addr.sockaddr, len) < 0)\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /* main loop */\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while (fgets(buffer, sizeof(buffer), stdin) != NULL) {\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        size_t size = strlen(buffer);\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int retval;\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = write(fd, buffer, size);\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval != size)\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fprintf(stderr, \"send date error, err = %d\\n\", retval);\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = read(fd, buffer, sizeof(buffer));\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval)\r\n",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (retval) {\r\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "            buffer[retval] = '\\0';\r\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/swoole/swoole-src/commit/77fd91854b865bc6fba16aca6adf699b60a81603?diff=split#diff-9188d03744376460f57ecbe5914ccfe8f20ca6ef14d0d12100dcd8d738c0ad71L-1",
                    "lines": [
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, PATH_MAX - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, sizeof(buf) - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if (byte <= 0) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return false;\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 155,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        strcpy(task.filename, buf);\n",
                        "lineNumber": 156,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        task.filename[byte] = 0;\n",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 158,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        buf[byte] = 0;\n",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "        swoole_strlcpy(task.filename, buf, sizeof(task.filename));\n",
                        "lineNumber": 156,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 114,
                "cwe": [
                  "CWE-170"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow",
              "name": "IntegerOverflow",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "cpp/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/intel-isl/Open3D/commit/ebc639913ff128060fd2def3446f6caa14d10859?diff=split#diff-20a35acdf4289c8de90812539cbe0547d61890ab0415c544171ed8acd6833056L-1",
                    "lines": [
                      {
                        "line": "FILE *f = fopen(binname.c_str(), \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *f = utility::filesystem::FOpen(binname, \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/intel-isl/Open3D/commit/ebc639913ff128060fd2def3446f6caa14d10859?diff=split#diff-20a35acdf4289c8de90812539cbe0547d61890ab0415c544171ed8acd6833056L-1",
                    "lines": [
                      {
                        "line": "FILE *f = fopen(binname.c_str(), \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *f = utility::filesystem::FOpen(binname, \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-23"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "cpp/BufferOverflow",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2)",
              "[memcpy](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 3,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0cd8e10b450d3dcb5a8adf6f2e66901b180d01bdd925d7188d2e51b2bf98bcda",
            "1": "08510d78.7626d066.d513f0d7.cc899355.06eccdb7.6a274ab8.30ad82ea.38cfc753.08510d78.7626d066.d513f0d7.3f8c3213.06eccdb7.6a274ab8.30ad82ea.38cfc753"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/CMissingClose",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "File opened by fopen may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[fopen](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "net-mgmt/rotorouter/files/rotorouter.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 346,
                  "endLine": 346,
                  "startColumn": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b645082e33f2beb35e1e86bf5a422a59d9f5f6bd0adcafc47a66e983981e4f5d",
            "1": "6a777357.957caf25.813fc897.219dec78.9640c776.337fbc88.2c7924fc.a8dda691.1014b114.089a6d1e.ebf9db70.74c275cc.425f85cc.05942b75.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "net-mgmt/rotorouter/files/rotorouter.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/CMissingClose",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "File opened by fopen may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[fopen](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "www/p5-CGI-SpeedyCGI/files/speedy_dump.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 14,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "415ded1c5573efc2babd6b569883b7a7183d9b3389af5316abad698abf82c4b4",
            "1": "6a777357.875f93bf.f6a34460.219dec78.b263280c.6a274ab8.30ad82ea.a8dda691.6a777357.67a80300.a1f15da6.219dec78.eeb3a2de.e723426a.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "www/p5-CGI-SpeedyCGI/files/speedy_dump.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 354,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UnsafeFunctionStringHandling",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "markdown": "Using {0} can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "arguments": [
              "[strcpy](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mail/xpbiff/files/LocPixmap.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 211,
                  "endLine": 211,
                  "startColumn": 5,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b795bdc5c7c490acd5e86b45830616dafeceda14d57ef2ef5c7e0fdc4cd4559",
            "1": "dec24e63.957caf25.813fc897.ba24df1d.076ec0cf.f15d7a3a.6a6cb5a6.fa12b778.dec24e63.957caf25.813fc897.ba24df1d.076ec0cf.f15d7a3a.6a6cb5a6.fa12b778"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "mail/xpbiff/files/LocPixmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 211,
                            "endLine": 211,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UnsafeFunctionStringHandling",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "markdown": "Using {0} can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "arguments": [
              "[strcpy](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "print/hplip-plugin/files/wrap.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 10,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5fd286702ea40ab5f172c1de00d270a572061ff9aa9248afca04174232d03a15",
            "1": "dec24e63.c1126a25.412e46b6.93cc8d4d.031a268a.f6fa4e21.1e451703.9d169074.dec24e63.c1126a25.412e46b6.93cc8d4d.031a268a.f6fa4e21.1e451703.9d169074"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "print/hplip-plugin/files/wrap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UnsafeFunctionStringHandling",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Using sprintf can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative snprintf instead.",
            "markdown": "Using {0} can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative snprintf instead.",
            "arguments": [
              "[sprintf](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "startColumn": 2,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae298ca7b51f245802f82605d6dc503d3e2c0a76d5ae3f3b8f26f2c02078dde6",
            "1": "fe60298e.a5b374ad.66e58c8d.ed202363.86be2173.6a274ab8.30ad82ea.6a3534e0.fe60298e.277c621c.66e58c8d.ed202363.5ef953d3.34c6cc13.30ad82ea.6862befc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "ports-mgmt/pkg_cleanup/files/pkg_cleanup.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in fprintf after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[fprintf](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 48,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb0eee90e67677f97ae70fb83bfaeed7ca49336bda283c0fb845caa82aa16878",
            "1": "57664a44.277c621c.c690af74.1409790a.5ef953d3.34c6cc13.1e451703.e8c2648a.3b4b9534.277c621c.cc633863.909eb299.5ef953d3.34c6cc13.9957b03c.e73a706e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 48,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in fprintf after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[fprintf](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 48,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec9ee323d27c18e57c98e9d776a73878f3437c38db157170ccaaf8702c92bdce",
            "1": "57664a44.277c621c.c690af74.1409790a.5ef953d3.34c6cc13.1e451703.e8c2648a.3b4b9534.277c621c.cc633863.909eb299.5ef953d3.34c6cc13.9957b03c.e73a706e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 48,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 31,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dca2768ee14b5ba1048a62db79ed7b21a19c59d0b161c2e26452767698e94fd4",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 31,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 175,
                  "endLine": 175,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3bbd6bdd8d185cc3ef9964db7d980c2f9b800082216b8c2cbfa6932db2f045b0",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.5b68209e.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 177,
                  "endLine": 177,
                  "startColumn": 10,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7160527d7ff2b687f69b93b864a8b6b096fa409ae34f50a4ecfe3877e20f6da1",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.277c621c.66e58c8d.4f2d4bc2.09f8ba64.34c6cc13.6a6cb5a6.e73a706e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 10,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "endLine": 179,
                  "startColumn": 11,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d19d50ad1687485edc625afc2da97e9eebff8c75afadd428317969174a53fbba",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.5b68209e.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.074a3eb3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 11,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pam_pwdfile/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "endLine": 179,
                  "startColumn": 33,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d19d50ad1687485edc625afc2da97e9eebff8c75afadd428317969174a53fbba",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.09f8ba64.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pam_pwdfile/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 31,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b50f62732a06298b1466e14a9563bccca887f4b00de7c3a97c45056827b1d49",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 31,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 175,
                  "endLine": 175,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ad986e3b72f469308de079bae20b68618af408a992e41903fcdc5533eb67b9d",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.5b68209e.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 7,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 177,
                  "endLine": 177,
                  "startColumn": 10,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b421221c01f875f71a0cba73e29b96e38f18a467657962ac0eaa8e3f517ecfd8",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.277c621c.66e58c8d.4f2d4bc2.09f8ba64.34c6cc13.6a6cb5a6.e73a706e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 10,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "endLine": 179,
                  "startColumn": 11,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb8df980388cd120be8d8a65b61bcf5007c1f82a7b9703ed2c0ef40cee2a76bb",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.5b68209e.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.f5fd3da5.34c6cc13.1e451703.074a3eb3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 11,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Use after free. reply is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[reply](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/pecl-pam/files/_pam_macros.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "endLine": 179,
                  "startColumn": 33,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb8df980388cd120be8d8a65b61bcf5007c1f82a7b9703ed2c0ef40cee2a76bb",
            "1": "4e488ef6.76503df6.66e58c8d.4f2d4bc2.e20dc99f.34c6cc13.111302b1.074a3eb3.57664a44.76503df6.66e58c8d.4f2d4bc2.09f8ba64.34c6cc13.1e451703.e8c2648a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 179,
                            "endLine": 179,
                            "startColumn": 33,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/pecl-pam/files/_pam_macros.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 572,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Use after free. procs is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[procs](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 379,
                  "endLine": 379,
                  "startColumn": 3,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c09b9516f018277353d39a0eb64afe4dc744e432f737c04ad329cd20c4d9cba8",
            "1": "d62fc9d2.76503df6.a72d066c.234d7fe8.baf5e6ff.51211531.5db3d4a6.88cb2d37.9642845f.76503df6.a72d066c.665a1428.baf5e6ff.51211531.9957b03c.d26540ab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 379,
                            "endLine": 379,
                            "startColumn": 3,
                            "endColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 379,
                            "endLine": 379,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Use after free. procs is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[procs](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 380,
                  "endLine": 380,
                  "startColumn": 11,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9cbfc5cfc16c1aec603c07f018beb48f8f1881748674736ae301720f58cf3afa",
            "1": "806fabc4.76503df6.a72d066c.cc899355.baf5e6ff.34c6cc13.5db3d4a6.88cb2d37.9642845f.76503df6.a72d066c.665a1428.baf5e6ff.34c6cc13.5db3d4a6.88cb2d37"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Use after free. procs is used in _ after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[procs](0)",
              "[_](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 391,
                  "endLine": 391,
                  "startColumn": 10,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb2616790f18917eee988238522345857f375587d2da28f8b5e82b03766dbc79",
            "1": "806fabc4.76503df6.a72d066c.50d7a7fa.add3e9a5.34c6cc13.e66684c9.7dfdf99b.9642845f.76503df6.a72d066c.665a1428.baf5e6ff.34c6cc13.e66684c9.7dfdf99b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 391,
                            "endLine": 391,
                            "startColumn": 10,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/XXE",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from {0} {1} into {2}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[parse](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "textproc/jaxup/files/DOMXUpdater.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 17,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4e641f1910188f178253a02e7e3b7842ef8c2b1be8b50dee973e25adde79eaeb",
            "1": "682e2f2f.ff76257e.d6688933.4d1392c1.1672ff53.a1cba6c8.df7e59ba.46070e24.8df8fa68.7f413d6f.74f7de8b.66fbfc51.d31a8364.34c3b532.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 17,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/XXE",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into parse, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "markdown": "Unsanitized input from {0} {1} into {2}, which allows expansion of external entity references. This may result in a XXE attack leading to the disclosure of confidential data or denial of service.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[parse](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "textproc/jaxup/files/DOMXUpdater.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 23,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3b7736ef9ca3990259f01270773fec189abb3f1c5f5207330d0736905da8239",
            "1": "ac4e7c8b.13f1e0ea.1f1da0ad.4d1392c1.025462d2.b051b3b8.df7e59ba.f338e593.8df8fa68.5302d6c6.74f7de8b.66fbfc51.d31a8364.34c3b532.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 37,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "textproc/jaxup/files/DOMXUpdater.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned the return value of a standard library function that may return NULL and is not checked before use. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audio/xcdplayer/files/cdrom_freebsd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "245bd6155daf8d0a942f1f29e5bd0ea518e3bc230348111294303bdd077dc7bb",
            "1": "7a566381.0d254423.ff3a56d4.27f9dbc8.50cffa9e.2f4e1548.5db3d4a6.ba712ce8.7a566381.0d254423.ff3a56d4.27f9dbc8.50cffa9e.f276d6e3.5db3d4a6.ba712ce8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "audio/xcdplayer/files/cdrom_freebsd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 9,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "php/XSS",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[the echo statement](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/mailzu/files/patch-templates_auth.template.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 7,
                  "startColumn": 46,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e38b4f7aa4f3c60b6ec539f1ba5cf06951096eb5ecf4f5d2e68c09cee08f364c",
            "1": "396d20b0.9dc256f1.48195631.1f144feb.a6b3be91.2fe830a8.20745bd6.f43a205f.396d20b0.9dc256f1.1dd19ceb.1f144feb.a6b3be91.2fe830a8.64f8ed94.f43a205f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 46,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 46,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 46,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "php/XSS",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[the echo statement](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/mailzu/files/patch-templates_auth.template.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 54,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c429d1a393f3eec5191282840e6cace2a2bcfe9b8eb00de9f6ca3916852f054d",
            "1": "396d20b0.9dc256f1.48195631.1f144feb.a6b3be91.2fe830a8.20745bd6.f43a205f.396d20b0.9dc256f1.1dd19ceb.1f144feb.a6b3be91.2fe830a8.64f8ed94.f43a205f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 54,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 54,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_auth.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 54,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "php/XSS",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[the echo statement](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 57,
                  "endColumn": 77
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94a980a36a7dd12e1fee0620afee1ce39ffece00a1331fe7121cd136259f45a4",
            "1": "396d20b0.9dc256f1.48195631.1f144feb.62d855b0.2f4e1548.20745bd6.f43a205f.396d20b0.9dc256f1.1dd19ceb.1f144feb.62d855b0.2fe830a8.20745bd6.f43a205f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 57,
                            "endColumn": 77
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "php/XSS",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into the echo statement, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1)",
              "[the echo statement](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 60,
                  "endColumn": 80
                }
              }
            }
          ],
          "fingerprints": {
            "0": "167f80383c8b22420b09d0a804bc5daa22d0ecf15714f6f538b92acff4f152af",
            "1": "396d20b0.9dc256f1.48195631.1f144feb.62d855b0.2f4e1548.20745bd6.f43a205f.396d20b0.9dc256f1.1dd19ceb.1f144feb.62d855b0.2fe830a8.20745bd6.f43a205f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 60,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 60,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/mailzu/files/patch-templates_sendmail.template.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 60,
                            "endColumn": 80
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "php/XxePrePHP8",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows to SimpleXMLElement. This may result in an XXE vulnerability. You may be vulnerable if using an old version of PHP (<8.0)",
            "markdown": "Unsanitized input from {0} {1} to {2}. This may result in an XXE vulnerability. You may be vulnerable if using an old version of PHP (<8.0)",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1)",
              "[SimpleXMLElement](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mail/roundcube/files/spellchecker.php",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 8,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa09adb8fee691b8de36f46833b6c693ddd56caee09994f02267212dbbfe63c9",
            "1": "efb3a528.c55d47e1.fd02baaa.7bd21c24.445dbdd2.c8ccaa05.03d204b9.be170d97.86be1e70.c55d47e1.fd02baaa.374ca892.ad4f7026.986af9f9.79ef9bba.f43a205f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "mail/roundcube/files/spellchecker.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "mail/roundcube/files/spellchecker.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 29,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "mail/roundcube/files/spellchecker.php",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 8,
                            "endColumn": 62
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/InsecureXmlParser",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "xml.etree.ElementTree.parse is considered insecure. Use an analog from the defusedxml package.",
            "markdown": "{0} is considered insecure. Use an analog from the defusedxml package.",
            "arguments": [
              "[xml.etree.ElementTree.parse](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/vuxml/files/extra-validation.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 8,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81f2570f771da182e6c8e4bc139284d6069cdd97a9dd054dddc1450acd355a19",
            "1": "a6b41d6e.d8435ddf.79e62dc9.139c59a8.933de8ea.a1632d4f.a2237efa.f46ed94e.a6b41d6e.d8435ddf.79e62dc9.139c59a8.933de8ea.a1632d4f.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/vuxml/files/extra-validation.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 502,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into zipfile.ZipFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[zipfile.ZipFile](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lang/linux-dotnet-sdk/files/extract.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 10,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a1202bdb29efa417e1d556aef396a1d02146782f121076f239472e829d27293",
            "1": "b8f26307.d3312ed0.187bf175.1e2c0147.ac5e08ad.ba14daf2.a2237efa.f46ed94e.b8f26307.9d7bdf1b.187bf175.139c59a8.ac5e08ad.3b0605d1.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 10,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23)",
              "[open](24)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lang/linux-dotnet-sdk/files/extract.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 22,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4bb972a8068f3d617cc2fb8223962c4bc324ed0aa796187eb42434c740016dd7",
            "1": "59b2cac1.09b47a5b.187bf175.03d71cbf.f3eda546.addfbd48.624bb7d5.0990edd8.59b2cac1.f4a1ab20.187bf175.f6463326.4608c58f.73cfdf26.96ded105.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 10,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 18,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 57,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 22,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 22,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lang/linux-dotnet-sdk/files/extract.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176,
                  "startColumn": 4,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c504cf40d4b14aafed49b9026deb82731353f55c38cd12d7d3422577673ffd21",
            "1": "a6b41d6e.36528b99.79e62dc9.139c59a8.4608c58f.ba14daf2.cb97864c.6aac30d8.5c0498bf.36528b99.19e350fe.b5f6ec27.4608c58f.73cfdf26.cb97864c.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 14,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 14,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 4,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/DoubleFree/test",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Potential double call to free. procs may have already been freed by call to free.",
            "markdown": "Potential double {0}. {1} may have already been freed by {2}.",
            "arguments": [
              "[call to free](0)",
              "[procs](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 382,
                  "endLine": 382,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5292990e505de39abac732fdac4a02846ab3e203b461ed47aadd2348c1020bf8",
            "1": "d62fc9d2.76503df6.a72d066c.1409790a.74832d3e.34c6cc13.df7e59ba.074a3eb3.806fabc4.76503df6.a72d066c.985b9e45.fd550985.51211531.5db3d4a6.1b29a02c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 382,
                            "endLine": 382,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/DoubleFree/test",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Potential double call to free. procs may have already been freed by call to free.",
            "markdown": "Potential double {0}. {1} may have already been freed by {2}.",
            "arguments": [
              "[call to free](0)",
              "[procs](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 392,
                  "endLine": 392,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9cd2718e0693e27730def609575813a9ee4c66a5bff78f30005292fa178d40e",
            "1": "806fabc4.76503df6.a72d066c.50d7a7fa.add3e9a5.34c6cc13.1e451703.074a3eb3.806fabc4.76503df6.a72d066c.cc899355.baf5e6ff.34c6cc13.e66684c9.1b29a02c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 392,
                            "endLine": 392,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 392,
                            "endLine": 392,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 392,
                            "endLine": 392,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/DoubleFree/test",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Potential double call to free. procs may have already been freed by call to free.",
            "markdown": "Potential double {0}. {1} may have already been freed by {2}.",
            "arguments": [
              "[call to free](0)",
              "[procs](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 400,
                  "endLine": 400,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bbb319c6183dfb0e07aae72929917d26cc9b8efc400b9aa5992831d9cdcc3101",
            "1": "d62fc9d2.76503df6.a72d066c.234d7fe8.baf5e6ff.51211531.5db3d4a6.88cb2d37.d62fc9d2.76503df6.a72d066c.51c135b8.baf5e6ff.51211531.6a6cb5a6.1b29a02c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 400,
                            "endLine": 400,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 400,
                            "endLine": 400,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 400,
                            "endLine": 400,
                            "startColumn": 7,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 6,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d0e8529c06af6d09266260a3996c082c09f2d2a51cd31045e9461c7a1006a1ac",
            "1": "2e8ddaeb.f8545116.79e62dc9.1e2c0147.145e7f2f.ba14daf2.081ac3f4.a4830b9a.5c0498bf.94a66729.d421c1a5.e9f38898.145e7f2f.c6c920ac.3d0855c3.d45164bf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[open](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4368419bfee756cd48cdc00afc04cb3e6805e457567bf409850d619b49e08909",
            "1": "2e8ddaeb.f8545116.79e62dc9.1e2c0147.145e7f2f.ba14daf2.081ac3f4.a4830b9a.5c0498bf.36528b99.19e350fe.139c59a8.145e7f2f.c3894a9e.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 26,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 28,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "science/sigrok-firmware-utils/files/parsepe.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into printf, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2)",
              "[printf](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/procmap/files/procmap.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "startColumn": 2,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "88a63f949de7d2130bbfd0f421025129762737e9025f23f24de6543ea4fb4be8",
            "1": "212a653f.e1c7e5d1.7ee8615a.cc899355.baf5e6ff.0df9d02a.9957b03c.19e82119.212a653f.277c621c.8c1a46aa.dc493b4e.baf5e6ff.51211531.50e07b35.19e82119"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 25,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 116,
                            "endLine": 116,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "archivers/unmakeself/files/unmakeself.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 189,
                  "endLine": 189,
                  "startColumn": 13,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d8689b2c35b901e573bb492bde3ccff99a42347413243388e2c33998b67a3e86",
            "1": "08510d78.51c51836.d7144a1f.27f9dbc8.774b487c.e723426a.30ad82ea.619e1fc0.08510d78.51c51836.240040aa.1c706e52.baf5e6ff.51211531.5fb4e6ef.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 12,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 3,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 33,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 11,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "archivers/unmakeself/files/unmakeself.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 189,
                  "endLine": 189,
                  "startColumn": 20,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d8689b2c35b901e573bb492bde3ccff99a42347413243388e2c33998b67a3e86",
            "1": "2d06e3d6.b48109f7.5f6a6691.27f9dbc8.546b9441.9509b717.c1734c27.545e9171.08510d78.51c51836.c341b242.1c706e52.baf5e6ff.51211531.5fb4e6ef.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 171,
                            "endLine": 171,
                            "startColumn": 8,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 12,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 4,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 20,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/fakeident/files/identd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 470,
                  "endLine": 470,
                  "startColumn": 27,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7658ee31ee7a005611f301762ed12a7e0d73a06f1c7374c9511a8479ab8e7ca",
            "1": "08510d78.b93ad0f8.a1f15da6.cc899355.1ea1395f.6a274ab8.9957b03c.348c8065.08510d78.b93ad0f8.a1f15da6.1c706e52.2489db99.e4696292.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 16,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 736,
                            "endLine": 736,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 44,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 470,
                            "endLine": 470,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/fakeident/files/identd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 736,
                  "endLine": 736,
                  "startColumn": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b64b7651e5799596e900d33af14d84134668c17e12429c627b9884c1c2fa5a6",
            "1": "3e21a431.277c621c.7be03776.1c706e52.2489db99.e723426a.30ad82ea.348c8065.08510d78.277c621c.7be03776.1c706e52.2489db99.dbbfb03e.0770d49f.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 16,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 736,
                            "endLine": 736,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 44,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 470,
                            "endLine": 470,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security/fakeident/files/identd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 741,
                  "endLine": 741,
                  "startColumn": 18,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "905cc51081d4a1ea11dd3bf43902c82aab223a380b3b6229d183fdf6c5c12db7",
            "1": "08510d78.b93ad0f8.66e58c8d.6483b32f.774b487c.6a274ab8.30ad82ea.348c8065.08510d78.277c621c.66e58c8d.1c706e52.2489db99.e4696292.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 28,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 20,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 734,
                            "endLine": 734,
                            "startColumn": 16,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 736,
                            "endLine": 736,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 466,
                            "endLine": 466,
                            "startColumn": 44,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "security/fakeident/files/identd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 741,
                            "endLine": 741,
                            "startColumn": 18,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/setcdboot/files/setcdboot.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 155,
                  "startColumn": 19,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f5b872497e176b910cf47d8c2718534c7bc420800fe5b89b6966c967c7a2f3e",
            "1": "1a8cb592.8be50dd5.98501263.47560179.c771237c.50395c30.5db3d4a6.03af88ef.5626aa56.e2d3666d.0b9f33be.8ab4267b.811fb0ca.26771f08.96ea21a8.5d512d01"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 2,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 12,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 41,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 9,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 8,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 2,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 31,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 3,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 155,
                            "endLine": 155,
                            "startColumn": 19,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/setcdboot/files/setcdboot.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "startColumn": 6,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1ec1ec0ead14a506ff22f4c3d245270da8d39c3270d966c9101a80b9ddb227f",
            "1": "f34e3aa2.6030003d.7a55f347.27f9dbc8.1ea1395f.2f4e1548.96ea21a8.f620e7c4.1a8cb592.6f3d8380.0b9f33be.93cc8d4d.baf5e6ff.e4696292.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 2,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 10,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 23,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 28,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 6,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/setcdboot/files/setcdboot.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "startColumn": 20,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1ec1ec0ead14a506ff22f4c3d245270da8d39c3270d966c9101a80b9ddb227f",
            "1": "f34e3aa2.0870a18b.7a55f347.27f9dbc8.1ea1395f.3059ea0c.96ea21a8.c0d33555.f34e3aa2.37d873a2.7a55f347.27f9dbc8.baf5e6ff.e4696292.30ad82ea.619e1fc0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 2,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 10,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 5,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 169,
                            "endLine": 169,
                            "startColumn": 23,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 28,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 6,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 6,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 173,
                            "startColumn": 9,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 173,
                            "startColumn": 4,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 22,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 31,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 365,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2)",
              "[open](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "archivers/unmakeself/files/unmakeself.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22f2e848a7a40a580f5dd6b24f6fcae5ab4e65ced9cf19f7faf67bbdb6c19a99",
            "1": "57664a44.76503df6.554dd003.cc899355.b263280c.34c6cc13.30ad82ea.8dd92b16.84a53940.76503df6.0845c629.1c706e52.d662de49.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "archivers/unmakeself/files/unmakeself.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 222,
                            "endLine": 222,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/devcpu-data-intel/files/ucode-split.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "63af292f79f2256b994f63826eb03c181eccc65b437afb87a477abc2c05464c5",
            "1": "8ee2ac81.31942b92.554dd003.cc899355.774b487c.e723426a.5db3d4a6.619e1fc0.3b4b9534.3e32ade5.a1f15da6.9290282d.d662de49.34c6cc13.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/devcpu-data-intel/files/ucode-split.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/devcpu-data-intel/files/ucode-split.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/devcpu-data-intel/files/ucode-split.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 510,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3)",
              "[open](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/procmap/files/procmap.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d3db5b9b8f91054aac11ca92591997c331959bd54e0518c9ce254c303938c232",
            "1": "0e21ccf6.e1c7e5d1.2eac8021.cc899355.d763f561.6a274ab8.30ad82ea.19e82119.d643080a.2ea08b5a.0845c629.4cbd0ad6.d662de49.12092ed6.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 42,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/procmap/files/procmap.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sysutils/setcdboot/files/setcdboot.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 209,
                  "endLine": 209,
                  "startColumn": 9,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1e14a5beabfe381c90fddc5c1235f201e6e1824ad043ba1cda1aca146e1199d",
            "1": "ed27a822.76503df6.554dd003.cc899355.031a268a.34c6cc13.5db3d4a6.d5de5421.3b4b9534.76503df6.0845c629.9b79c23e.dce0faad.34c6cc13.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sysutils/setcdboot/files/setcdboot.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 209,
                            "endLine": 209,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 14,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into fopen, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitary files.",
            "arguments": [
              "[an environment variable](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[fopen](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "startColumn": 6,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c281b10d532e1d6b9751182a14ebb915e10ea35c280ca7551883af450f0b7504",
            "1": "6a777357.a5b374ad.f6a34460.cc899355.d9b14b23.6a274ab8.30ad82ea.e8c2648a.39e3c1ad.957caf25.66e58c8d.4cbd0ad6.d9b14b23.4442185d.9957b03c.aee23d01"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 10,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 3,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 54,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "x11-toolkits/plib/files/jsBSDCal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 510,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 181,
                  "endLine": 181,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "79ad48223ffd8dd2bb0aa6893e4bcccb02afaec5485a4338a101f8bb76985b8e",
            "1": "3578c172.76503df6.554dd003.1bd0bc43.f1a8a4af.51211531.fe0905d4.d5de5421.2d06e3d6.277c621c.b947dab0.b6461bb4.09f8ba64.51211531.fe0905d4.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 3,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 318,
                  "endLine": 318,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "606e2c622eacbcfaf366ec8a6167c0615b3cc99a1b359f5ca18bc083cb9b93f5",
            "1": "12563843.76503df6.554dd003.1bd0bc43.86c74039.51211531.fe0905d4.d5de5421.3b4b9534.76503df6.554dd003.1bd0bc43.d662de49.51211531.fe0905d4.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 3,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 318,
                            "endLine": 318,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into unlink, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to delete arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[unlink](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/raidtest/files/raidtest.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 210,
                  "endLine": 210,
                  "startColumn": 4,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "260f26b91a44eea00c71fc89292858c596ea06947b90f92e300eb5c561d304a3",
            "1": "3578c172.76503df6.08b83b34.234d7fe8.f1a8a4af.51211531.fe0905d4.d5de5421.3578c172.277c621c.7be03776.1bd0bc43.f1a8a4af.51211531.fe0905d4.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 315,
                            "endLine": 315,
                            "startColumn": 3,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 176,
                            "endLine": 176,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 10,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 313,
                            "endLine": 313,
                            "startColumn": 3,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/raidtest/files/raidtest.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 406,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "C",
            "files": 96,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C++",
            "files": 111,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C#",
            "files": 12,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Go",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "PHP",
            "files": 135,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": ".pom",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 123,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 8,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 24,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "C",
            "files": 6813,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "C++",
            "files": 11642,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": ".config",
            "files": 18,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Go",
            "files": 203,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "HTML",
            "files": 54,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Java",
            "files": 105,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "JavaScript",
            "files": 66,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "PHP",
            "files": 5,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Python",
            "files": 1000,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Ruby",
            "files": 101,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "TypeScript",
            "files": 104,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "XML",
            "files": 87,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}