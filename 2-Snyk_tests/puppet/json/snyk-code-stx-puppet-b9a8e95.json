{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1",
                    "lines": [
                      {
                        "line": "    return os.path.join(DATAROOT, obj_path)\n",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return safe_join(DATAROOT, obj_path)\n",
                        "lineNumber": 123,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_index_absolute_path(index):\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return os.path.join(INDEXDIR, index)\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "@scope_blueprint.route('/obj/<path:obj_path>')\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object_src_http(obj_path):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path = _get_obj_absolute_path(obj_path)\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    headers = Headers()\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # With add_etags=True, conditional=True\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Flask should be smart enough to do 304 Not Modified\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = send_file(path,\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "destdir = None\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "if sys.argv[1:]:\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "os.chdir(wdir)\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "tar = src + \".tar\"\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "gz = tar + \".gz\"\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "tgz = src + \".tgz\"\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"source:\", src\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"dest:\", tgz\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 180,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "ruby/HardcodedCredential",
              "name": "HardcodedCredential",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "ruby",
                  "HardcodedCredential",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "ruby/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Passwords"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.\n\nAn attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "ruby",
                  "HardcodedPassword",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mnutt/octo.cat/commit/e1827788627cfe08b80fbe7fc7412047e4c27bcf?diff=split#diff-6ca0601d8a8ae0e917f92947b7342346054078c985b15d2eddde59f551b2a91eL-1",
                    "lines": [
                      {
                        "line": "$redis = Redis.new(:host => \"bass.redistogo.com\", :port => 9014, :password => \"16d1b8359b3beb6ff4faf029f4e60929\")\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$redis = Redis.new(:host => \"bass.redistogo.com\", :port => 9014, :password => ENV['REDIS_PW'])\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/chicks/sugarcrm/commit/aca806c61110608082a426408da4568d3190e882?diff=split#diff-c80b930c75386e46447f64c40e6844ae4c793fe0c4c1efef890ca758adc13a84L-1",
                    "lines": [
                      {
                        "line": "# Replace these with your test instance\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "URL   = \"http://127.0.0.1/sugarcrm\"\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "USER  = \"admin\"\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "PASS  = 'letmein' \n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SugarCRM::Environment.load_config(File.join(File.dirname(__FILE__),'config.yaml'))\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/gocardless/gocardless-pro-ruby/commit/6c6cf75020e952d1595d32d95108ae9d45271027?diff=split#diff-a9f7154523a377d713418c494c988a549ee51ca1187ee44c282b2c69d1cdf9aeL-1",
                    "lines": [
                      {
                        "line": "user: \"AK0000133BVTZP\",\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: \"I4WaBGT8FQTDmUbmIl51-FLw3OqhyeHj2x89rOV7\",\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: ENV[\"GOCARDLESS_KEY\"],\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "password: ENV[\"GOCARDLESS_TOKEN\"],\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 18,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 109,
                  "endLine": 109,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec3fe3d6d38b99e214d7fab038c99b394963cc635a6470949a0fb98880ebc4ff",
            "1": "2cd527d0.09b47a5b.187bf175.1e2c0147.f3eda546.addfbd48.081ac3f4.d467c48f.b2b2a3c9.856e3039.187bf175.139c59a8.f3eda546.a5d7f69f.8cca4fca.239fb79a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1546,
                            "endLine": 1546,
                            "startColumn": 56,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 41,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 27,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.remove, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[os.remove](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "startColumn": 13,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32233897630a8e612d679c5f60ce658e19588744036a5c5a47b77475dade86f9",
            "1": "ef9d4899.b46866f8.187bf175.139c59a8.f3eda546.ba14daf2.b54d8807.d467c48f.0f50f006.e8f094bc.187bf175.5fbf6976.f3eda546.932a93e8.aff7f3d5.239fb79a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1187,
                            "endLine": 1187,
                            "startColumn": 25,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1546,
                            "endLine": 1546,
                            "startColumn": 56,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 41,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 23,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 574,
                  "endLine": 574,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ed0a78c5ac363ad9f73afb6d9a98b56fd7d7ff38e0c8193c5029d2fb7f3dd4d5",
            "1": "f66cf478.d6a36f41.3c54a0b5.bae5de5b.05a45b1b.8dc10104.54c04578.239fb79a.f66cf478.0e97c589.3c54a0b5.5fbf6976.4608c58f.73cfdf26.51b4c2f8.9ce7497d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1183,
                            "endLine": 1183,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1183,
                            "endLine": 1183,
                            "startColumn": 35,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1538,
                            "endLine": 1538,
                            "startColumn": 29,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 574,
                            "endLine": 574,
                            "startColumn": 23,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 574,
                            "endLine": 574,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[shutil.copyfile](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 878,
                  "endLine": 878,
                  "startColumn": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d588a8b0654393787e9498facad71b206764349167474e04298f44f481a04a3",
            "1": "0f50f006.d6a36f41.28f9c8ef.139c59a8.1506025c.ba14daf2.081ac3f4.239fb79a.f66cf478.1c1f99c9.3c54a0b5.5fbf6976.05a45b1b.73cfdf26.d485062a.239fb79a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1183,
                            "endLine": 1183,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1183,
                            "endLine": 1183,
                            "startColumn": 35,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1538,
                            "endLine": 1538,
                            "startColumn": 29,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 535,
                            "endLine": 535,
                            "startColumn": 9,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1546,
                            "endLine": 1546,
                            "startColumn": 27,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 134,
                            "endLine": 134,
                            "startColumn": 24,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1593,
                            "endLine": 1593,
                            "startColumn": 13,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 869,
                            "endLine": 869,
                            "startColumn": 9,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 878,
                            "endLine": 878,
                            "startColumn": 25,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 878,
                            "endLine": 878,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[shutil.copyfile](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 883,
                  "endLine": 883,
                  "startColumn": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2a1bf0b55da281be056fa9e0195996aa656726663edbef27458b8874aa723e78",
            "1": "8b3a61db.bae1db8b.028531ef.139c59a8.16449e57.ba14daf2.081ac3f4.6eb46ac5.0f50f006.e8f094bc.3c54a0b5.baf2a4b7.05a45b1b.73cfdf26.aff7f3d5.239fb79a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1185,
                            "endLine": 1185,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1185,
                            "endLine": 1185,
                            "startColumn": 34,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1594,
                            "endLine": 1594,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 870,
                            "endLine": 870,
                            "startColumn": 9,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 883,
                            "endLine": 883,
                            "startColumn": 25,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 883,
                            "endLine": 883,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[shutil.copyfile](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1228,
                  "endLine": 1228,
                  "startColumn": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "021b9496a3385e79d20430303d05b2a751ed86417764ffbc32758e9e46dbc47e",
            "1": "0f50f006.e8f094bc.9cbd7170.139c59a8.16449e57.73cfdf26.aff7f3d5.6eb46ac5.0f50f006.1c1f99c9.3c54a0b5.3cd04b14.113b3984.73cfdf26.aff7f3d5.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1174,
                            "endLine": 1174,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1185,
                            "endLine": 1185,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1185,
                            "endLine": 1185,
                            "startColumn": 34,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1228,
                            "endLine": 1228,
                            "startColumn": 29,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "puppet-manifests/src/modules/platform/files/change_k8s_control_plane_params.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1228,
                            "endLine": 1228,
                            "startColumn": 13,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 580,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "endLine": 38,
                  "startColumn": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5f610cc10ce4620bfa5395d514169f6d2ed2a0dbd2411613d5749362baa2d9d",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.3858061b.690c8394.865d2ba5.8b54f372.bc1d84e6.63c94f34.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 17,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 235,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "96c0464d944b69357a61da583078315e3209b6a224eea45ed964b001b769bfa1",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.a529f13e.98296aec.3443ed02.865d2ba5.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 20,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 235,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "startColumn": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ba380811c7e4d279ee7fd54fac4c76317a227d3f102d9ea86f8e6615034caf0c",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.98296aec.690c8394.865d2ba5.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 16,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 235,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "710a85ba0a4126f2bf951780a74833c24237722c7cbeffe5b71c75b3a31eeaa5",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.98296aec.690c8394.bd22601a.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 16,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 235,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d31c9861d90d862bc76bacb4dad4a905da66331199a005ea334aa8f34b7889ca",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.a529f13e.98296aec.3443ed02.bd22601a.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 20,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 20,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 235,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_postgresql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "461f6d6e4a7b2484d98e76efe4f14c761b348499ccb78308a6b228d62bcf199b",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.98296aec.690c8394.865d2ba5.52d362e3.bc1d84e6.63c94f34.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_postgresql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 24,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_postgresql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 17,
                            "endColumn": 54
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 185,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedCredential",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in with.",
            "markdown": "Do not hardcode credentials in code. Found {0} credential used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_sync_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 5,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8897b1f911bd7a4e54fda15eba044474127ca9d1f992f34311462663fd25266a",
            "1": "41d65f6a.98296aec.690c8394.bab24181.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.dc9559dd.3d1d30aa.865d2ba5.52d362e3.bc1d84e6.4d1f5a92.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_sync_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_sync_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 15,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 185,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in None.let.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[None.let](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99c1255cc835b9ba1cb7a31ef31c1b129fd4b511c628bceafc7b4caa169b98af",
            "1": "8b006f46.b706861d.690c8394.26cac922.2d6ca801.bc1d84e6.6d9804d2.66a8326c.8b006f46.9c16b3d1.79b16af2.26cac922.49ea5775.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in None.let.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[None.let](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "startColumn": 9,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1ef0d640fc5b6c07d368ec689d20a9e97c458157dc36caf80e85971c3e626f8",
            "1": "8b006f46.b706861d.690c8394.bd22601a.2823c8fc.bc1d84e6.6d9804d2.66a8326c.8b006f46.9c16b3d1.690c8394.bd22601a.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in None.let.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[None.let](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e68bba02794b3ae7d1640eaadb181e80c0c1c5c004aeda5b8fd2496c01588ccc",
            "1": "8b006f46.b706861d.690c8394.bd22601a.2823c8fc.bc1d84e6.6d9804d2.66a8326c.8b006f46.3858061b.690c8394.bd22601a.8b54f372.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 28,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 5,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in with.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6a2702fdd060b058ae182da207157701ffb475fa412cd10f6c8b04283bc21040",
            "1": "8b006f46.b706861d.690c8394.5513e3c0.9b157b56.bc1d84e6.6d9804d2.66a8326c.a529f13e.98296aec.3443ed02.2b142023.49ea5775.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 20,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in with.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "425aa10855605521d44c54e31c340dec15989cc18746ac7b5119b5c7650ab2a6",
            "1": "8b006f46.b706861d.690c8394.5513e3c0.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.98296aec.79b16af2.5513e3c0.49ea5775.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 16,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in with.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 7,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ea35dcf5f68148aefd569df8bfc99e0921056693c9f94a5fa488a3dbb1dce249",
            "1": "8b006f46.b706861d.690c8394.bd22601a.9b157b56.bc1d84e6.6d9804d2.66a8326c.41d65f6a.98296aec.690c8394.bd22601a.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 20,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 16,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "ruby/HardcodedPassword",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in with.",
            "markdown": "Do not hardcode passwords in code. Found {0} password used in {1}.",
            "arguments": [
              "[hardcoded](0)",
              "[with](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 7,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73110ef83f4a4f823ef2f93cf33507678de9173ff86341ca2f84260f722f26c2",
            "1": "8b006f46.b706861d.690c8394.bd22601a.9b157b56.bc1d84e6.6d9804d2.66a8326c.a529f13e.98296aec.3443ed02.bd22601a.52d362e3.bc1d84e6.6d9804d2.215dce8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 20,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "modules/puppet-sysinv/src/sysinv/spec/classes/sysinv_db_mysql_spec.rb",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 20,
                            "endColumn": 76
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 585,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "HTML+ERB",
            "files": 93,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 5,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 75,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}