[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/certificate.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 83,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[1].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 2]",
          "rules[1]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 154,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[9].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 2]",
          "rules[9]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 96,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[2].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 2]",
          "rules[2]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 365,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[0].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 5]",
          "rules[0]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/configmap.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/configmap.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 61,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 61,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[manager].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[manager].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[manager].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[manager].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 51,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "livenessProbe"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/issuer.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/issuer.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/serviceaccount.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/serviceaccount.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/byoh/templates/validatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/byoh/templates/validatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/certificate.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[0].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[0]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 15,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 2]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "isGeneratedByCustomRule": false,
        "issue": "Container is declaring more than 2 listening ports",
        "impact": "Increases the attack surface of the application and the container.",
        "resolve": "Reduce `ports` count to 2",
        "remediation": {
          "kubernetes": "Reduce `ports` count to 2",
          "terraform": "Reduce `ports` count to 2"
        },
        "lineNumber": 41,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "publicId": "SNYK-CC-K8S-36",
        "msg": "spec.template.spec.containers[manager].ports",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "ports"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[manager].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[manager].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/issuer.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/issuer.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cabpt/templates/validatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cabpt/templates/validatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/certificate.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[0].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[0]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 58,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[4].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[4]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 15,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "isGeneratedByCustomRule": false,
        "issue": "Container is declaring more than 2 listening ports",
        "impact": "Increases the attack surface of the application and the container.",
        "resolve": "Reduce `ports` count to 2",
        "remediation": {
          "kubernetes": "Reduce `ports` count to 2",
          "terraform": "Reduce `ports` count to 2"
        },
        "lineNumber": 40,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "publicId": "SNYK-CC-K8S-36",
        "msg": "spec.template.spec.containers[manager].ports",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "ports"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[manager].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[manager].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 26,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/issuer.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/issuer.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/mutatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/mutatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 16,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cacppt/templates/validatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cacppt/templates/validatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/certificate.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 335,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[28].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "rules[28]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 34,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[1].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "rules[1]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 77,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[6].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "rules[6]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 90,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[7].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "rules[7]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "isGeneratedByCustomRule": false,
        "issue": "Memory limit is not defined",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "resolve": "Set `resources.limits.memory` value",
        "remediation": {
          "kubernetes": "Set `resources.limits.memory` value",
          "terraform": "Set `resources.limits.memory` value"
        },
        "lineNumber": 67,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "publicId": "SNYK-CC-K8S-4",
        "msg": "input.spec.template.spec.containers[manager].resources.limits.memory",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "resources",
          "limits",
          "memory"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 47,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[manager].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 67,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[manager].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 68,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "isGeneratedByCustomRule": false,
        "issue": "Container is declaring more than 2 listening ports",
        "impact": "Increases the attack surface of the application and the container.",
        "resolve": "Reduce `ports` count to 2",
        "remediation": {
          "kubernetes": "Reduce `ports` count to 2",
          "terraform": "Reduce `ports` count to 2"
        },
        "lineNumber": 54,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "publicId": "SNYK-CC-K8S-36",
        "msg": "spec.template.spec.containers[manager].ports",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "ports"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/issuer.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/issuer.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/mutatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/mutatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/serviceaccount.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/serviceaccount.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capi/manifests/validatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capi/manifests/validatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[1].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[1]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/configmap.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/configmap.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 101,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 68,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 101,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 50,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 73,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[manager].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 68,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 50,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "livenessProbe"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cappx/templates/serviceaccount.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cappx/templates/serviceaccount.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-46",
        "title": "RoleBinding or ClusterRoleBinding is using a pre-defined role",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-46",
        "isGeneratedByCustomRule": false,
        "issue": "A RoleBinding or ClusterRoleBinding was found using one of the default user facing roles, `cluster-admin`, `admin`, `edit` or `view`.",
        "impact": "Using a default user facing role may be overly permissive. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Update roleRef.name to a specific role name with only the necessary permissions",
        "remediation": {
          "kubernetes": "Update roleRef.name to a specific role name with only the necessary permissions"
        },
        "lineNumber": 12,
        "iacDescription": {
          "issue": "A RoleBinding or ClusterRoleBinding was found using one of the default user facing roles, `cluster-admin`, `admin`, `edit` or `view`.",
          "impact": "Using a default user facing role may be overly permissive. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Update roleRef.name to a specific role name with only the necessary permissions"
        },
        "publicId": "SNYK-CC-K8S-46",
        "msg": "roleRef.name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "roleRef",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/configmap.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/configmap.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 53,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-5",
        "title": "Container has no CPU limit",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "isGeneratedByCustomRule": false,
        "issue": "Container has no CPU limit",
        "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "remediation": {
          "kubernetes": "Add `resources.limits.cpu` field with required CPU limit value",
          "terraform": "Add `spec.container.resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 48,
        "iacDescription": {
          "issue": "Container has no CPU limit",
          "impact": "CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "publicId": "SNYK-CC-K8S-5",
        "msg": "input.spec.template.spec.containers[manager].resources.limits.cpu",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/",
          "https://github.com/kubernetes/design-proposals-archive/blob/8da1442ea29adccea40693357d04727127e045ed/node/resource-qos.md#compressible-resource-guaranteess"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "resources",
          "limits",
          "cpu"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 76,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 53,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 58,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 76,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 76,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[kube-rbac-proxy].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 53,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 58,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[kube-rbac-proxy].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[kube-rbac-proxy]",
          "livenessProbe"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/capvc/templates/serviceaccount.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/capvc/templates/serviceaccount.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/ceph-csi/spec/resources/cephfs-pvc.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/ceph-csi/spec/resources/cephfs-pvc.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/ceph-csi/spec/resources/rbd-pvc.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/ceph-csi/spec/resources/rbd-pvc.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/cloudflare-ingress/spec/resources.template.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/cloudflare-ingress/spec/resources.template.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[cf-ing-test].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[cf-ing-test]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[cf-ing-test].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[cf-ing-test]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[cf-ing-test].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[cf-ing-test]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 29,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[cf-ing-test].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[cf-ing-test]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/certificate.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/certificate.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": 23,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[1].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[1]",
          "resources"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 40,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 61,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 2]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 82,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 3]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 103,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 4]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 5]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 145,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 6]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 166,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 7]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/customresourcedefinition.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/customresourcedefinition.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "isGeneratedByCustomRule": false,
        "issue": "Container is declaring more than 2 listening ports",
        "impact": "Increases the attack surface of the application and the container.",
        "resolve": "Reduce `ports` count to 2",
        "remediation": {
          "kubernetes": "Reduce `ports` count to 2",
          "terraform": "Reduce `ports` count to 2"
        },
        "lineNumber": 52,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "publicId": "SNYK-CC-K8S-36",
        "msg": "spec.template.spec.containers[manager].ports",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "ports"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[manager].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[manager].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 38,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[serverevents].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[serverevents].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 211,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[siderolink].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 211,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[siderolink].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 122,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 211,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[siderolink].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[serverevents].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[serverevents].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[serverlogs].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[serverlogs].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 122,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[manager].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[serverlogs].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[siderolink].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 212,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[siderolink].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 122,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 249,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[dev-tun].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[dev-tun]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 211,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[siderolink].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[siderolink]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[serverlogs].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "isGeneratedByCustomRule": false,
        "issue": "Container is declaring more than 2 listening ports",
        "impact": "Increases the attack surface of the application and the container.",
        "resolve": "Reduce `ports` count to 2",
        "remediation": {
          "kubernetes": "Reduce `ports` count to 2",
          "terraform": "Reduce `ports` count to 2"
        },
        "lineNumber": 154,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "publicId": "SNYK-CC-K8S-36",
        "msg": "spec.template.spec.containers[manager].ports",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "ports"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[serverlogs].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[serverevents].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 231,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[serverevents].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[serverevents]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 122,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[manager].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 122,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[manager].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 219,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[serverlogs].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[serverlogs]",
          "livenessProbe"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/issuer.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/issuer.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/rolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/rolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 42,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 1]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/service.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/service.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "apps/sidero/templates/validatingwebhookconfiguration.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/apps/sidero/templates/validatingwebhookconfiguration.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "charts/thecluster-operator/crds/autoscalingtranscodesets.thecluster.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/charts/thecluster-operator/crds/autoscalingtranscodesets.thecluster.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "charts/thecluster-operator/templates/generated/clusterrole.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/charts/thecluster-operator/templates/generated/clusterrole.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[1].verbs",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[1]",
          "verbs"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "charts/thecluster-operator/templates/generated/clusterrolebinding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/charts/thecluster-operator/templates/generated/clusterrolebinding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "charts/thecluster-operator/templates/generated/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/charts/thecluster-operator/templates/generated/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "clusters/lapislazuli/k0s.yml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/clusters/lapislazuli/k0s.yml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/autoscalinglisteners.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/autoscalinglisteners.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/autoscalingrunnersets.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/autoscalingrunnersets.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/backendtlspolicies.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/backendtlspolicies.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/bootstrapkubeconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/bootstrapkubeconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/byoclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/byoclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/byoclustertemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/byoclustertemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/byohosts.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/byohosts.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/byomachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/byomachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/byomachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/byomachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/clusterclasses.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/clusterclasses.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/clusterresourcesetbindings.addons.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/clusterresourcesetbindings.addons.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/clusterresourcesets.addons.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/clusterresourcesets.addons.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/clusters.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/clusters.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/clustertunnels.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/clustertunnels.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/controlplanes.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/controlplanes.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-bfdprofiles.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-bfdprofiles.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-bgpadvertisements.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-bgpadvertisements.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-bgppeers.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-bgppeers.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-bundles.trust.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-bundles.trust.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-certificaterequests.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-certificaterequests.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-certificates.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-certificates.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-challenges.acme.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-challenges.acme.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-clusterissuers.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-clusterissuers.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-communities.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-communities.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-ipaddresspools.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-ipaddresspools.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-issuers.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-issuers.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-l2advertisements.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-l2advertisements.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-orders.acme.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-orders.acme.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-policybindings.sts.min.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-policybindings.sts.min.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/customresourcedefinition-tenants.minio.min.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/customresourcedefinition-tenants.minio.min.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/dataplanes.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/dataplanes.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/dnsendpoints.externaldns.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/dnsendpoints.externaldns.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/environments.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/environments.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/ephemeralrunners.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/ephemeralrunners.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/ephemeralrunnersets.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/ephemeralrunnersets.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/extensionconfigs.runtime.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/extensionconfigs.runtime.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/gatewayclasses.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/gatewayclasses.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/gatewayconfigurations.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/gatewayconfigurations.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/gateways.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/gateways.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/globalconfigurations.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/globalconfigurations.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/grpcroutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/grpcroutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/horizontalrunnerautoscalers.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/horizontalrunnerautoscalers.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/httproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/httproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/ipaddressclaims.ipam.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/ipaddressclaims.ipam.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/ipaddresses.ipam.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/ipaddresses.ipam.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/k8sinstallerconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/k8sinstallerconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/k8sinstallerconfigtemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/k8sinstallerconfigtemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/machinedeployments.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/machinedeployments.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/machinehealthchecks.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/machinehealthchecks.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/machinepools.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/machinepools.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/machines.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/machines.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/machinesets.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/machinesets.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/metalclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/metalclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/metalmachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/metalmachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/metalmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/metalmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/nginxingresses.charts.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/nginxingresses.charts.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/policies.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/policies.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/programs.pulumi.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/programs.pulumi.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/proxmoxclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/proxmoxclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/proxmoxmachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/proxmoxmachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/proxmoxmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/proxmoxmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/referencegrants.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/referencegrants.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/runnerdeployments.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/runnerdeployments.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/runnerreplicasets.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/runnerreplicasets.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/runners.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/runners.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/runnersets.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/runnersets.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/serverbindings.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/serverbindings.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/serverclasses.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/serverclasses.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/servers.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/servers.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/stacks.pulumi.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/stacks.pulumi.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/talosconfigs.bootstrap.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/talosconfigs.bootstrap.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/talosconfigtemplates.bootstrap.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/talosconfigtemplates.bootstrap.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/taloscontrolplanes.controlplane.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/taloscontrolplanes.controlplane.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/tcproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/tcproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/tlsroutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/tlsroutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/transportservers.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/transportservers.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/tunnelbindings.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/tunnelbindings.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/tunnels.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/tunnels.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/udproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/udproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/vclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/vclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/virtualserverroutes.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/virtualserverroutes.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/virtualservers.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/virtualservers.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/volumesnapshotclasses.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/volumesnapshotclasses.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/volumesnapshotcontents.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/volumesnapshotcontents.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "infra/crds/manifests/volumesnapshots.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/infra/crds/manifests/volumesnapshots.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/autoscalinglisteners.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/autoscalinglisteners.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/autoscalingrunnersets.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/autoscalingrunnersets.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/backendtlspolicies.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/backendtlspolicies.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/bootstrapkubeconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/bootstrapkubeconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/byoclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/byoclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/byoclustertemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/byoclustertemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/byohosts.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/byohosts.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/byomachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/byomachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/byomachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/byomachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/clusterclasses.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/clusterclasses.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/clusterresourcesetbindings.addons.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/clusterresourcesetbindings.addons.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/clusterresourcesets.addons.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/clusterresourcesets.addons.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/clusters.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/clusters.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/clustertunnels.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/clustertunnels.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/controlplanes.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/controlplanes.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-bfdprofiles.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-bfdprofiles.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-bgpadvertisements.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-bgpadvertisements.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-bgppeers.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-bgppeers.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-bundles.trust.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-bundles.trust.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-certificaterequests.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-certificaterequests.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-certificates.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-certificates.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-challenges.acme.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-challenges.acme.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-clusterissuers.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-clusterissuers.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-communities.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-communities.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-ipaddresspools.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-ipaddresspools.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-issuers.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-issuers.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-l2advertisements.metallb.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-l2advertisements.metallb.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-orders.acme.cert-manager.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-orders.acme.cert-manager.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-policybindings.sts.min.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-policybindings.sts.min.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/customresourcedefinition-tenants.minio.min.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/customresourcedefinition-tenants.minio.min.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/dataplanes.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/dataplanes.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/dnsendpoints.externaldns.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/dnsendpoints.externaldns.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/environments.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/environments.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/ephemeralrunners.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/ephemeralrunners.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/ephemeralrunnersets.actions.github.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/ephemeralrunnersets.actions.github.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/extensionconfigs.runtime.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/extensionconfigs.runtime.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/gatewayclasses.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/gatewayclasses.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/gatewayconfigurations.gateway-operator.konghq.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/gatewayconfigurations.gateway-operator.konghq.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/gateways.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/gateways.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/globalconfigurations.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/globalconfigurations.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/grpcroutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/grpcroutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/horizontalrunnerautoscalers.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/horizontalrunnerautoscalers.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/httproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/httproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/ipaddressclaims.ipam.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/ipaddressclaims.ipam.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/ipaddresses.ipam.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/ipaddresses.ipam.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/k8sinstallerconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/k8sinstallerconfigs.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/k8sinstallerconfigtemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/k8sinstallerconfigtemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/machinedeployments.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/machinedeployments.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/machinehealthchecks.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/machinehealthchecks.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/machinepools.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/machinepools.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/machines.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/machines.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/machinesets.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/machinesets.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/metalclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/metalclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/metalmachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/metalmachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/metalmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/metalmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/nginxingresses.charts.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/nginxingresses.charts.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/policies.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/policies.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/programs.pulumi.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/programs.pulumi.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/proxmoxclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/proxmoxclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/proxmoxmachines.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/proxmoxmachines.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/proxmoxmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/proxmoxmachinetemplates.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/referencegrants.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/referencegrants.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/runnerdeployments.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/runnerdeployments.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/runnerreplicasets.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/runnerreplicasets.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/runners.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/runners.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/runnersets.actions.summerwind.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/runnersets.actions.summerwind.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/serverbindings.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/serverbindings.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/serverclasses.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/serverclasses.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/servers.metal.sidero.dev.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/servers.metal.sidero.dev.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/stacks.pulumi.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/stacks.pulumi.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/talosconfigs.bootstrap.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/talosconfigs.bootstrap.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/talosconfigtemplates.bootstrap.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/talosconfigtemplates.bootstrap.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/taloscontrolplanes.controlplane.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/taloscontrolplanes.controlplane.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/tcproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/tcproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/tlsroutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/tlsroutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/transportservers.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/transportservers.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/tunnelbindings.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/tunnelbindings.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/tunnels.networking.cfargotunnel.com.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/tunnels.networking.cfargotunnel.com.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/udproutes.gateway.networking.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/udproutes.gateway.networking.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/vclusters.infrastructure.cluster.x-k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/vclusters.infrastructure.cluster.x-k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/virtualserverroutes.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/virtualserverroutes.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/virtualservers.k8s.nginx.org.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/virtualservers.k8s.nginx.org.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/volumesnapshotclasses.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/volumesnapshotclasses.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/volumesnapshotcontents.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/volumesnapshotcontents.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lib/crds/manifests/volumesnapshots.snapshot.storage.k8s.io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/lib/crds/manifests/volumesnapshots.snapshot.storage.k8s.io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "operator/bases/autoscalingtranscodesets_thecluster_io.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/operator/bases/autoscalingtranscodesets_thecluster_io.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "operator/bases/deployment.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/operator/bases/deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[operator].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[operator].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[operator].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[operator].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[operator].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[operator].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 19,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[operator].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[operator]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "operator/bases/namespace.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/operator/bases/namespace.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "operator/bases/operator-role-binding.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/operator/bases/operator-role-binding.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-45",
        "title": "RoleBinding or ClusterRoleBinding to the default service account",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRoleBinding",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-45",
        "isGeneratedByCustomRule": false,
        "issue": "A binding was found between a role and the default service account",
        "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
        "resolve": "Set `subject.name` to a service account other than `default`",
        "remediation": {
          "kubernetes": "Set `subject.name` to a service account other than `default`",
          "terraform": "Set `subject.name` to a service account other than `default`"
        },
        "lineNumber": 11,
        "iacDescription": {
          "issue": "A binding was found between a role and the default service account",
          "impact": "The use of default service account is discouraged. For a ClusterRoleBinding this would be considered high severity.",
          "resolve": "Set `subject.name` to a service account other than `default`"
        },
        "publicId": "SNYK-CC-K8S-45",
        "msg": "subjects[0].name",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "subjects[0]",
          "name"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "operator/bases/operator-role.yaml",
    "projectName": "the-cluster",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_pulumi/the-cluster/operator/bases/operator-role.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_pulumi/the-cluster",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-44",
        "title": "Role or ClusterRole with too wide permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "isGeneratedByCustomRule": false,
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
        "resolve": "Set only the necessary permissions required",
        "remediation": {
          "kubernetes": "Set only the necessary permissions required",
          "terraform": "Remove any wildcards [*] from `rule.verbs` and `rule.resources`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. For a ClusterRole this would be considered high severity.",
          "resolve": "Set only the necessary permissions required"
        },
        "publicId": "SNYK-CC-K8S-44",
        "msg": "rules[1].verbs",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 0]",
          "rules[1]",
          "verbs"
        ],
        "compliance": []
      }
    ]
  }
]