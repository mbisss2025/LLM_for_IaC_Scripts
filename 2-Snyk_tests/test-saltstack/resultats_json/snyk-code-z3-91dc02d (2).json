{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "cpp/DerefNull",
              "name": "DerefNull",
              "shortDescription": {
                "text": "Dereference of a NULL Pointer"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\nDereferencing a NULL pointer typically results in a program crash or other undefined behaviour. Pointers can be set to NULL a variety of ways, including by the retrun value of standard library functions, often in the case of an error with that function. Pointers may also be initalised to NULL, and subsequently not reassigned on some execution paths before being derefernced. Where it is possible a pointer is NULL, it is best to check before derefencing it.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "DerefNull",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/google/cctz/commit/61415a09a2aaad3a52047dd88f003db01ddfbdde?diff=split#diff-b9e810cccf931cbb5c6e498b7804d2ec87cdfcc660463bfb4cdd5c49c9269147L-1",
                    "lines": [
                      {
                        "line": "_dupenv_s(*tz_env, nullptr, \"TZ\");\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "_dupenv_s(&tz_env, nullptr, \"TZ\");\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RaJiska/JAPM/commit/e717737ffd5237ae384072e6c523d1e11dd9ef16?diff=split#diff-612b7cf36bdcb89724f956c18aff3c9296d7d9f44eca7869b1d10da0b7cd1705L-1",
                    "lines": [
                      {
                        "line": "if (*((found = strrchr(path, '\\\\')) + 1) == 0)\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if ((found = strrchr(path, '\\\\')) && *found + 1 == 0)\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t*found = 0;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/GNOME/gnumeric/commit/5d6b0e0e854f143d5fa7062495df812933149bc4?diff=split#diff-4bf0193427fd407708e50a71b61d9b6bcac32cab136702e69dd71341ffa22f10L-1",
                    "lines": [
                      {
                        "line": "if (tmp[9] == 0)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (tmp && tmp[9] == 0)\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-476"
                ]
              }
            },
            {
              "id": "cpp/ImproperNullTermination",
              "name": "ImproperNullTermination",
              "shortDescription": {
                "text": "Improper Null Termination"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nImproper null termination occurs when a character string's ending null character is omitted or outside the allocated memory for the string. This typically leads to information leaks or buffer overflows and occurs when:\n* There is an off-by-one error which leads to the null character being out of bounds\n* Raw data is passed to functions expecting strings. This can lead to out of bounds reading or writing (e.g., strlen / strcpy using raw data)\n\n## Best practices for prevention\n* Use functions that ensure proper null termination. Pay attention to the way the string functions affect the ending null character (e.g., strncpy doesn't necessarily ensure null termination)\n* Avoid passing raw data to functions expecting strings. If this can't be avoided ensure there is proper null termination (e.g., write a null character at the end of the buffer)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "ImproperNullTermination",
                  "Security",
                  "SourceImproperNullTermination",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aquynh/capstone/commit/22a5a761d8be37bab9d3d507841874f19625d3e9?diff=split#diff-66a380d2b83d14e1b2cc0743651892bfb6c73490ea39ba8b6eb027ddd1cbf97eL-1",
                    "lines": [
                      {
                        "line": "strncpy(insn->mnemonic, buffer, sizeof(insn->mnemonic) - 1);\n",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "insn->mnemonic[sizeof(insn->mnemonic) - 1] = '\\0';\n",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(insn->mnemonic, buffer);\n",
                        "lineNumber": 314,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uudiin/raspd/commit/39170d13306259d98816566a3ac30afa138c70ba?diff=split#diff-fb2adfba4fdb4b1695553f0e720141b28d8026ad94a502f3fd7256df5a979d6cL-1",
                    "lines": [
                      {
                        "line": "#include <string.h>\r\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <errno.h>\r\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <getopt.h>\r\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <unistd.h>\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/socket.h>\r\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/un.h>\r\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sock.h>\r\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "#define BUF_SIZE    1024\r\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "int main(int argc, char *argv[])\r\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\r\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    static struct option options[] = {\r\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { \"unix\", required_argument, NULL, 'u' },\r\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { 0, 0, 0, 0 }\r\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    };\r\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int c;\r\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char *unixsock = NULL;\r\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int fd;\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    union sockaddr_u addr;\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socklen_t len;\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char buffer[BUF_SIZE];\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int err;\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while ((c = getopt_long(argc, argv, \"du:\", options, NULL)) != -1) {\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (c) {\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case 'u': unixsock = optarg; break;\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\r\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (unixsock == NULL) {\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fprintf(stderr, \"must be set the unixsock socket file\");\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0)\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (strlen(unixsock) >= sizeof(addr.un.sun_path))\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    memset(&addr, 0, sizeof(addr));\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    addr.un.sun_family = AF_UNIX;\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strncpy(addr.un.sun_path, unixsock, sizeof(addr.un.sun_path));\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    len = SUN_LEN(&addr.un);\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (connect(fd, &addr.sockaddr, len) < 0)\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /* main loop */\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while (fgets(buffer, sizeof(buffer), stdin) != NULL) {\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        size_t size = strlen(buffer);\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int retval;\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = write(fd, buffer, size);\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval != size)\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fprintf(stderr, \"send date error, err = %d\\n\", retval);\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = read(fd, buffer, sizeof(buffer));\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval)\r\n",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (retval) {\r\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "            buffer[retval] = '\\0';\r\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/swoole/swoole-src/commit/77fd91854b865bc6fba16aca6adf699b60a81603?diff=split#diff-9188d03744376460f57ecbe5914ccfe8f20ca6ef14d0d12100dcd8d738c0ad71L-1",
                    "lines": [
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, PATH_MAX - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, sizeof(buf) - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if (byte <= 0) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return false;\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 155,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        strcpy(task.filename, buf);\n",
                        "lineNumber": 156,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        task.filename[byte] = 0;\n",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 158,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        buf[byte] = 0;\n",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "        swoole_strlcpy(task.filename, buf, sizeof(task.filename));\n",
                        "lineNumber": 156,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 114,
                "cwe": [
                  "CWE-170"
                ]
              }
            },
            {
              "id": "cpp/MemoryLeak/test",
              "name": "MemoryLeak/test",
              "shortDescription": {
                "text": "Missing Release of Memory after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nHeap allocated memory is not sufficiently tracked and released after it is has been used, which slowly consumes remaining memory.\n\n\n## Best practices for Prevention\n* Allocate and free memory in the same module, at the same level of abstraction, [see example](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)\n\n\n## References\n* [CERT MEM00-C](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "MemoryLeak",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/luohaha/CSpider/commit/16cfb833cc993dc4a70a485737ae58990847f0aa?diff=split#diff-73ac80300bd77b06962065e0f2b544ff11b545899c989846a9b78cf07406d4e2L-1",
                    "lines": [
                      {
                        "line": "char *buf = (char*)malloc(sizeof(char));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "node->data = &buf;\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "node->data = buf;\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/BergerLab/CAST/commit/b5c9257229b30604b30b5e363e816bcfe433ee21?diff=split#diff-40aa21688f1ac58ddf8ef5f0f4e472e6075411f5c4f75b9c1d512b7e03a2cbabL-1",
                    "lines": [
                      {
                        "line": "    int *indices = malloc((len+1)*sizeof(*indices));\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assert(indices);\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i <= len; i++) {\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "        l = w;\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        w = line[i] != '\\t' && line[i] != '\\0';\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (w != l || (l && i == len) || i == 0)\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "            indices[num_sections++] = i;\n",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 156,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char **words = malloc((num_sections/2+1)*sizeof(*words));\n",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assert(words);\n",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    words[num_sections/2] = NULL;\n",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < num_sections-1; i++)\n",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (i % 2 != m) {\n",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "            words[i/2] = malloc((indices[i+1]-indices[i]+1)*sizeof(*words));\n",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "            assert(words[i/2]);\n",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "            strncpy(words[i/2], line+indices[i], indices[i+1]-indices[i]);\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    free(indices);\n",
                        "lineNumber": 171,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 172,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/stanfordnlp/spinn/commit/b3575456973332425d9ce4339ca50a7514461795?diff=split#diff-64540c38ca1b79e4e84eecff13ce24011cc4e92689e96ddf84ffa904a5c4456dL-1",
                    "lines": [
                      {
                        "line": "  float *ret = (float *) malloc(N * sizeof(float));\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ifstream file(filename);\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float x;\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  for (int i = 0; i < N; i++) {\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    file >> x;\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cout << x << endl;\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ret[i] = x;\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ret;\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "float *load_weights_cuda(string filename, int N) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *h_weights = load_weights(filename, N);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *d_weights;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMalloc(&d_weights, N * sizeof(float));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMemcpy(d_weights, h_weights, N * sizeof(float),\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "      cudaMemcpyHostToDevice);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  free(h_weights);\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-401"
                ]
              }
            },
            {
              "id": "cpp/MemsetMayBeOptimizedAway",
              "name": "MemsetMayBeOptimizedAway",
              "shortDescription": {
                "text": "An optimizing compiler may remove memset non-zero leaving data in memory"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nIf a pointer to an object is passed to memset and not used after the call, an optimizing compiler might remove this call. This can prevent the desired memory from being zeroed.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "MemsetMayBeOptimizedAway",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/stella-emu/stella/commit/354d5aa35ae08e04e54ee258cc62811d2ed0536f?diff=split#diff-e5c5dae8df3c6d32f27484c6d5be7a995ef1d9a396db4e5f64bd336495f3868bL-1",
                    "lines": [
                      {
                        "line": "    memset(myCount, 0, sizeof(myCount));\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      myCount.fill(0);\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "    myInitialized = true;\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "void clearAll() { myInitialized = false; memset(myCount, 0, sizeof(myCount)); }\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "    bool isInitialized() const { return myInitialized; }\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "  private:\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // The actual counts\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "  uInt8 myCount[0x10000];\n",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    std::array<uInt8, 0x10000> myCount;\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cwida/duckdb/commit/91a0ec5b53bebd8df50610161f9129785f1a2b51?diff=split#diff-1a1cf2ccc26b1d669f12dbd5e60edd8a2f7b948576422222a7b83551cb1237d4L-1",
                    "lines": [
                      {
                        "line": "\tuint8_t childIndex[256];\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    unique_ptr<Node> child[48];\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tNode48(uint8_t maxPrefixLength) : Node(NodeType::N48, maxPrefixLength) {\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tmemset(childIndex, 48, sizeof(childIndex));\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tmemset(child, 0, sizeof(child));\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t    for(uint64_t i = 0; i < 256; i++) {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t        childIndex[i] = 48;\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t    }\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/TortoiseGit/tortoisesvn/commit/dbde9991b3cc2564fc08beb990b7fa6aa60804cc?diff=split#diff-3a11af48eaaf17baacbab536d79b84d97fe3f459c10275da71e26ac80f059eeaL-1",
                    "lines": [
                      {
                        "line": "memset(szHelpPath, 0, sizeof(szHelpPath));\n",
                        "lineNumber": 140,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memset(szIcon, 0, sizeof(szIcon));\n",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memset(szCustomButtons, 0, sizeof(szCustomButtons));\n",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memset(szReportButtonCaption, 0, sizeof(szReportButtonCaption));\n",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memset(szCompanyName, 0, sizeof(szCompanyName));\n",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memset(&UserDefinedButtonCaptions, 0, sizeof(UserDefinedButtonCaptions));   //+++1.5\n",
                        "lineNumber": 145,
                        "lineChange": "removed"
                      },
                      {
                        "line": "SecureZeroMemory(szHelpPath, sizeof(szHelpPath));\n",
                        "lineNumber": 140,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecureZeroMemory(szIcon, sizeof(szIcon));\n",
                        "lineNumber": 141,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecureZeroMemory(szCustomButtons, sizeof(szCustomButtons));\n",
                        "lineNumber": 142,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecureZeroMemory(szReportButtonCaption, sizeof(szReportButtonCaption));\n",
                        "lineNumber": 143,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecureZeroMemory(szCompanyName, sizeof(szCompanyName));\n",
                        "lineNumber": 144,
                        "lineChange": "added"
                      },
                      {
                        "line": "SecureZeroMemory(&UserDefinedButtonCaptions, sizeof(UserDefinedButtonCaptions));   //+++1.5\n",
                        "lineNumber": 145,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 66,
                "cwe": [
                  "CWE-1330"
                ]
              }
            },
            {
              "id": "cpp/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/intel-isl/Open3D/commit/ebc639913ff128060fd2def3446f6caa14d10859?diff=split#diff-20a35acdf4289c8de90812539cbe0547d61890ab0415c544171ed8acd6833056L-1",
                    "lines": [
                      {
                        "line": "FILE *f = fopen(binname.c_str(), \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *f = utility::filesystem::FOpen(binname, \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/SizeAsIndex",
              "name": "SizeAsIndex",
              "shortDescription": {
                "text": "Size Used as Index"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nUsing the size of an array, buffer or other container as an index is an off-by-one error, as the size of these containers is one larger than the last valid index into them. Using the size as an index could lead to unexpected behvaiour such as reading or writing to unintended sections of memory.\n\n## Best practices for prevention\nNever use the size directly as a subscript into a container. Instead, you should subtract one from the value before using it to get the last index of the container.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "SizeAsIndex",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/michaellukashov/Far-NetBox/commit/615d1f8f9f55ea15e0ac9ecd8f9dda74f98a8c3c?diff=split#diff-cbae4c13cdfa58daa23cdbadb1c61830cff598a303d7cb747a5b60ae6475f742L-1",
                    "lines": [
                      {
                        "line": "assert(subKey.IsEmpty() || (subKey[subKey.size()] != '\\\\'));\r\n",
                        "lineNumber": 68,
                        "lineChange": "removed"
                      },
                      {
                        "line": "assert(subKey.IsEmpty() || (subKey[subKey.Length()] != '\\\\'));\r\n",
                        "lineNumber": 68,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dbohdan/picol/commit/6b1bea2fb0027cfe0fe26a7795fef74a889d0e41?diff=split#diff-9b8cbaff2d59a63d08f3b443a2d18efe85a7cef36d8e068577e002c3937c0f54L-1",
                    "lines": [
                      {
                        "line": "int actual_size = 0;\n",
                        "lineNumber": 2483,
                        "lineChange": "removed"
                      },
                      {
                        "line": "int len = 0;\n",
                        "lineNumber": 2483,
                        "lineChange": "added"
                      },
                      {
                        "line": "FILE* fp = NULL;\n",
                        "lineNumber": 2484,
                        "lineChange": "none"
                      },
                      {
                        "line": "ARITY2(argc == 2 || argc == 3, \"read channelId ?size?\");\n",
                        "lineNumber": 2485,
                        "lineChange": "none"
                      },
                      {
                        "line": "SCAN_PTR(fp, argv[1]); /* caveat usor */\n",
                        "lineNumber": 2486,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (argc == 3) {\n",
                        "lineNumber": 2487,
                        "lineChange": "none"
                      },
                      {
                        "line": "    SCAN_INT(size, argv[2]);\n",
                        "lineNumber": 2488,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (size > MAXSTR - 1) {\n",
                        "lineNumber": 2489,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return picolErr1(i, \"size %s too large\", argv[2]);\n",
                        "lineNumber": 2490,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 2491,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 2492,
                        "lineChange": "none"
                      },
                      {
                        "line": "actual_size = fread(buf, 1, size, fp);\n",
                        "lineNumber": 2493,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (actual_size > MAXSTR - 1) {\n",
                        "lineNumber": 2494,
                        "lineChange": "removed"
                      },
                      {
                        "line": "fread(buf, 1, size, fp);\n",
                        "lineNumber": 2493,
                        "lineChange": "added"
                      },
                      {
                        "line": "/* On Windows len may not equal the number returned by fread(). */\n",
                        "lineNumber": 2494,
                        "lineChange": "added"
                      },
                      {
                        "line": "len = strlen(buf);\n",
                        "lineNumber": 2495,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (len > MAXSTR - 1) {\n",
                        "lineNumber": 2496,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return picolErr(i, \"read contents too long\");\n",
                        "lineNumber": 2497,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {\n",
                        "lineNumber": 2498,
                        "lineChange": "none"
                      },
                      {
                        "line": "    buf[actual_size] = '\\0';\n",
                        "lineNumber": 2497,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    buf[len] = '\\0';\n",
                        "lineNumber": 2499,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vesoft-inc/nebula/commit/74440749b7c7c1083a929e2875ec54a5ba7e4ccf?diff=split#diff-71fe42425c5fd55cba742510442addd5a980970e754369d5135f1f2a54b92e04L-1",
                    "lines": [
                      {
                        "line": "verbose = \"syntax error near `\" + std::string(&cmd[start-1], &cmd[end]) + \"'\";\n",
                        "lineNumber": 354,
                        "lineChange": "removed"
                      },
                      {
                        "line": "verbose = \"syntax error near `\" + std::string(&cmd[start-1], end - start + 1) + \"'\";\n",
                        "lineNumber": 354,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 46,
                "cwe": [
                  "CWE-125",
                  "CWE-787"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1",
                    "lines": [
                      {
                        "line": "const img = fs.readFileSync(filePath);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.end(img);\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.sendFile(filePath, {root: './'});\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/telekom/telements/commit/a9df3dc7d2274f59fa92a62cd0ea932af9ff703b?diff=split#diff-7266650a75fc58e629b4039a6109605b7e6b29d02f97a87ea33cdcfa3b514a95L-1",
                    "lines": [
                      {
                        "line": "const sanitize = require(\"sanitize-filename\");\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "const PORT = 5005;\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine(\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  'hbs',\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  handlebars({\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    defaultLayout: 'main',\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    extname: '.hbs',\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'hbs');\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static('public'));\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/', (req, res) => {\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('index');\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/:component', (req, res) => {\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "  try {\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.render(req.params.component, {\n",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      title: req.params.component.replace(/^./, c => c.toUpperCase()),\n",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    res.render(sanitize(req.params.component), {\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "      title: sanitize(req.params.component)\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .replace(/-/g, ' ')\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .replace(/\\b\\w/g, (c) => c.toUpperCase()),\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "    if (has(pages, req.url)) {\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var p = req.url.split(/[#?]/)[0];\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (p === '/') {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        html('layout.html').pipe(hyperstream({\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "            '#content': html(pages[req.url])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '[page=create]': html('create.html'),\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=view]': html('view.html'),\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=edit]': html('edit.html')\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "        })).pipe(res);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else st(req, res);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "function html (file) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 204,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "python/CodeInjection",
              "name": "CodeInjection",
              "shortDescription": {
                "text": "Code Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CodeInjection",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/spectralDNS/shenfun/commit/16475f2baf898134032dbdd155dd0a563312eff0?diff=split#diff-fb6da554a7c1e9794c48fc606ab31338fabdcc929700fc2e15d28570af157e58L-1",
                    "lines": [
                      {
                        "line": "assert isinstance(eval(sys.argv[-2]), int)\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "assert isinstance(int(sys.argv[-2]), int)\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nextml/NEXT/commit/b0b770405772329dac83ddfdd870ffbbd6a33c4a?diff=split#diff-98933f824249bbc1f6ec89f094e9077caeb5921ae009aa42feb4d2b8d90f7ccfL-1",
                    "lines": [
                      {
                        "line": "        true_values ={1, '1', 'True', 'true'}\n",
                        "lineNumber": 87,
                        "lineChange": "added"
                      },
                      {
                        "line": "        zip_true = False\n",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if request.args.get('zip'):\n",
                        "lineNumber": 88,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            try:\n",
                        "lineNumber": 89,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                zip_true = eval(request.args.get('zip'))\n",
                        "lineNumber": 90,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            except:\n",
                        "lineNumber": 91,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                pass\n",
                        "lineNumber": 92,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 93,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if 'zip' in request.args.keys():\n",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "            zip_true = True if request.args.get('zip') in true_values else False\n",
                        "lineNumber": 90,
                        "lineChange": "added"
                      },
                      {
                        "line": "        csv = False\n",
                        "lineNumber": 91,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if 'csv' in request.args.keys():\n",
                        "lineNumber": 92,
                        "lineChange": "added"
                      },
                      {
                        "line": "            csv = True if request.args.get('csv') in true_values else False\n",
                        "lineNumber": 93,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/naftaliharris/tauthon/commit/4ce126b887212da704b2fe4cf7a22322b48d45bd?diff=split#diff-b989b2f4ba160af991a115642288da4f6cc1bc6e98ead4bf36cf2b8cc235a41fL-1",
                    "lines": [
                      {
                        "line": "\tyear = eval(sys.argv[1])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    year = int(sys.argv[1])\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tyear = input('In which year were you born? ')\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "if year in range(100):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprint 'I\\'ll assume that by', year,\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    year = year + 1900\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print 'you mean', year, 'and not the early Christian era'\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "elif year not in range(1850, 2000):\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprint 'It\\'s hard to believe you were born in', year\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "#\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "if sys.argv[2:]:\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmonth = eval(sys.argv[2])\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    month = int(sys.argv[2])\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "else:\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tmonth = input('And in which month? (1-12) ')\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "if month not in range(1, 13):\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    print 'There is no month numbered', month\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "#\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "if sys.argv[3:]:\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tday = eval(sys.argv[3])\n",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    day = int(sys.argv[3])\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 69,
                "cwe": [
                  "CWE-94"
                ]
              }
            },
            {
              "id": "python/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "CommandInjection",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceEnvironmentVariable",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/akrherz/iem/commit/b5c301c73b1eaf0fafe4fc7da263b5aa296ff478?diff=split#diff-9a50733bcf7d3ffb9b77b5090035d8278adaaf14597ff016ed0693f0352402c9L-1",
                    "lines": [
                      {
                        "line": "subprocess.call(\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    \"python make_windrose.py %s %s\" % (net, sid), shell=True\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": ")\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "subprocess.call([\"python\", \"make_windrose.py\", net, sid])\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/radiasoft/sirepo/commit/cb55e293ce2a89a3ba4f93856d5cb109eda92b74?diff=split#diff-8eb5972a1091fbc80b6f45c0ec214191751378ee161dd715953b8457e31ba822L-1",
                    "lines": [
                      {
                        "line": "try:\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    (infile1, infile2, outfile) = sys.argv[1:]\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    os.system('sddscombine {} {} -merge {}'.format(infile1, infile2, outfile))\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "except:\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    raise RuntimeError('usage: {} <infile> <infile> <outfile>'.format(sys.argv[0]))\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if len(sys.argv) != 4:\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    raise RuntimeError(\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "        f\"Expected 3 args, got {len(sys.argv) - 1}\\nusage: {sys.argv[0]} <infile> <infile> <outfile>\",\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "subprocess.check_call(\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    (\"sddscombine\", sys.argv[1], sys.argv[2], \"-merge\", sys.argv[3]),\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": ")\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/pytest-dev/execnet/commit/fa8c5d4448508bf1dd8bd6808d8030873364aec2?diff=split#diff-726eec43fca5e233f32f04fc3f43393e89bc69f584282532a6f9204e9e1a610eL-1",
                    "lines": [
                      {
                        "line": "cmd = \"python %s %s\" % (script, \" \".join(sys.argv[1:]))\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "print \"starting subcommand:\", cmd\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "f = os.popen(cmd)\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "for line in f:\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    print line,\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "cmdlist = [\"python\", script]\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "cmdlist.extend(sys.argv[1:])\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "print \"starting subcommand:\", \" \".join(cmdlist)\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "process = subprocess.Popen(cmdlist)\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "process.wait()\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 309,
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "cpp/ImproperNullTermination/test",
              "name": "ImproperNullTermination/test",
              "shortDescription": {
                "text": "Improper Null Termination"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nImproper null termination occurs when a character string's ending null character is omitted or outside the allocated memory for the string. This typically leads to information leaks or buffer overflows and occurs when:\n* There is an off-by-one error which leads to the null character being out of bounds\n* Raw data is passed to functions expecting strings. This can lead to out of bounds reading or writing (e.g., strlen / strcpy using raw data)\n\n## Best practices for prevention\n* Use functions that ensure proper null termination. Pay attention to the way the string functions affect the ending null character (e.g., strncpy doesn't necessarily ensure null termination)\n* Avoid passing raw data to functions expecting strings. If this can't be avoided ensure there is proper null termination (e.g., write a null character at the end of the buffer)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "ImproperNullTermination",
                  "Security",
                  "InTest",
                  "SourceImproperNullTermination",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aquynh/capstone/commit/22a5a761d8be37bab9d3d507841874f19625d3e9?diff=split#diff-66a380d2b83d14e1b2cc0743651892bfb6c73490ea39ba8b6eb027ddd1cbf97eL-1",
                    "lines": [
                      {
                        "line": "strncpy(insn->mnemonic, buffer, sizeof(insn->mnemonic) - 1);\n",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "insn->mnemonic[sizeof(insn->mnemonic) - 1] = '\\0';\n",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(insn->mnemonic, buffer);\n",
                        "lineNumber": 314,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uudiin/raspd/commit/39170d13306259d98816566a3ac30afa138c70ba?diff=split#diff-fb2adfba4fdb4b1695553f0e720141b28d8026ad94a502f3fd7256df5a979d6cL-1",
                    "lines": [
                      {
                        "line": "#include <string.h>\r\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <errno.h>\r\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <getopt.h>\r\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <unistd.h>\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/socket.h>\r\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/un.h>\r\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sock.h>\r\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "#define BUF_SIZE    1024\r\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "int main(int argc, char *argv[])\r\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\r\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    static struct option options[] = {\r\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { \"unix\", required_argument, NULL, 'u' },\r\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { 0, 0, 0, 0 }\r\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    };\r\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int c;\r\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char *unixsock = NULL;\r\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int fd;\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    union sockaddr_u addr;\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socklen_t len;\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char buffer[BUF_SIZE];\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int err;\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while ((c = getopt_long(argc, argv, \"du:\", options, NULL)) != -1) {\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (c) {\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case 'u': unixsock = optarg; break;\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\r\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (unixsock == NULL) {\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fprintf(stderr, \"must be set the unixsock socket file\");\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0)\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (strlen(unixsock) >= sizeof(addr.un.sun_path))\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    memset(&addr, 0, sizeof(addr));\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    addr.un.sun_family = AF_UNIX;\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strncpy(addr.un.sun_path, unixsock, sizeof(addr.un.sun_path));\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    len = SUN_LEN(&addr.un);\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (connect(fd, &addr.sockaddr, len) < 0)\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /* main loop */\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while (fgets(buffer, sizeof(buffer), stdin) != NULL) {\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        size_t size = strlen(buffer);\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int retval;\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = write(fd, buffer, size);\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval != size)\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fprintf(stderr, \"send date error, err = %d\\n\", retval);\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = read(fd, buffer, sizeof(buffer));\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval)\r\n",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (retval) {\r\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "            buffer[retval] = '\\0';\r\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/swoole/swoole-src/commit/77fd91854b865bc6fba16aca6adf699b60a81603?diff=split#diff-9188d03744376460f57ecbe5914ccfe8f20ca6ef14d0d12100dcd8d738c0ad71L-1",
                    "lines": [
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, PATH_MAX - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, sizeof(buf) - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if (byte <= 0) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return false;\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 155,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        strcpy(task.filename, buf);\n",
                        "lineNumber": 156,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        task.filename[byte] = 0;\n",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 158,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        buf[byte] = 0;\n",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "        swoole_strlcpy(task.filename, buf, sizeof(task.filename));\n",
                        "lineNumber": 156,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 114,
                "cwe": [
                  "CWE-170"
                ]
              }
            },
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1",
                    "lines": [
                      {
                        "line": "    return os.path.join(DATAROOT, obj_path)\n",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return safe_join(DATAROOT, obj_path)\n",
                        "lineNumber": 123,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_index_absolute_path(index):\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return os.path.join(INDEXDIR, index)\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "@scope_blueprint.route('/obj/<path:obj_path>')\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object_src_http(obj_path):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path = _get_obj_absolute_path(obj_path)\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    headers = Headers()\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # With add_etags=True, conditional=True\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Flask should be smart enough to do 304 Not Modified\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = send_file(path,\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "destdir = None\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "if sys.argv[1:]:\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "os.chdir(wdir)\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "tar = src + \".tar\"\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "gz = tar + \".gz\"\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "tgz = src + \".tgz\"\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"source:\", src\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"dest:\", tgz\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 180,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow",
              "name": "IntegerOverflow",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow/test",
              "name": "IntegerOverflow/test",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "InTest",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "cpp/MemoryLeak",
              "name": "MemoryLeak",
              "shortDescription": {
                "text": "Missing Release of Memory after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nHeap allocated memory is not sufficiently tracked and released after it is has been used, which slowly consumes remaining memory.\n\n\n## Best practices for Prevention\n* Allocate and free memory in the same module, at the same level of abstraction, [see example](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)\n\n\n## References\n* [CERT MEM00-C](https://wiki.sei.cmu.edu/confluence/display/c/MEM00-C.+Allocate+and+free+memory+in+the+same+module%2C+at+the+same+level+of+abstraction)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "MemoryLeak",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/luohaha/CSpider/commit/16cfb833cc993dc4a70a485737ae58990847f0aa?diff=split#diff-73ac80300bd77b06962065e0f2b544ff11b545899c989846a9b78cf07406d4e2L-1",
                    "lines": [
                      {
                        "line": "char *buf = (char*)malloc(sizeof(char));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "node->data = &buf;\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "node->data = buf;\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/BergerLab/CAST/commit/b5c9257229b30604b30b5e363e816bcfe433ee21?diff=split#diff-40aa21688f1ac58ddf8ef5f0f4e472e6075411f5c4f75b9c1d512b7e03a2cbabL-1",
                    "lines": [
                      {
                        "line": "    int *indices = malloc((len+1)*sizeof(*indices));\n",
                        "lineNumber": 148,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assert(indices);\n",
                        "lineNumber": 149,
                        "lineChange": "none"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 150,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i <= len; i++) {\n",
                        "lineNumber": 151,
                        "lineChange": "none"
                      },
                      {
                        "line": "        l = w;\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "        w = line[i] != '\\t' && line[i] != '\\0';\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (w != l || (l && i == len) || i == 0)\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "            indices[num_sections++] = i;\n",
                        "lineNumber": 155,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 156,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char **words = malloc((num_sections/2+1)*sizeof(*words));\n",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "    assert(words);\n",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    words[num_sections/2] = NULL;\n",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for (int i = 0; i < num_sections-1; i++)\n",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (i % 2 != m) {\n",
                        "lineNumber": 164,
                        "lineChange": "none"
                      },
                      {
                        "line": "            words[i/2] = malloc((indices[i+1]-indices[i]+1)*sizeof(*words));\n",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "            assert(words[i/2]);\n",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "            strncpy(words[i/2], line+indices[i], indices[i+1]-indices[i]);\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    free(indices);\n",
                        "lineNumber": 171,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 172,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/stanfordnlp/spinn/commit/b3575456973332425d9ce4339ca50a7514461795?diff=split#diff-64540c38ca1b79e4e84eecff13ce24011cc4e92689e96ddf84ffa904a5c4456dL-1",
                    "lines": [
                      {
                        "line": "  float *ret = (float *) malloc(N * sizeof(float));\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ifstream file(filename);\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float x;\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  for (int i = 0; i < N; i++) {\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    file >> x;\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cout << x << endl;\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ret[i] = x;\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return ret;\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "float *load_weights_cuda(string filename, int N) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *h_weights = load_weights(filename, N);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "  float *d_weights;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMalloc(&d_weights, N * sizeof(float));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  cudaMemcpy(d_weights, h_weights, N * sizeof(float),\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "      cudaMemcpyHostToDevice);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  free(h_weights);\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 35,
                "cwe": [
                  "CWE-401"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/func_decl_dependencies.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 29,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d9ed9db24f868878dadf8fd9b04c37e6d8df3432e1e900cffc602f5eaa0a7d0",
            "1": "176bacc3.33a3832a.66e58c8d.74976764.fb15e014.625fe4a2.30ad82ea.24d2a415.e68c9162.33a3832a.66e58c8d.74976764.fb15e014.625fe4a2.30ad82ea.24d2a415"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/func_decl_dependencies.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 29,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/simplifiers/demodulator_simplifier.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 20,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3c7fe713033421611b53219147d0a258db7eabf18df6c49f3c0d76da3e145896",
            "1": "528cf191.09b996bf.66e58c8d.3907a53a.74832d3e.6a274ab8.30ad82ea.c0d33555.2d06e3d6.09b996bf.66e58c8d.3907a53a.11f2346a.6a274ab8.30ad82ea.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/simplifiers/demodulator_simplifier.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/math/lp/nla_tangent_lemmas.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191,
                  "startColumn": 73,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d0946f484aa433bb60e42c45ad19387bae27e6a1a90c2e4f10d74f81f82c52f",
            "1": "176bacc3.2c76668f.9f41dd20.8ab4267b.557a5730.0946c333.df7e59ba.c0d33555.806fabc4.eec8e215.66e58c8d.8ab4267b.add3e9a5.6a274ab8.30ad82ea.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/math/lp/nla_tangent_lemmas.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 73,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/ddnf/ddnf.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 840,
                  "endLine": 840,
                  "startColumn": 62,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec541f0d6ffe2a5edca51f96601175d4200e92773282cc052b67c816dca57da6",
            "1": "1db36424.9c1e46d4.66e58c8d.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.387364b1.2d06e3d6.9c1e46d4.66e58c8d.8ab4267b.10982d71.6a274ab8.30ad82ea.015a5184"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/ddnf/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 840,
                            "endLine": 840,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/rel/dl_relation_manager.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 271,
                  "startColumn": 17,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "17f4184dbc598f80fde7e1304c19d7da51b2f560b03c2553f0e75937de5ff9d4",
            "1": "57664a44.f7ca89da.66e58c8d.8ab4267b.265d072e.6a274ab8.30ad82ea.13b094cf.d5044878.f7ca89da.66e58c8d.8ab4267b.265d072e.6a274ab8.30ad82ea.13b094cf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/rel/dl_relation_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/rel/dl_relation_manager.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 286,
                  "endLine": 286,
                  "startColumn": 17,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "78c1629494b2abd03586fc7535afea903d5e0d4a95a4cfc92d52e412a1b09a11",
            "1": "8b1ec7ff.e9ae1792.66e58c8d.8ab4267b.4d8a2df1.6a274ab8.26e4a1d6.5b6cf5fb.170abd2f.ef68426d.66e58c8d.8ab4267b.d46c37c3.6a274ab8.26e4a1d6.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/rel/dl_relation_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 286,
                            "endLine": 286,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/spacer/spacer_context.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 697,
                  "endLine": 697,
                  "startColumn": 17,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d2d813d8f8cccf1eebf100c3ed0518e47002ccbfe940b073415cbf923941672e",
            "1": "e52db102.a5b374ad.689de000.8ab4267b.06eccdb7.6a274ab8.30ad82ea.38cfc753.2d06e3d6.a5b374ad.66e58c8d.8ab4267b.06eccdb7.6a274ab8.30ad82ea.38cfc753"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/spacer/spacer_context.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 697,
                            "endLine": 697,
                            "startColumn": 17,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/spacer/spacer_context.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2458,
                  "endLine": 2458,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6fe81a16f4d2f438655a4b548a1563329f559989889037c1a50f5d851cdd20c3",
            "1": "176bacc3.dc808647.66e58c8d.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.c0d33555.bdccc2c9.349fbb8f.66e58c8d.8ab4267b.02d3ab7b.6a274ab8.30ad82ea.ac081e42"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/spacer/spacer_context.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2458,
                            "endLine": 2458,
                            "startColumn": 44,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/spacer/spacer_sym_mux.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 26,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd67a21fc0af71233c92b2553cedd9003f914913ceee3570f98c5a095ae0fa74",
            "1": "ed27a822.349fbb8f.66e58c8d.8ab4267b.8f20e237.6a274ab8.30ad82ea.6eeaef3a.2d06e3d6.608023d4.66e58c8d.8ab4267b.fbee80e3.6a274ab8.30ad82ea.6eeaef3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/spacer/spacer_sym_mux.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/transforms/dl_mk_quantifier_instantiation.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 54,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5c771b52852cbca5c1049432d071b6b668e6851b3466daca0d2aa28d3699d19a",
            "1": "9f9dcc6a.76503df6.72aabef6.27f9dbc8.4d8a2df1.34c6cc13.50e07b35.c0d33555.2d06e3d6.76503df6.66e58c8d.27f9dbc8.a6264472.34c6cc13.50e07b35.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/transforms/dl_mk_quantifier_instantiation.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 54,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/transforms/dl_mk_slice.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 226,
                  "endLine": 226,
                  "startColumn": 57,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "69d46db7d9d6ec5627539e5e15a7af454de3a7f935613af6b59a713035985aac",
            "1": "57664a44.21ab2f7c.66e58c8d.8ab4267b.4d8a2df1.2f4e1548.5db3d4a6.c0d33555.2d06e3d6.957caf25.66e58c8d.5451a9b6.ae4355dd.0a988edb.30ad82ea.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/transforms/dl_mk_slice.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 226,
                            "endLine": 226,
                            "startColumn": 57,
                            "endColumn": 59
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/qe/qe_arith_plugin.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2183,
                  "endLine": 2183,
                  "startColumn": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "124df2a16675868e48d78d3b6726703db9ef7645e0ca0e649e4dfe72e2c35ebb",
            "1": "57664a44.f508eee1.66e58c8d.8ab4267b.4dae3835.7155bab4.30ad82ea.c0d33555.2b27e29d.2fff374a.a1780f56.59162423.5ef953d3.7155bab4.743bce04.36dbcf5c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/qe/qe_arith_plugin.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2183,
                            "endLine": 2183,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/qe/qe_datatype_plugin.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 829,
                  "endLine": 829,
                  "startColumn": 21,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fbde330a599320b123bb8cbc87af5c87af345f2ebd66a19007a5f99b3c516cde",
            "1": "142c3e2a.b8382ff5.66e58c8d.11f88369.cc84fdca.6a274ab8.30ad82ea.4e31e11c.b00a2da0.b3973621.a1780f56.11f88369.5f558333.6a274ab8.30ad82ea.4e31e11c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/qe/qe_datatype_plugin.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 829,
                            "endLine": 829,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/qe/qe_dl_plugin.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 21,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "679d62162678e580a62ca04641f587aa8d462c23dc55f2f05afd8b2729595813",
            "1": "d155b984.f508eee1.cbb96309.8ab4267b.cc84fdca.6a274ab8.30ad82ea.4e31e11c.9a168a00.277c621c.a1780f56.8ab4267b.5f558333.6a274ab8.743bce04.4e31e11c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/qe/qe_dl_plugin.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/sat/smt/array_internalize.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 253,
                  "endLine": 253,
                  "startColumn": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd3213463963c0408bee2a8ce88674153c314401c5c7b4f5e20451ad921e4049",
            "1": "176bacc3.a5b374ad.66e58c8d.8ab4267b.4d8a2df1.625fe4a2.30ad82ea.c0d33555.2d06e3d6.a5b374ad.66e58c8d.8ab4267b.10982d71.625fe4a2.30ad82ea.a98020e1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/smt/array_internalize.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 253,
                            "endLine": 253,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 515,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/util/debug.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "endLine": 160,
                  "startColumn": 14,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e98f985ba27c48150dc4a9fc9e089d36e4451552622eefd0144e55225f6e471",
            "1": "176bacc3.a5b374ad.98501263.8ab4267b.4dae3835.e723426a.30ad82ea.c0d33555.176bacc3.69a25265.3d78b5f0.8ab4267b.4dae3835.e723426a.30ad82ea.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/debug.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 14,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/util/debug.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 18,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2bf6959646063f3b208fa9d675ab1977a74b425f082e74ebf0e26bc1ff913137",
            "1": "176bacc3.a5b374ad.98501263.8ab4267b.4dae3835.e723426a.30ad82ea.c0d33555.57664a44.a5b374ad.98501263.8ab4267b.4dae3835.e723426a.30ad82ea.c0d33555"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/debug.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 18,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/util/gparams.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 449,
                  "endLine": 449,
                  "startColumn": 35,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebcd66d614fa9e1a0188fe1db01a50fc24c7027598f57bfebd9bed28409df9f8",
            "1": "f5aacbd4.cdb72d0d.2d1d7888.8ab4267b.9a3c4794.2f4e1548.400b44f9.84744994.f5aacbd4.9969c821.2d1d7888.8ab4267b.1b4504f0.8dca5380.30ad82ea.84744994"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/gparams.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 35,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/DerefNull",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "markdown": "A pointer is possibly assigned to NULL then used. NULL pointer use can lead to program crashes.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/util/gparams.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 471,
                  "endLine": 471,
                  "startColumn": 30,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "00eb393182249d8a685e16adccdc1ce047e79fab97848be0e39585bf1a9a4b1a",
            "1": "176bacc3.a5b374ad.2d1d7888.8ab4267b.9a3c4794.6a274ab8.30ad82ea.84744994.2d06e3d6.a5b374ad.2d1d7888.8ab4267b.1b4504f0.8dca5380.30ad82ea.84744994"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/gparams.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 471,
                            "endLine": 471,
                            "startColumn": 30,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 565,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into printf, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[printf](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/maxsat/maxsat.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 241,
                  "endLine": 241,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "20a2af5a2b052859d3e7c5cc6533f72fbc8d499d5a06e547dc6a57892b87ddec",
            "1": "60e0d496.277c621c.7be03776.e2f8c193.5ef953d3.34c6cc13.30ad82ea.074a3eb3.60e0d496.277c621c.ce5d5196.e2f8c193.09f8ba64.f2fff2d5.9957b03c.ac5b595e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 12,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 48,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 74,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 246,
                            "endLine": 246,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 17,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 248,
                            "endLine": 248,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 69,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 111,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 66,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 66,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 44,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 44,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 17,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemoryLeak/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Leaking memory. lp::test_result<T> is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[lp::test_result<T>](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/lp/test_file_reader.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 33,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1f83b929214293007b19579b15557147385070426617875bd6bd6c46f904a85e",
            "1": "45681256.25163b69.2de4218d.2e67b38d.26b02eb6.6a274ab8.30ad82ea.acd45df7.45681256.7ce685bd.29143a1c.2e67b38d.26b02eb6.6a274ab8.30ad82ea.acd45df7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/test_file_reader.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemsetMayBeOptimizedAway",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Be aware that an optimizing compiler might be removing this call to memset, since this m_true array does not seem to be used after the call to memset.",
            "markdown": "Be aware that an optimizing compiler might be removing this call to {0}, since {1} does not seem to be used after the call to {2}.",
            "arguments": [
              "[memset](0)",
              "[this m_true array](1)",
              "[memset](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/sat/sat_binspr.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 20,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be93755f2df09e26ba33b99ffb88789b05f0846674199afa6b436f3b0b0fa694",
            "1": "57664a44.1beca91c.98501263.d9c92da3.ec473651.2f4e1548.2d6c802a.5e46b26f.e41e8c6b.d93113ee.a1780f56.93cc8d4d.ec473651.e11f9d36.30ad82ea.5e46b26f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_binspr.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_binspr.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 9,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_binspr.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemsetMayBeOptimizedAway",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "Be aware that an optimizing compiler might be removing this call to memset, since this m_masks array does not seem to be used after the call to memset.",
            "markdown": "Be aware that an optimizing compiler might be removing this call to {0}, since {1} does not seem to be used after the call to {2}.",
            "arguments": [
              "[memset](0)",
              "[this m_masks array](1)",
              "[memset](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/sat/sat_lut_finder.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0d958e84c1874765ef67647e47568c5d2dca9d3ac014462d0356a8e77f5314e6",
            "1": "bb2609bf.8be50dd5.a1780f56.d9c92da3.7063cdd8.2f4e1548.ee44351e.b1003a24.bb2609bf.518f24b7.a1780f56.d9c92da3.d4b5a6d4.e11f9d36.30ad82ea.3c67c897"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_lut_finder.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_lut_finder.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 9,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/sat/sat_lut_finder.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[std::ifstream constructor](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/maxsat/maxsat.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 588,
                  "endLine": 588,
                  "startColumn": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "07291beba6e9471fa682b30c7e1c36ec92668cfce6dc2c3758189b660bd9f71e",
            "1": "ed27a822.277c621c.7be03776.a87d6a6f.5ef953d3.34c6cc13.30ad82ea.074a3eb3.ed27a822.277c621c.0845c629.a87d6a6f.289b8b43.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 633,
                            "endLine": 633,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 573,
                            "endLine": 573,
                            "startColumn": 19,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 588,
                            "endLine": 588,
                            "startColumn": 37,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/api_opt.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/api_opt.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 26,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/api_opt.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 384,
                  "endLine": 384,
                  "startColumn": 28,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e5d59dec8abaf4b6da4d646dc771f985928d962be38a8e2ea72c141aab29755b",
            "1": "f860bf07.957caf25.813fc897.1bd0bc43.049d933f.0062a718.e1eea83d.919bd094.f860bf07.957caf25.813fc897.1bd0bc43.9468e263.91b30f07.e1eea83d.6613d8cf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 384,
                            "endLine": 384,
                            "startColumn": 50,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/smtlib_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 32,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/smtlib_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/smtlib_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 177,
                            "endLine": 177,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[std::ifstream constructor](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 387,
                  "endLine": 387,
                  "startColumn": 28,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "efcc04b0a7e57c3b4a1d15361cacf44a76c5f1c44de0a38658e5e8f7f5184826",
            "1": "f860bf07.957caf25.813fc897.1bd0bc43.049d933f.91b30f07.e1eea83d.919bd094.f860bf07.957caf25.c08200d8.1bd0bc43.9468e263.91b30f07.e1eea83d.6613d8cf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 387,
                            "endLine": 387,
                            "startColumn": 40,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/dimacs_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 22,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/dimacs_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 96,
                            "endColumn": 105
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/dimacs_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 22,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/dimacs_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 22,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/dimacs_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 19,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 390,
                  "endLine": 390,
                  "startColumn": 28,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7a1c8dcdfb3bdb4a54ded723e9f59dd19ef1f4d4523cbcc61a00f00c1012bef1",
            "1": "f860bf07.957caf25.813fc897.1bd0bc43.049d933f.7aede8e7.e1eea83d.919bd094.f860bf07.957caf25.813fc897.810b0356.9468e263.91b30f07.e1eea83d.2ccb2568"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 390,
                            "endLine": 390,
                            "startColumn": 38,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 393,
                  "endLine": 393,
                  "startColumn": 28,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6fc19166467cfc8ea62cb448f8a655aab66e3ad1f26751a1b6ecf598711ce33c",
            "1": "f860bf07.957caf25.813fc897.1bd0bc43.049d933f.7aede8e7.e1eea83d.919bd094.f860bf07.957caf25.813fc897.1bd0bc43.9468e263.91b30f07.e1eea83d.8a403101"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 38,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 396,
                  "endLine": 396,
                  "startColumn": 28,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f28f5cd34d09d3f3eb53e2714f97fa5da353076ddd27128015ab0b0f6cb48baa",
            "1": "f860bf07.957caf25.813fc897.1bd0bc43.049d933f.7aede8e7.e1eea83d.919bd094.f860bf07.957caf25.813fc897.1bd0bc43.9468e263.91b30f07.e1eea83d.2ccb2568"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 38,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[std::ifstream constructor](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 402,
                  "endLine": 402,
                  "startColumn": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2171b992968dcc8a7e2f636b56cdf9285afd7d8aef0be33e7794ca79dd887199",
            "1": "7fe57a38.957caf25.813fc897.1bd0bc43.049d933f.0062a718.e1eea83d.919bd094.f860bf07.957caf25.66e58c8d.636ec2bd.fd550985.91b30f07.e1eea83d.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 17,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 28,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 13,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 402,
                            "endLine": 402,
                            "startColumn": 27,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/z3_log_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/z3_log_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 26,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/z3_log_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into std::ifstream constructor, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[std::ifstream constructor](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 405,
                  "endLine": 405,
                  "startColumn": 28,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "abf4960f9c9c3b1c1bd850efafdab31e4776864ac97c182e00c260a1d9328a36",
            "1": "f860bf07.a5b374ad.98501263.6778e359.cbff95dd.6a274ab8.30ad82ea.6613d8cf.f860bf07.20c2d94b.5c1261f7.636ec2bd.8eb541ac.3c97918b.76d4bb09.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 22,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 17,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 405,
                            "endLine": 405,
                            "startColumn": 38,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/drat_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/drat_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/drat_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 19,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 557,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/SizeAsIndex",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "The size of the buffer from size is used as an array index. This value could be one larger than the last possible index of the array, causing a buffer overread or overwrite.",
            "markdown": "The size of the buffer from size is used as an array index. This value could be one larger than the last possible index of the array, causing a buffer overread or overwrite.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/tactic/arith/pb2bv_tactic.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 280,
                  "startColumn": 37,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "72d9c8b31eb8c81316cba4a81464da42e34cb506f5fa5fcedc5e202f7bea9e62",
            "1": "6a2f1dea.76503df6.66e58c8d.cc899355.baf5e6ff.34c6cc13.b1892699.38cfc753.57840edc.d0205592.a1780f56.1c706e52.b75be854.34c6cc13.50e07b35.38cfc753"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/tactic/arith/pb2bv_tactic.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/SizeAsIndex",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "The size of the buffer from size is used as an array index. This value could be one larger than the last possible index of the array, causing a buffer overread or overwrite.",
            "markdown": "The size of the buffer from size is used as an array index. This value could be one larger than the last possible index of the array, causing a buffer overread or overwrite.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/tactic/arith/pb2bv_tactic.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 37,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c9bdc0daad09af2a782d4541391c31e7583ccdbc870631d6323e998777a9bf01",
            "1": "6a2f1dea.76503df6.66e58c8d.cc899355.baf5e6ff.34c6cc13.b1892699.38cfc753.57840edc.d0205592.a1780f56.1c706e52.b75be854.34c6cc13.50e07b35.38cfc753"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/tactic/arith/pb2bv_tactic.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[strlen](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 449,
                  "endLine": 449,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a42e465b3916e80b4e436765be661500b652831c9127018ec1331b93edb4f611",
            "1": "57664a44.9f15f38e.62929198.1bd0bc43.557a5730.625fe4a2.30ad82ea.55009d8c.73e5bd6e.dc836d95.66e58c8d.93cc8d4d.546b9441.625fe4a2.30ad82ea.55009d8c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 15,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 15,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 440,
                            "endLine": 440,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 60,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 99,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 85,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 69,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[strlen](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 517,
                  "endLine": 517,
                  "startColumn": 13,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "111b30d4af211264b79522a56ba86602982739189d9b1a848d6b9d392ad7310b",
            "1": "ed27a822.a3418581.66e58c8d.93cc8d4d.b449d07f.1396b56c.5db3d4a6.7a2329a2.f1defce8.78bce750.a1780f56.4488086c.b449d07f.c08ba2b6.013e9263.7a2329a2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 27,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 27,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 873,
                            "endLine": 873,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 514,
                            "endLine": 514,
                            "startColumn": 22,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 35,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[strlen](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 557,
                  "endLine": 557,
                  "startColumn": 13,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f250e095da98bf84349e23c47a41613bd0cff90a91aaebcb2fd45c50bb401d7d",
            "1": "ed27a822.78bce750.256b52c0.e7573c59.e304d377.625fe4a2.30ad82ea.0aae3a68.f5aacbd4.78bce750.a1780f56.e7573c59.b449d07f.637c5bf6.30ad82ea.18d7b9db"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1114,
                            "endLine": 1114,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1115,
                            "endLine": 1115,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 556,
                            "endLine": 556,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 557,
                            "endLine": 557,
                            "startColumn": 35,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 28,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 49,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 42,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[strlen](18)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 558,
                  "endLine": 558,
                  "startColumn": 27,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bf0c0d1fc37c6c547bb38cb1f72571af4629a9d6396e0bd35b076c3b07d60a03",
            "1": "ed27a822.bfa31b39.5f6a6691.e7573c59.e304d377.625fe4a2.5db3d4a6.c88bd9ea.ed27a822.78bce750.256b52c0.e7573c59.e304d377.625fe4a2.30ad82ea.0aae3a68"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1114,
                            "endLine": 1114,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1115,
                            "endLine": 1115,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 556,
                            "endLine": 556,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 49,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 35,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 35,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 28,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 49,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 42,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[strlen](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 880,
                  "endLine": 880,
                  "startColumn": 24,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "af5b4f837d997976d9be9df17675aac89227fbc030eb8b9ec5a494b5b49668ef",
            "1": "ed27a822.a3418581.a1780f56.4488086c.b449d07f.637c5bf6.559b683b.f015ad7f.f5aacbd4.a3418581.a1780f56.4488086c.b449d07f.e11f9d36.30ad82ea.366bcde3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 27,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 27,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 558,
                            "endLine": 558,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 873,
                            "endLine": 873,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 880,
                            "endLine": 880,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 514,
                            "endLine": 514,
                            "startColumn": 22,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 517,
                            "endLine": 517,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 17,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 35,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[strlen](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 923,
                  "endLine": 923,
                  "startColumn": 27,
                  "endColumn": 48
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74e602f45b447b466723849951edb7c59c60fd36534702abcac2d8fec8763e7b",
            "1": "57664a44.8be50dd5.66e58c8d.74976764.557a5730.0946c333.3784d166.c0d33555.6cc0539f.64669cec.a1780f56.74976764.ec473651.0946c333.ce89b127.18d7b9db"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 918,
                            "endLine": 918,
                            "startColumn": 28,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 918,
                            "endLine": 918,
                            "startColumn": 28,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 918,
                            "endLine": 918,
                            "startColumn": 17,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 923,
                            "endLine": 923,
                            "startColumn": 71,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 99,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 85,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 69,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[strlen](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ast/ast_smt2_pp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1115,
                  "endLine": 1115,
                  "startColumn": 20,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a4660b52930d1c5bc475d5b83fec3e57036fb7b87b95f2b7c81cfb2a038c2dd3",
            "1": "ed27a822.78bce750.a1780f56.93cc8d4d.0f4850aa.625fe4a2.30ad82ea.0aae3a68.ed27a822.78bce750.a1780f56.93cc8d4d.60d3594b.e11f9d36.30ad82ea.0aae3a68"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 22,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 520,
                            "endLine": 520,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 526,
                            "endLine": 526,
                            "startColumn": 20,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1114,
                            "endLine": 1114,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1115,
                            "endLine": 1115,
                            "startColumn": 37,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 556,
                            "endLine": 556,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/ast_smt2_pp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 557,
                            "endLine": 557,
                            "startColumn": 35,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 28,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 28,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 49,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 42,
                            "endColumn": 48
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[strlen](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/cmd_context/pdecl.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 855,
                  "endLine": 855,
                  "startColumn": 20,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4730fa896b8e258179a5fb1ecab9b55578f815e41b4e841e9f0197a683b57d9e",
            "1": "57664a44.5e297362.66e58c8d.1bd0bc43.e304d377.625fe4a2.30ad82ea.55009d8c.bc441d81.09b996bf.66e58c8d.3907a53a.557a5730.625fe4a2.30ad82ea.55009d8c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/smt2_util.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/cmd_context/pdecl.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 20,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/cmd_context/pdecl.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 20,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/cmd_context/pdecl.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 847,
                            "endLine": 847,
                            "startColumn": 13,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/cmd_context/pdecl.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 855,
                            "endLine": 855,
                            "startColumn": 62,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 99,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 45,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 85,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 69,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/ast/format.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 360,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.default.writeFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[fs.default.writeFileSync](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 472,
                  "endLine": 472,
                  "startColumn": 4,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "58dae37496b76922985a76986143d4d6fee1fca35ecb8333d198f1fdf62dcb85",
            "1": "ae77ea27.4773f344.faad7cf4.d7919eeb.3a4c775b.5fce695c.df7e59ba.89d75565.6e283998.4773f344.faad7cf4.cdaeacef.3f452f8c.5fce695c.96ea21a8.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 25,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 7,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 472,
                            "endLine": 472,
                            "startColumn": 18,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 472,
                            "endLine": 472,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into fs.default.writeFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[fs.default.writeFileSync](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 474,
                  "endLine": 474,
                  "startColumn": 4,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1fbb34b8cec0ba226f5ca8f66de26fbd4b25b3d63c937c9ec69e640fdc98293c",
            "1": "ae77ea27.4773f344.faad7cf4.d7919eeb.ef9f7d82.5fce695c.df7e59ba.89d75565.6e283998.4773f344.94b29de5.cdaeacef.8beb39a0.5fce695c.e1eea83d.83183368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 23,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/js/scripts/make-ts-wrapper.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 474,
                            "endLine": 474,
                            "startColumn": 4,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strcmp, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3)",
              "[strcmp](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/fp/datalog_parser.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 604,
                  "endLine": 604,
                  "startColumn": 29,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6bc113a588b11c1e38ca90f2a1a1211bd2da5eea0b20c30a948cd8f51ec4e87",
            "1": "69ef94d6.dd0c028f.a1780f56.93cc8d4d.60d3594b.e11f9d36.30ad82ea.fc50587a.69ef94d6.957caf25.a1780f56.93cc8d4d.60d3594b.e11f9d36.30ad82ea.fc50587a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 440,
                            "endLine": 440,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 604,
                            "endLine": 604,
                            "startColumn": 36,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 604,
                            "endLine": 604,
                            "startColumn": 29,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strcmp, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4)",
              "[strcmp](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/fp/datalog_parser.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 867,
                  "endLine": 867,
                  "startColumn": 20,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a6b24b24b5bb3102d064537d6c074c02692f87193c30b06cba27886af76a30da",
            "1": "69ef94d6.67a80300.66e58c8d.4fa4f6af.baf5e6ff.e723426a.30ad82ea.d509f760.69ef94d6.957caf25.a1780f56.93cc8d4d.baf5e6ff.e723426a.30ad82ea.fc50587a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 440,
                            "endLine": 440,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 866,
                            "endLine": 866,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 867,
                            "endLine": 867,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 867,
                            "endLine": 867,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strcmp, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4)",
              "[strcmp](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/muz/fp/datalog_parser.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 867,
                  "endLine": 867,
                  "startColumn": 61,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a6b24b24b5bb3102d064537d6c074c02692f87193c30b06cba27886af76a30da",
            "1": "001d1ee7.a5b374ad.8d2297a3.a9daa6c7.baf5e6ff.e723426a.30ad82ea.661547e6.69ef94d6.2f8f68e2.66e58c8d.4fa4f6af.baf5e6ff.e723426a.30ad82ea.d509f760"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 440,
                            "endLine": 440,
                            "startColumn": 16,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 866,
                            "endLine": 866,
                            "startColumn": 29,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 867,
                            "endLine": 867,
                            "startColumn": 68,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/muz/fp/datalog_parser.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 867,
                            "endLine": 867,
                            "startColumn": 61,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CodeInjection",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into eval, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is executed as Python code. This may result in a Code Injection vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[eval](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/pyg2hpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb74262cb3a89d70cdda6e6e15bb9960b48a20ef5d476352444ba40a7f75d60e",
            "1": "a9e8e329.2036f5f0.79e62dc9.334cfc85.19c797a6.ba14daf2.f45dd68c.d42b46b6.129db901.e3d9b656.cf7b315a.9cd2dfe0.a5fb405f.0a892d8d.f6dc7859.d42b46b6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 27,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 48,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 887,
                            "endLine": 887,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 960,
                            "endLine": 960,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 960,
                            "endLine": 960,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 960,
                            "endLine": 960,
                            "startColumn": 33,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 961,
                            "endLine": 961,
                            "startColumn": 14,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 961,
                            "endLine": 961,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 961,
                            "endLine": 961,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 961,
                            "endLine": 961,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.call, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[subprocess.call](6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 401,
                  "endLine": 401,
                  "startColumn": 25,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1c6d462b7e51ee9e13bf264ade1dced5be0a70ad5f90d330b913b889f734940",
            "1": "e06468b8.b9156a94.1e205913.f68629de.a2d153c7.73cfdf26.682a1833.f355b44c.ef052351.04ad2656.ca02ff4b.f6463326.d2ce36a1.f29e86cb.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 357,
                            "endLine": 357,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 357,
                            "endLine": 357,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 401,
                            "endLine": 401,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 401,
                            "endLine": 401,
                            "startColumn": 25,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 401,
                            "endLine": 401,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.call, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3)",
              "[subprocess.call](4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 512,
                  "endLine": 512,
                  "startColumn": 25,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "41dda691cc3eca6513896a4e51110826efa05bc9acdd29f659399fb4dd247af9",
            "1": "7308a236.87a93cea.8bccd775.10409b09.d2ce36a1.2abbdc62.a03b7774.cab51c7f.ef052351.6b2e0628.6c3e7d9c.f6463326.c8b7d5cc.2b0051ee.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 512,
                            "endLine": 512,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 512,
                            "endLine": 512,
                            "startColumn": 25,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 512,
                            "endLine": 512,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strcmp, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3)",
              "[strcmp](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/string_buffer.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 10,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3edd53327b5636a598be2c277712a4a8b45c583b9af622dea4b24a17288dd2af",
            "1": "9f2b95bb.52f86cba.66e58c8d.f8f82e1b.baf5e6ff.e723426a.c5935a7a.661547e6.9f2b95bb.47074490.66e58c8d.f8f82e1b.baf5e6ff.e723426a.c5935a7a.661547e6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strcmp, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3)",
              "[strcmp](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/string_buffer.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 10,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4e7dd0f8538a1ecc1aab5ae4a8fe03a5172cc9fd941c47e09db61b924c9e43cd",
            "1": "9f2b95bb.52f86cba.66e58c8d.f8f82e1b.baf5e6ff.e723426a.c5935a7a.661547e6.9f2b95bb.47074490.66e58c8d.f8f82e1b.baf5e6ff.e723426a.c5935a7a.661547e6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[subprocess.Popen](6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 544,
                  "endLine": 544,
                  "startColumn": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3d64aa119f771b2abfaae894bac5bc44b15276073b3d168f2a9264974406fc1",
            "1": "7d39749e.48daba5e.74835968.b8f2cb15.31984cf1.73cfdf26.7e8da20f.6586e494.7d39749e.dbb1e0be.3b7b86da.80f016a5.31984cf1.2abbdc62.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 544,
                            "endLine": 544,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 259,
                            "endLine": 259,
                            "startColumn": 23,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 25,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[subprocess.Popen](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 956,
                  "endLine": 956,
                  "startColumn": 11,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "daecb3144cd55f21756e20bc9a3b724a6375d48795a25967883bf96d182878a5",
            "1": "e06468b8.4cc01092.897c5a9f.139c59a8.1a0abf6d.73cfdf26.6f6facae.742d9b21.7308a236.577bab1d.3b7b86da.139c59a8.1a0abf6d.73cfdf26.07b9aa90.6586e494"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 955,
                            "endLine": 955,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 25,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[subprocess.Popen](8),(9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 956,
                  "endLine": 956,
                  "startColumn": 24,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "daecb3144cd55f21756e20bc9a3b724a6375d48795a25967883bf96d182878a5",
            "1": "e06468b8.b5a115c3.98720dbf.1e2c0147.146bf8fd.73cfdf26.081ac3f4.6586e494.7d39749e.f16887a3.6c3e7d9c.f6463326.31984cf1.2b0051ee.5e26b1a0.1acbc41c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 965,
                            "endLine": 965,
                            "startColumn": 20,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 932,
                            "endLine": 932,
                            "startColumn": 17,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 955,
                            "endLine": 955,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 25,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[subprocess.Popen](6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 966,
                  "endLine": 966,
                  "startColumn": 16,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ded1288c6e544c2cb2ed4bd2b4f8b04343d192d4154e9ad8db9c2973d3a03ccd",
            "1": "bdb4d0b2.dbb1e0be.e4f08e22.5d1eb53b.1d07cee4.a5d7f69f.9dc8a776.1acbc41c.7d39749e.1aca8306.6c3e7d9c.1f44e86c.31984cf1.6fb272fc.5e26b1a0.1acbc41c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 966,
                            "endLine": 966,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 955,
                            "endLine": 955,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 25,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 956,
                            "endLine": 956,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[subprocess.Popen](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1975,
                  "endLine": 1975,
                  "startColumn": 24,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df5f401d06c02ca3a51187670922d06072adfc31806971ee847e0879606b87fc",
            "1": "e06468b8.577bab1d.897c5a9f.139c59a8.ce1a2e7d.73cfdf26.fa6ddf99.742d9b21.7308a236.87a93cea.3b7b86da.7879950c.d2ce36a1.2abbdc62.07b9aa90.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 38,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 37,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3)",
              "[subprocess.Popen](4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1975,
                  "endLine": 1975,
                  "startColumn": 37,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df5f401d06c02ca3a51187670922d06072adfc31806971ee847e0879606b87fc",
            "1": "7308a236.87a93cea.8bccd775.7879950c.d2ce36a1.2abbdc62.a03b7774.cab51c7f.ef052351.f16887a3.6c3e7d9c.f6463326.c8b7d5cc.2b0051ee.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 38,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 37,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[subprocess.Popen](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1982,
                  "endLine": 1982,
                  "startColumn": 23,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f75a30512f1efb5fd3dd29143ecbd9b02c845d449dc8671f8c045f362d3b69ef",
            "1": "e06468b8.577bab1d.897c5a9f.139c59a8.6f217495.73cfdf26.fa6ddf99.742d9b21.7308a236.577bab1d.3b7b86da.139c59a8.1a0abf6d.73cfdf26.07b9aa90.8794408a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1982,
                            "endLine": 1982,
                            "startColumn": 37,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1982,
                            "endLine": 1982,
                            "startColumn": 36,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 28,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/CommandInjection",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into subprocess.Popen, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[flows](0),(1),(2),(3)",
              "[subprocess.Popen](4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1982,
                  "endLine": 1982,
                  "startColumn": 36,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f75a30512f1efb5fd3dd29143ecbd9b02c845d449dc8671f8c045f362d3b69ef",
            "1": "e06468b8.2fd17999.79e62dc9.902653ef.a2d153c7.73cfdf26.fa6ddf99.f355b44c.7308a236.f16887a3.897c5a9f.7879950c.d2ce36a1.2abbdc62.a03b7774.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1982,
                            "endLine": 1982,
                            "startColumn": 37,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1982,
                            "endLine": 1982,
                            "startColumn": 36,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_consts_files.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 18,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "32b6374941fa2c09e6d22f364ddfc2add52f952a181f481b0807ae42b716b136",
            "1": "129db901.caea522f.a6426755.08a1053e.1d07cee4.ba14daf2.f45dd68c.545e9171.129db901.caea522f.cf7b315a.9cd2dfe0.66ab258e.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 8,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 77,
                            "endColumn": 98
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 40,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 35,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[open](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_consts_files.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 44,
                  "startColumn": 18,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ca45bdd362abf1cb53c8a5f0ddb1f655936bcca33ffaa73192cd56645d71e46",
            "1": "129db901.2036f5f0.ec35cf50.139c59a8.1d07cee4.ba14daf2.f45dd68c.545e9171.129db901.caea522f.cf7b315a.cf9f0147.1d07cee4.ba14daf2.f45dd68c.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 8,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 13,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 44,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 35,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 22,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 185,
                            "endLine": 185,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_consts_files.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 19,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9418ad9911cc383da83547823d13cdc9f3d599ec606d2d707c38ba970a8ca20b",
            "1": "129db901.277c621c.ec35cf50.cf9f0147.5ef953d3.ba14daf2.98332e65.ebed174f.129db901.277c621c.a6426755.cf9f0147.6cd5a35e.a5d7f69f.98332e65.d0ce0f57"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 8,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 13,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 260,
                            "endLine": 260,
                            "startColumn": 56,
                            "endColumn": 66
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 276,
                            "endLine": 276,
                            "startColumn": 14,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 64,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 51,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 39,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_consts_files.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 18,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ecd0639bef9f3c1c379dd96b6d7552505b44671c8781dc2438b7e2950be39486",
            "1": "129db901.2036f5f0.ec35cf50.139c59a8.1d07cee4.ba14daf2.f45dd68c.545e9171.129db901.2036f5f0.ec35cf50.cf9f0147.1d07cee4.a5d7f69f.f45dd68c.d0860154"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 8,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_consts_files.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 13,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 40,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 403,
                            "endLine": 403,
                            "startColumn": 42,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 403,
                            "endLine": 403,
                            "startColumn": 29,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 403,
                            "endLine": 403,
                            "startColumn": 19,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 403,
                            "endLine": 403,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_def_file.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 5,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0bcdfa6a9be279e5aa7fea9fbaeada89c86c2f51a8b545f7f78d61932e297dc2",
            "1": "a9e8e329.0ebdf74c.79e62dc9.139c59a8.cc857d4e.ba14daf2.f45dd68c.f9236156.129db901.e3d9b656.cf7b315a.9cd2dfe0.a5fb405f.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_def_file.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_def_file.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_def_file.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_def_file.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 9,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 559,
                            "endLine": 559,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 569,
                            "endLine": 569,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 569,
                            "endLine": 569,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 544,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_gparams_register_modules_cpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 14,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "815296f43d6c60412ac94a23d26e42e253fcd6c4b5522ddd643113d1152b9457",
            "1": "129db901.2036f5f0.ec35cf50.c0050ea7.2f3f80b7.ba14daf2.f45dd68c.545e9171.278c0ea7.1f07db9f.cf7b315a.82ea5750.a5fb405f.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_gparams_register_modules_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_gparams_register_modules_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_gparams_register_modules_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 47,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_gparams_register_modules_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 47,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_gparams_register_modules_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 599,
                            "endLine": 599,
                            "startColumn": 61,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 617,
                            "endLine": 617,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 617,
                            "endLine": 617,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 618,
                            "endLine": 618,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 618,
                            "endLine": 618,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 544,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_install_tactic_cpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 14,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1f6599296448a5b4e157fe0b6b8c5cad8b9cdc33695b3c8047161690dabca92b",
            "1": "129db901.2036f5f0.ec35cf50.c0050ea7.2f3f80b7.ba14daf2.f45dd68c.545e9171.129db901.e3d9b656.cf7b315a.c0050ea7.b8194128.ba14daf2.f45dd68c.715f2503"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 47,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 47,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 658,
                            "endLine": 658,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 693,
                            "endLine": 693,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 694,
                            "endLine": 694,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 694,
                            "endLine": 694,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 695,
                            "endLine": 695,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 695,
                            "endLine": 695,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_mem_initializer_cpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 14,
                  "endColumn": 63
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df49f0aa11984b96a1b831282d34c15aafdcbbfa90dc0c336cf088d70a33493d",
            "1": "129db901.2036f5f0.e22eb702.c0050ea7.2f3f80b7.ba14daf2.f45dd68c.545e9171.278c0ea7.1f07db9f.cf7b315a.82ea5750.a5fb405f.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_mem_initializer_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_mem_initializer_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_mem_initializer_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 47,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_mem_initializer_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 47,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_mem_initializer_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 9,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 762,
                            "endLine": 762,
                            "startColumn": 56,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 777,
                            "endLine": 777,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 780,
                            "endLine": 780,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 780,
                            "endLine": 780,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 781,
                            "endLine": 781,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 781,
                            "endLine": 781,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 544,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_pat_db.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "startColumn": 5,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "79a64cd2692e3779f545df0416a3f172492376d1ac1831cc7e79cf532f0448eb",
            "1": "a2666238.0ebdf74c.6e0ab7c0.3d3c1a49.cc857d4e.ba14daf2.f45dd68c.f9236156.129db901.24a9fc40.cf7b315a.9cd2dfe0.a5fb405f.0a892d8d.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_pat_db.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_pat_db.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_pat_db.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 57,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_pat_db.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 57,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 827,
                            "endLine": 827,
                            "startColumn": 39,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 832,
                            "endLine": 832,
                            "startColumn": 19,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 832,
                            "endLine": 832,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 544,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 616,
                  "endLine": 616,
                  "startColumn": 21,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf3bb7666ff70a57dae48bd265a99ae4b7a78fedbd41aaae89b2d18a318b0dff",
            "1": "2dc9dd55.dcad1bd1.79e62dc9.525cfa00.4d9b5936.17d32412.095a4d5a.f355b44c.ae0760f9.71a37613.cf7b315a.525cfa00.4608c58f.77ba928b.e0192149.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2098,
                            "endLine": 2098,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2098,
                            "endLine": 2098,
                            "startColumn": 6,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2121,
                            "endLine": 2121,
                            "startColumn": 34,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2052,
                            "endLine": 2052,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 616,
                            "endLine": 616,
                            "startColumn": 26,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 616,
                            "endLine": 616,
                            "startColumn": 21,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 763,
                  "endLine": 763,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b45132dafc2c3e9e7377cde1198dcc58bc11a8b8486a7d48b4e6847ff043e9d",
            "1": "4fa20fb0.2faa9598.79e62dc9.139c59a8.9e7caf2a.17d32412.095a4d5a.ebed174f.054e1dab.2faa9598.ceb39490.8a1cba60.4608c58f.361537ad.c532d34b.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2098,
                            "endLine": 2098,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2098,
                            "endLine": 2098,
                            "startColumn": 6,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2121,
                            "endLine": 2121,
                            "startColumn": 34,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1975,
                            "endLine": 1975,
                            "startColumn": 20,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2052,
                            "endLine": 2052,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 613,
                            "endLine": 613,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 615,
                            "endLine": 615,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 615,
                            "endLine": 615,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 763,
                            "endLine": 763,
                            "startColumn": 25,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 763,
                            "endLine": 763,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[open](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1401,
                  "endLine": 1401,
                  "startColumn": 19,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cb1b7a631372dc592ef14de95f51dd042a3b1cbc5dcf86f02629991e9763dd35",
            "1": "51c157b6.78bff677.ab416cca.12a020e3.3a40603c.737b1cd6.0a6f3a88.f355b44c.51c157b6.9dc2f629.cf7b315a.d9af1cd9.4608c58f.77ba928b.e0192149.e48da21b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2106,
                            "endLine": 2106,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2106,
                            "endLine": 2106,
                            "startColumn": 6,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2123,
                            "endLine": 2123,
                            "startColumn": 32,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1977,
                            "endLine": 1977,
                            "startColumn": 20,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2056,
                            "endLine": 2056,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1398,
                            "endLine": 1398,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1400,
                            "endLine": 1400,
                            "startColumn": 32,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1400,
                            "endLine": 1400,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1401,
                            "endLine": 1401,
                            "startColumn": 24,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1401,
                            "endLine": 1401,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[open](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1459,
                  "endLine": 1459,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f732950ea7fb81e5715d312341847e474c5cc32f4aeb3de824eff690d4aedb5",
            "1": "51c157b6.f1a684f2.d3cabed0.209dffd9.f22bb602.737b1cd6.0a85264f.f355b44c.054e1dab.006fa1cc.ceb39490.209dffd9.4608c58f.7aa402ff.9ba1be33.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2106,
                            "endLine": 2106,
                            "startColumn": 6,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2106,
                            "endLine": 2106,
                            "startColumn": 6,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2123,
                            "endLine": 2123,
                            "startColumn": 32,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1977,
                            "endLine": 1977,
                            "startColumn": 20,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2056,
                            "endLine": 2056,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1398,
                            "endLine": 1398,
                            "startColumn": 23,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1455,
                            "endLine": 1455,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1457,
                            "endLine": 1457,
                            "startColumn": 37,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1458,
                            "endLine": 1458,
                            "startColumn": 32,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1458,
                            "endLine": 1458,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 23,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1459,
                            "endLine": 1459,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2013,
                  "endLine": 2013,
                  "startColumn": 14,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74b7ceee7cffa3f024aba1739c3a9b020dc9857676c1ea61747eb3501688c7f5",
            "1": "8a30cfc6.7c5117d2.f87d8a66.cf71ff31.f3eda546.e222b6ca.1fae54c1.67e0872d.f8403628.7c5117d2.f87d8a66.c48eaf48.4608c58f.77ba928b.e0192149.59ee475e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2117,
                            "endLine": 2117,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2117,
                            "endLine": 2117,
                            "startColumn": 33,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1971,
                            "endLine": 1971,
                            "startColumn": 20,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2021,
                            "endLine": 2021,
                            "startColumn": 24,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2010,
                            "endLine": 2010,
                            "startColumn": 23,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2013,
                            "endLine": 2013,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2013,
                            "endLine": 2013,
                            "startColumn": 19,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2013,
                            "endLine": 2013,
                            "startColumn": 14,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[open](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/update_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2045,
                  "endLine": 2045,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "867a598cb7add0b70a9994bb99a2053ecc7ae876065904ce5f9415780276df75",
            "1": "c9ccc933.3ce62c45.187bf175.139c59a8.f3eda546.ba14daf2.081ac3f4.a9c71abd.c9cd1788.b156f644.cf7b315a.da969366.3cd9776b.77ba928b.e0192149.ad5205ef"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2096,
                            "endLine": 2096,
                            "startColumn": 11,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2119,
                            "endLine": 2119,
                            "startColumn": 36,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2119,
                            "endLine": 2119,
                            "startColumn": 36,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1973,
                            "endLine": 1973,
                            "startColumn": 20,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2045,
                            "endLine": 2045,
                            "startColumn": 28,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2045,
                            "endLine": 2045,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/update_api.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2045,
                            "endLine": 2045,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4)",
              "[open](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_install_tactic_cpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 10,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c34e397a6fb69c8e7cd9951b105fe99a1334398b0bf42c9f00eb21261d52895",
            "1": "2e8ddaeb.09b47a5b.187bf175.139c59a8.f3eda546.73cfdf26.081ac3f4.a4830b9a.2e8ddaeb.b88e75ef.cf7b315a.f6463326.f3eda546.73cfdf26.f6dc7859.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 49,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 49,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_install_tactic_cpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/pyg2hpp.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "56896b7b105a1895cdfa7959d27081fa17eee8df11f07d408a4735e99f19917f",
            "1": "a9e8e329.2036f5f0.79e62dc9.334cfc85.19c797a6.ba14daf2.f45dd68c.d42b46b6.129db901.e3d9b656.cf7b315a.9cd2dfe0.19c797a6.0a892d8d.f6dc7859.d42b46b6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 27,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 37,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/pyg2hpp.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 48,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 887,
                            "endLine": 887,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 960,
                            "endLine": 960,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_genfile_common.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 960,
                            "endLine": 960,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into os.chdir, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[os.chdir](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_unix_dist_cmake.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 241,
                  "endLine": 241,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a033fa1e31bf9236f4554e54c16dd03986e9ba01798f523c0511ac5e360b8523",
            "1": "8a30cfc6.5c191865.9921807d.139c59a8.ffa9ab57.36290241.ba698a2d.5c2a3ee7.e1ea6279.5c191865.352fc7bd.49f51bb4.fe15faaf.d835b337.1b71bdde.b9c49a52"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 25,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 18,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 241,
                            "endLine": 241,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[shutil.copy](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_unix_dist_cmake.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "endLine": 258,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "685747493ceb51d553f74191b3a2429d47aeb3b4d2dbdb22863b4bb83178bcdc",
            "1": "3fd1a384.2b047bc0.79e62dc9.44691350.64f7e0bb.d5b77ea7.1b71bdde.6eb46ac5.3fd1a384.04ad2656.3c73c965.6803f7a7.86b70229.d835b337.1b71bdde.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 44,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 26,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 5,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 114,
                            "endLine": 114,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 25,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 25,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 257,
                            "endLine": 257,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 12,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 32,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_unix_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 258,
                            "endLine": 258,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1239,
                  "endLine": 1239,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3efdf201f0fd8f9f3fa8fa5a2f680146ae075589693f5747f5ec6d11af3edd86",
            "1": "f065e9a2.6dafee15.d6317f61.03f17af5.50026639.5bf9262c.081ac3f4.6eb46ac5.ef052351.f4a1ab20.d6317f61.03f17af5.c8b7d5cc.2b0051ee.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1240,
                            "endLine": 1240,
                            "startColumn": 49,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1240,
                            "endLine": 1240,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1239,
                            "endLine": 1239,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1328,
                  "endLine": 1328,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b6fa537d7decda771e85e61d6d35d89b0715d7f3b2da17957dbe2a8229d61d4f",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1329,
                            "endLine": 1329,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1328,
                            "endLine": 1328,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1334,
                  "endLine": 1334,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e788099aa85edbb7cf4e0a3f453c72a24cd5bf920ed36c31ba5839058605e07d",
            "1": "f065e9a2.577bab1d.427d4f10.03f17af5.56196964.ba14daf2.081ac3f4.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1335,
                            "endLine": 1335,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1335,
                            "endLine": 1335,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1334,
                            "endLine": 1334,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1498,
                  "endLine": 1498,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4a840ae66187aea6db870de2e9f014e5909cb866ef0e4367f991a8baf60178a",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1499,
                            "endLine": 1499,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1499,
                            "endLine": 1499,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1499,
                            "endLine": 1499,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1498,
                            "endLine": 1498,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1500,
                  "endLine": 1500,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "78e313bd55eea01b3ae1be5dcb8be2dcb5bb12ad60d9b14b21648276aa82854c",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.aae8f0ff.577bab1d.a0049c93.03f17af5.0bb79a2d.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1501,
                            "endLine": 1501,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1501,
                            "endLine": 1501,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1501,
                            "endLine": 1501,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1500,
                            "endLine": 1500,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1502,
                  "endLine": 1502,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c4eac0d48a28895a3da0d0f9d360297519b5172790cfcd8b61603600896eaa60",
            "1": "800eb1b9.6dafee15.22d70589.03f17af5.a2d153c7.ba14daf2.682a1833.ae9de2bb.d654bfe9.577bab1d.5ac861f0.03f17af5.50026639.d5b77ea7.1b71bdde.ae9de2bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1503,
                            "endLine": 1503,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1503,
                            "endLine": 1503,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1503,
                            "endLine": 1503,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1502,
                            "endLine": 1502,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[shutil.copy](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1509,
                  "endLine": 1509,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d0d695a8eb948e3c245a10b981fce68e7ff2cfd915d575fc12bc3129bc6c5f74",
            "1": "800eb1b9.ac7233ac.2683ade8.44691350.a2d153c7.73cfdf26.682a1833.6aac30d8.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1510,
                            "endLine": 1510,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1510,
                            "endLine": 1510,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1510,
                            "endLine": 1510,
                            "startColumn": 35,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1510,
                            "endLine": 1510,
                            "startColumn": 25,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1509,
                            "endLine": 1509,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1511,
                  "endLine": 1511,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "28b4d2778c69b1e069af29a879baa015e8697112e54c5d81e08645e53b1ae762",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.d654bfe9.577bab1d.5ac861f0.03f17af5.50026639.d5b77ea7.1b71bdde.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1512,
                            "endLine": 1512,
                            "startColumn": 58,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1512,
                            "endLine": 1512,
                            "startColumn": 34,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1512,
                            "endLine": 1512,
                            "startColumn": 25,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1511,
                            "endLine": 1511,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1805,
                  "endLine": 1805,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67dd8c12551098bceb072c8d6335c56ed221f3dfa3a5caa18ea63220ec39992f",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1806,
                            "endLine": 1806,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1806,
                            "endLine": 1806,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1806,
                            "endLine": 1806,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1805,
                            "endLine": 1805,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1807,
                  "endLine": 1807,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ede97b63f8d10319bf2afa394fd004a715c2d07a9c9800d756970944b02f73b0",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.aae8f0ff.577bab1d.a0049c93.03f17af5.0bb79a2d.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1808,
                            "endLine": 1808,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1808,
                            "endLine": 1808,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1808,
                            "endLine": 1808,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1807,
                            "endLine": 1807,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1809,
                  "endLine": 1809,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8f5a11298c28fb1e5a053bd3e5ceb267df91e2b43f57116a1cf6662e14c0e58",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.aae8f0ff.577bab1d.a0049c93.03f17af5.0bb79a2d.ba14daf2.682a1833.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1810,
                            "endLine": 1810,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1810,
                            "endLine": 1810,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1810,
                            "endLine": 1810,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1809,
                            "endLine": 1809,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1811,
                  "endLine": 1811,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c400dac4a2b9a17d9d77ec1e622212ace7ae1f48b968bfaea69593712397f634",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.d654bfe9.577bab1d.5ac861f0.03f17af5.50026639.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1812,
                            "endLine": 1812,
                            "startColumn": 66,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1812,
                            "endLine": 1812,
                            "startColumn": 42,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1812,
                            "endLine": 1812,
                            "startColumn": 25,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1811,
                            "endLine": 1811,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1814,
                  "endLine": 1814,
                  "startColumn": 17,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "212e7c5c71bbb8733444d4000f6891fafc40891c4bb1bab41d3083a98a724513",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.d654bfe9.577bab1d.5ac861f0.03f17af5.50026639.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1815,
                            "endLine": 1815,
                            "startColumn": 64,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1815,
                            "endLine": 1815,
                            "startColumn": 40,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1815,
                            "endLine": 1815,
                            "startColumn": 29,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1814,
                            "endLine": 1814,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1820,
                  "endLine": 1820,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b4ed3504a21322f43751762d15a93a1e2412df2bb8bf958fcc8b684b4ca44e0",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1821,
                            "endLine": 1821,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1821,
                            "endLine": 1821,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1821,
                            "endLine": 1821,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1820,
                            "endLine": 1820,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1822,
                  "endLine": 1822,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a04b3d2cc87c88e35dccb00e5ef1a2f0f2240ce1a936f14634d0e593a780dce0",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.aae8f0ff.577bab1d.a0049c93.03f17af5.0bb79a2d.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1823,
                            "endLine": 1823,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1823,
                            "endLine": 1823,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1823,
                            "endLine": 1823,
                            "startColumn": 25,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1822,
                            "endLine": 1822,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1824,
                  "endLine": 1824,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b048a7980ee9633d7da4137bc1d76113653372a845a5032c2a3312253a7fd95",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.d654bfe9.577bab1d.5ac861f0.03f17af5.50026639.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1825,
                            "endLine": 1825,
                            "startColumn": 66,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1825,
                            "endLine": 1825,
                            "startColumn": 42,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1825,
                            "endLine": 1825,
                            "startColumn": 25,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1824,
                            "endLine": 1824,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1914,
                  "endLine": 1914,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f41a85a8e2fa922da82c968d586c7f85c4fe6bd92c97f648e4dbcbe0db807263",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1915,
                            "endLine": 1915,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1915,
                            "endLine": 1915,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1915,
                            "endLine": 1915,
                            "startColumn": 25,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1914,
                            "endLine": 1914,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1916,
                  "endLine": 1916,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e5b4321266311b7d8c9550cb512e04626e1573a945289f14fc6e50cabe2a1ae5",
            "1": "2d06e3d6.82cf77fb.2683ade8.03f17af5.cc857d4e.ba14daf2.081ac3f4.6eb46ac5.aae8f0ff.82cf77fb.a0049c93.03f17af5.1d07cee4.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1917,
                            "endLine": 1917,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1917,
                            "endLine": 1917,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1916,
                            "endLine": 1916,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1918,
                  "endLine": 1918,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2fdbf2ad49092b8e45da3e2e2453e108f517ea87aa07648d56f546ffe73a901",
            "1": "2d06e3d6.82cf77fb.79e62dc9.03f17af5.cc857d4e.ba14daf2.081ac3f4.6eb46ac5.d654bfe9.82cf77fb.5ac861f0.03f17af5.50026639.8378de42.682a1833.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1919,
                            "endLine": 1919,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1919,
                            "endLine": 1919,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1918,
                            "endLine": 1918,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1924,
                  "endLine": 1924,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "beb609d08b1ee9710b4425b60ddacf936e5cf272eff209e7380d5d64ab362644",
            "1": "800eb1b9.6dafee15.2683ade8.03f17af5.a2d153c7.ba14daf2.682a1833.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1925,
                            "endLine": 1925,
                            "startColumn": 60,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1925,
                            "endLine": 1925,
                            "startColumn": 36,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1925,
                            "endLine": 1925,
                            "startColumn": 25,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1924,
                            "endLine": 1924,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1927,
                  "endLine": 1927,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7dcc5ed7dd5d3b587ef73729c64d40232103818beac0c72bf1612992afded01a",
            "1": "ceb26a61.82cf77fb.e26286e5.03f17af5.d1fe73b5.ba14daf2.682a1833.6eb46ac5.ceb26a61.82cf77fb.e26286e5.03f17af5.50026639.d5b77ea7.1b71bdde.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1928,
                            "endLine": 1928,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1928,
                            "endLine": 1928,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1927,
                            "endLine": 1927,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copy](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3364,
                  "endLine": 3364,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc1feeb99d6cd73adb068a2d493669157b4c66aed7b2204ae1d71680f4e6e4e8",
            "1": "f065e9a2.82cf77fb.427d4f10.03f17af5.35ce88cd.8378de42.c5b9067e.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3365,
                            "endLine": 3365,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3365,
                            "endLine": 3365,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3364,
                            "endLine": 3364,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8)",
              "[shutil.copy](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3440,
                  "endLine": 3440,
                  "startColumn": 24,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "971b3a7e4a951b1a7529bceda2f058024b7541fd61937b225c653d71ff9e5701",
            "1": "7bf33078.64ca5197.bcb3c6a7.644ec214.e2608aea.ba14daf2.cb317a58.05faa619.61137a49.64ca5197.bcb3c6a7.03f17af5.c8b7d5cc.d5b77ea7.6536fe9f.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2760,
                            "endLine": 2760,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3436,
                            "endLine": 3436,
                            "startColumn": 42,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3440,
                            "endLine": 3440,
                            "startColumn": 42,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3395,
                            "endLine": 3395,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3365,
                            "endLine": 3365,
                            "startColumn": 45,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3365,
                            "endLine": 3365,
                            "startColumn": 21,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3364,
                            "endLine": 3364,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.rmtree](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1547,
                  "endLine": 1547,
                  "startColumn": 13,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "220503b46fc64efdda9399e3c3d40d781c8955dca78b28f274012c9844e31b3b",
            "1": "d5c0229d.65598014.79e62dc9.139c59a8.1d07cee4.26a73016.081ac3f4.6eb46ac5.d5c0229d.6dafee15.79e62dc9.03f17af5.1d07cee4.26a73016.081ac3f4.395368c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1545,
                            "endLine": 1545,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1545,
                            "endLine": 1545,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1547,
                            "endLine": 1547,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1547,
                            "endLine": 1547,
                            "startColumn": 13,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.rmtree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to remove arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6)",
              "[shutil.rmtree](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 9,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb23698495803b99d89020cd53bd5ef9757e9a632d6e5799273f8f928fa0eb64",
            "1": "d5c0229d.d8435ddf.2683ade8.86bba4d0.64f7e0bb.ba14daf2.081ac3f4.6eb46ac5.d5c0229d.d8435ddf.ec35cf50.86bba4d0.ff4ec127.ba14daf2.cbfa2b68.395368c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 12,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strlen, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3)",
              "[strlen](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/string_buffer.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 10,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "061f643af1830bc8339e13486d41e992d2f311f81ebcb8c6d072254093458743",
            "1": "9f2b95bb.52f86cba.66e58c8d.f8f82e1b.baf5e6ff.6ba7364b.c5935a7a.3269a000.9f2b95bb.47074490.66e58c8d.f8f82e1b.baf5e6ff.6ba7364b.c5935a7a.3269a000"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/string_buffer.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 17,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/string_buffer.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copytree, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copytree](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1548,
                  "endLine": 1548,
                  "startColumn": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "19280b82747d928f3dc4c96bd2b94a30436999591acb46297804fca520981d69",
            "1": "7df29138.65598014.79e62dc9.139c59a8.dc6edf7c.26a73016.081ac3f4.6eb46ac5.d5c0229d.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.2b0051ee.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1545,
                            "endLine": 1545,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1545,
                            "endLine": 1545,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1548,
                            "endLine": 1548,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1548,
                            "endLine": 1548,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copyfile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[shutil.copyfile](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2408,
                  "endLine": 2408,
                  "startColumn": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a23a96464622c22f805ee8349c724cc0ff2b9b49d359892f30ae3b9e20313114",
            "1": "f065e9a2.82cf77fb.427d4f10.03f17af5.35ce88cd.8378de42.2fd4bb65.6eb46ac5.ef052351.f4a1ab20.6c3e7d9c.03f17af5.c8b7d5cc.d5b77ea7.5e26b1a0.cab51c7f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 16,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2409,
                            "endLine": 2409,
                            "startColumn": 49,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2409,
                            "endLine": 2409,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_util.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 2408,
                            "endLine": 2408,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[os.walk](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_win_dist.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 30,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f654183c59fa53f88fdd5aa5f4815c698e722b85ae151d8c137c2dff174d00a6",
            "1": "800eb1b9.5b46cdac.aa187220.139c59a8.a2d153c7.ba14daf2.682a1833.6aac30d8.a6b41d6e.04ad2656.aa187220.ad0154f5.989605ea.ba14daf2.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 270,
                            "endLine": 270,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 270,
                            "endLine": 270,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into os.walk, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4)",
              "[os.walk](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_win_dist_cmake.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334,
                  "startColumn": 30,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9ee051e24b5058bff23da95165e0fb1d99b519901952f48f6e3b938c0517682a",
            "1": "800eb1b9.5b46cdac.aa187220.139c59a8.a2d153c7.ba14daf2.682a1833.6aac30d8.a6b41d6e.04ad2656.aa187220.ad0154f5.989605ea.ba14daf2.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[shutil.copy](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_win_dist.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 294,
                  "endLine": 294,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9f6cbade55c7c8ce3b8bc29adde4dc6c60f1db2e571df6116bc61f56606779a7",
            "1": "2e8ddaeb.ac7233ac.2683ade8.44691350.146bf8fd.73cfdf26.081ac3f4.6aac30d8.2e8ddaeb.401acd04.aa187220.cc98b6f9.2ef9de0f.73cfdf26.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 269,
                            "endLine": 269,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 270,
                            "endLine": 270,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 270,
                            "endLine": 270,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 283,
                            "endLine": 283,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 46,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 53,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 21,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 294,
                            "endLine": 294,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[shutil.copy](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/mk_win_dist_cmake.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 347,
                  "endLine": 347,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "718cf6433bfa57f821316b4a160bc45d9710de8ef9ccb223e9000145184e88a9",
            "1": "2e8ddaeb.ac7233ac.2683ade8.44691350.146bf8fd.73cfdf26.081ac3f4.6aac30d8.2e8ddaeb.401acd04.aa187220.cc98b6f9.2ef9de0f.73cfdf26.a2237efa.6aac30d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 322,
                            "endLine": 322,
                            "startColumn": 13,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 26,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 13,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 38,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 334,
                            "endLine": 334,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 336,
                            "endLine": 336,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 332,
                            "endLine": 332,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 46,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 33,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 53,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 342,
                            "endLine": 342,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 14,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 346,
                            "endLine": 346,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 347,
                            "endLine": 347,
                            "startColumn": 21,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "scripts/mk_win_dist_cmake.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 347,
                            "endLine": 347,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[shutil.copy](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 174,
                  "endLine": 174,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5681609c3f535602029c4cd25f2776bff74a2ac0b33946cc2f579d4a2ca4fd8b",
            "1": "88af6b10.67df6de4.79e62dc9.44691350.96f93f2e.ba14daf2.081ac3f4.6eb46ac5.bbef8d34.d8435ddf.2ab5f514.86bba4d0.c8b7d5cc.48e1de78.6c2f89d7.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 36,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 30,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 174,
                            "endLine": 174,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[shutil.copy](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 175,
                  "endLine": 175,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f3044136f1d048a46e5f0b41b2729c628c3ce17d7ccad1778cd0ce1121bc7b4",
            "1": "6c937667.67df6de4.79e62dc9.44691350.4898ab25.ba14daf2.081ac3f4.6eb46ac5.88af6b10.67df6de4.a0049c93.44691350.64f7e0bb.ba14daf2.081ac3f4.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 36,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 30,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "676c3543d6fae497103e000b67e69d183cf2be4568473a87d649f1f36a519480",
            "1": "83aa90cd.d3fa0bdc.8f4f780b.44691350.64f7e0bb.19f19d64.081ac3f4.6eb46ac5.88af6b10.d3fa0bdc.8f4f780b.86bba4d0.b6c620dd.19f19d64.081ac3f4.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 30,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5)",
              "[shutil.copy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 183,
                  "endLine": 183,
                  "startColumn": 5,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "26514e9bdcdbe996d0a37a73a73a0bff6e70a01d2f53bafacf65a52a7ecba1c6",
            "1": "3a3f7830.67df6de4.8127c8d7.44691350.64f7e0bb.ba14daf2.081ac3f4.6eb46ac5.88af6b10.d3fa0bdc.a0049c93.49f51bb4.b6c620dd.ba14daf2.081ac3f4.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 30,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[shutil.copy](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 188,
                  "endLine": 188,
                  "startColumn": 9,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e2e614a8f91d17ee3ec84bdb06818b50ef11d93e36793b063c294a3d23740834",
            "1": "5da4dea7.ac7233ac.2683ade8.44691350.056de048.ba14daf2.081ac3f4.6eb46ac5.bbef8d34.949a1a4d.a0049c93.86bba4d0.64f7e0bb.ba14daf2.6c2f89d7.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 36,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 23,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 13,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 21,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 21,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 21,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 9,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an environment variable flows into shutil.copy, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from an environment variable {0} into {1}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[flows](0),(1),(2),(3),(4),(5),(6),(7)",
              "[shutil.copy](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/api/python/setup.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194,
                  "startColumn": 13,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d0b8a9e8173a2bc1d137ba81dab33ad604adac9c48b6e3ed1f1edd7c2090e16d",
            "1": "a2acefcd.67df6de4.2683ade8.5540cd14.4e3ba288.ba14daf2.081ac3f4.6eb46ac5.da9cf85a.d3fa0bdc.ec35cf50.5540cd14.4e3ba288.73cfdf26.2701234b.6eb46ac5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 33,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 20,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 19,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 190,
                            "endLine": 190,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 25,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/api/python/setup.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 594,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contrib/qprofdiff/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 53,
                  "endColumn": 56
                }
              }
            }
          ],
          "fingerprints": {
            "0": "982e6e26812f9cb6e011c1b403dd86039b505c2dea14321b2464015bd79b1355",
            "1": "73e5bd6e.0d254423.66e58c8d.cc899355.b54f1041.6a274ab8.30ad82ea.b0821d3b.73e5bd6e.2fc60938.66e58c8d.fd3413a8.d92263d7.fb5121ff.30ad82ea.17c85c92"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 25,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 13,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 17,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 53,
                            "endColumn": 56
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contrib/qprofdiff/main.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 57,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "982e6e26812f9cb6e011c1b403dd86039b505c2dea14321b2464015bd79b1355",
            "1": "2d06e3d6.0d254423.66e58c8d.1bd0bc43.b54f1041.e723426a.30ad82ea.545e9171.73e5bd6e.9f15f38e.66e58c8d.88d1f3b9.d92263d7.e4696292.30ad82ea.17c85c92"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 25,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 13,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 12,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 12,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 13,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 23,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 17,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 24,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 17,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "contrib/qprofdiff/main.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/ddnf.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 200,
                  "startColumn": 5,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3110f072381639780873a8b4a68282cb23ee41234b9f114096b9e92d2fe56b5e",
            "1": "52449378.8be50dd5.73e33cfb.fa687c80.f5fd3da5.2f4e1548.9bf9f6e9.24d2a415.1eb90662.9c5b3688.73e33cfb.92e0dbce.b4fbb909.e723426a.50e07b35.fc50587a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 11,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 11,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 58,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 32,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 120,
                            "endLine": 120,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 186,
                            "endLine": 186,
                            "startColumn": 25,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/ddnf.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 200,
                            "endLine": 200,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 358,
                            "endLine": 358,
                            "startColumn": 25,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 361,
                            "endLine": 361,
                            "startColumn": 22,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 361,
                            "endLine": 361,
                            "startColumn": 12,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/memory_manager.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 363,
                            "endLine": 363,
                            "startColumn": 22,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 154,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/lp/lp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 28,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fb47b8999353c9d599af44db9b77cdbfcb60e1c2de826855bc35db688bff8d6",
            "1": "75feee71.e47c4aa1.66e58c8d.27f9dbc8.59751f5a.e723426a.5db3d4a6.59e6adcc.73e5bd6e.9f15f38e.66e58c8d.93cc8d4d.59751f5a.e4696292.50e07b35.6b81937f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 774,
                            "endLine": 774,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 34,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 777,
                            "endLine": 777,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/lp/lp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101,
                  "startColumn": 35,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fb47b8999353c9d599af44db9b77cdbfcb60e1c2de826855bc35db688bff8d6",
            "1": "2d06e3d6.e47c4aa1.66e58c8d.27f9dbc8.59751f5a.e723426a.9957b03c.545e9171.988d3c10.e47c4aa1.66e58c8d.27f9dbc8.59751f5a.e4696292.9957b03c.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 774,
                            "endLine": 774,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 34,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 777,
                            "endLine": 777,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/lp/lp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 51,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b049e526a1c1d987675a92252a24c5475c397cffc72008a1e19e32b06609a379",
            "1": "75feee71.0d254423.66e58c8d.27f9dbc8.d3026681.bac61592.5db3d4a6.59e6adcc.988d3c10.e47c4aa1.66e58c8d.27f9dbc8.59751f5a.e4696292.9957b03c.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 774,
                            "endLine": 774,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 34,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 777,
                            "endLine": 777,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 51,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/test/lp/lp.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102,
                  "startColumn": 58,
                  "endColumn": 62
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b049e526a1c1d987675a92252a24c5475c397cffc72008a1e19e32b06609a379",
            "1": "2d06e3d6.0d254423.66e58c8d.85c7f9bf.d3026681.bac61592.5db3d4a6.545e9171.988d3c10.e47c4aa1.66e58c8d.27f9dbc8.59751f5a.e723426a.9957b03c.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 771,
                            "endLine": 771,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 774,
                            "endLine": 774,
                            "startColumn": 44,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 34,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 777,
                            "endLine": 777,
                            "startColumn": 24,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 20,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 13,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/test/lp/lp.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 58,
                            "endColumn": 62
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 204,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Memory allocated by malloc may be leaked if the control flow reaches the end of this scope. The allocated memory does not seem to be freed on all possible execution paths.",
            "markdown": "Memory allocated by {0} may be leaked if the control flow reaches the end of {1}. The allocated memory does not seem to be freed on all possible execution paths.",
            "arguments": [
              "[malloc](0)",
              "[this scope](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/maxsat/maxsat.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 227,
                  "endLine": 227,
                  "startColumn": 27,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f44839cfcddff978a8a4dde6bec500791885cb004f01ca995656df1254dc5480",
            "1": "9642845f.8b1e84f1.ce5d5196.27f9dbc8.9f2152b6.76f5953a.5db3d4a6.ac5b595e.9309b456.76503df6.a4cec30d.27f9dbc8.cbca892f.f2fff2d5.30ad82ea.ac5b595e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "examples/maxsat/maxsat.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 300,
                            "endLine": 308,
                            "startColumn": 1,
                            "endColumn": 2
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Leaking memory. mutex is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[mutex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/datalog_frontend.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 33,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9151dbf20a83aec1a4087a183f029c6fc97605c55676f1981d08d591c26220a7",
            "1": "20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7.20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/datalog_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Leaking memory. mutex is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[mutex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/opt_frontend.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 33,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "82a149bbc3983ea325e2f13450f064ffa337d88825a49fb0e87b2c90c7dcb31a",
            "1": "20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7.20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/opt_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Leaking memory. mutex is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[mutex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/shell/smtlib_frontend.cpp",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 33,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a041013eb32b96dd74a8c91689e813a925629f127b7b5528eb3d0ede63ea52fa",
            "1": "20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7.20a3b6ec.578e86a2.cc0fea90.8ab4267b.4d8a2df1.6a274ab8.30ad82ea.acd45df7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/shell/smtlib_frontend.cpp",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 39,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/MemoryLeak",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Leaking memory. mutex is allocated on the heap and never freed",
            "markdown": "Leaking memory. {0} is allocated on the heap and never freed",
            "arguments": [
              "[mutex](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/util/mutex.h",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 46,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2932448d02a0009ee5ec274aed92f3659641acb084e441d118196bf812c0c0c6",
            "1": "20a3b6ec.578e86a2.cc0fea90.1bd0bc43.2033f804.6a274ab8.30ad82ea.acd45df7.20a3b6ec.578e86a2.cc0fea90.1bd0bc43.10982d71.6a274ab8.30ad82ea.acd45df7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/util/mutex.h",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 52,
                            "endColumn": 57
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "C",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C++",
            "files": 1889,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C#",
            "files": 79,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 5,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 76,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 54,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 20,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": "C++",
            "files": 123,
            "type": "FAILED_PARSING"
          },
          {
            "isSupported": false,
            "lang": "Python",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}