[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-admin.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-admin.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[admin_proxy].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[admin_proxy]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-analyses.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-analyses.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 151,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-id_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 214,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-id-g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-id-g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 92,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analyses-id-g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analyses-id-g_variants]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-analytics.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-analytics.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[analytics_proxy].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[analytics_proxy]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-askbeacon.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-askbeacon.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[ask_proxy].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[ask_proxy]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-biosamples.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-biosamples.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 151,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 313,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-runs].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-runs]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 277,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 340,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-runs_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-runs_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-analyses].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-analyses]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 250,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-g_variants]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 214,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id-analyses_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id-analyses_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 92,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[biosamples-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[biosamples-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-cohorts.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-cohorts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 222,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id-individuals_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id-individuals_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 195,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id-individuals].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id-individuals]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 132,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 96,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 159,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts-id-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts-id-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[cohorts].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[cohorts]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-configuration.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-configuration.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[configuration].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[configuration]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-datasets.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-datasets.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 214,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 250,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-biosamples].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-biosamples]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 313,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-g_variants]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 92,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 151,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 277,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-biosamples_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-biosamples_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 376,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-individuals].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-individuals]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 340,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 403,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[datasets-id-individuals_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[datasets-id-individuals_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-entry-types.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-entry-types.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[entry_types].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[entry_types]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-filtering-terms.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-filtering-terms.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[filtering_terms]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-genomics-variants.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-genomics-variants.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 132,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id-biosamples].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id-biosamples]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 222,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id-individuals_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id-individuals_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 195,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id-individuals].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id-individuals]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 96,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 159,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id-biosamples_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id-biosamples_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[g_variants-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[g_variants-id]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-index.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-index.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[index_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[index_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-individuals.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-individuals.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 250,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id-g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id-g_variants]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 92,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 214,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id-biosamples_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id-biosamples_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 277,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id-g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id-g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id-biosamples].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id-biosamples]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 151,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[individuals-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[individuals-id_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-map.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-map.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[map].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[map]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-resource-info.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-resource-info.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 40,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[root-get].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[root-get]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[info].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[info]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-runs.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-runs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 250,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id-g_variants].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id-g_variants]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 92,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-filtering_terms_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-filtering_terms_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 124,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-filtering_terms].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-filtering_terms]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 277,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id-g_variants_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id-g_variants_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 214,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id-analyses_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id-analyses_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 187,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id-analyses].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id-analyses]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 151,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[runs-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[runs-id_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-submit-cohort.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-submit-cohort.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[submit-cohort_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[submit-cohort_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 46,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[submit-cohort-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[submit-cohort-id_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api-submit-dataset.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api-submit-dataset.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 14,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[submit-dataset_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[submit-dataset_post]",
          "authorization"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "severity": "high",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "isGeneratedByCustomRule": false,
        "issue": "API gateway will accept http methods without authorization",
        "impact": "Anyone could potentially access resources behind the gateway",
        "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`, utilize `ApiKeyRequired`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`",
          "terraform": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "lineNumber": 46,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`, utilize `api_key_required`, or properly use an OpenAPI extension, such as `x-amazon-apigateway-authtype`"
        },
        "publicId": "SNYK-CC-TF-99",
        "msg": "resource.aws_api_gateway_method[submit-dataset-id_post].authorization",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api"
        ],
        "path": [
          "resource",
          "aws_api_gateway_method[submit-dataset-id_post]",
          "authorization"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/api.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-129",
        "title": "API Gateway X-Ray tracing disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-129",
        "isGeneratedByCustomRule": false,
        "issue": "X-Ray tracing is not enabled for this api gateway stage",
        "impact": "Traces will not be collected for this api gateway, which can impede incident management",
        "resolve": "Set `xray_tracing_enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.TracingEnabled` attribute to `true`",
          "terraform": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "lineNumber": 403,
        "iacDescription": {
          "issue": "X-Ray tracing is not enabled for this api gateway stage",
          "impact": "Traces will not be collected for this api gateway, which can impede incident management",
          "resolve": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-129",
        "msg": "resource.aws_api_gateway_stage[BeaconApi].xray_tracing_enabled",
        "references": [
          "https://docs.aws.amazon.com/xray/latest/devguide/xray-services-apigateway.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-enabling-xray.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-understanding-xray-traces.html"
        ],
        "path": [
          "resource",
          "aws_api_gateway_stage[BeaconApi]",
          "xray_tracing_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "API Gateway (REST APIs)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "isGeneratedByCustomRule": false,
        "issue": "Amazon Api Gateway access logging is not enabled",
        "impact": "Audit records may not be available during investigation",
        "resolve": "Set `access_log_settings` attribute",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "lineNumber": 403,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "publicId": "SNYK-CC-TF-138",
        "msg": "resource.aws_api_gateway_stage[BeaconApi].access_log_settings",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "path": [
          "resource",
          "aws_api_gateway_stage[BeaconApi]",
          "access_log_settings"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "athena-caches.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/athena-caches.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "athena.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/athena.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-113",
        "title": "Athena workgroup does not enforce service settings",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Athena",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-113",
        "isGeneratedByCustomRule": false,
        "issue": "Athena workgroup settings can be overridden by client",
        "impact": "Encryption of the results can be disabled by the client, and in an event of unauthorized access to the data they would be able to read the contents",
        "resolve": "Set `configuration.enforce_workgroup_configuration` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.WorkGroupConfiguration.EnforceWorkGroupConfiguration` attribute to `true`",
          "terraform": "Set `configuration.enforce_workgroup_configuration` attribute to `true`"
        },
        "lineNumber": 883,
        "iacDescription": {
          "issue": "Athena workgroup settings can be overridden by client",
          "impact": "Encryption of the results can be disabled by the client, and in an event of unauthorized access to the data they would be able to read the contents",
          "resolve": "Set `configuration.enforce_workgroup_configuration` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-113",
        "msg": "resource.aws_athena_workgroup[sbeacon-workgroup].configuration.enforce_workgroup_configuration",
        "references": [
          "https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html",
          "https://docs.aws.amazon.com/athena/latest/ug/encryption.html",
          "https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings.html"
        ],
        "path": [
          "resource",
          "aws_athena_workgroup[sbeacon-workgroup]",
          "configuration",
          "enforce_workgroup_configuration"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-410",
        "title": "Athena workgroup result encryption is not enforced",
        "severity": "medium",
        "isIgnored": false,
        "subType": "RDS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-410",
        "isGeneratedByCustomRule": false,
        "issue": "Query results produced by Athena are may not be encrypted",
        "impact": "Should someone gain unauthorized access to the output location the data may be accessed",
        "resolve": "Set `configuration.result_configuration.encryption_configuration.encryption_option` to `CSE_KMS`, `SSE_KMS` or `SSE_S3`.",
        "remediation": {
          "cloudformation": "Set `Properties.WorkGroupConfiguration.ResultConfiguration.EncryptionConfiguration.EncryptionOption` to `CSE_KMS`, `SSE_KMS` or `SSE_S3`.",
          "terraform": "Set `configuration.result_configuration.encryption_configuration.encryption_option` to `CSE_KMS`, `SSE_KMS` or `SSE_S3`."
        },
        "lineNumber": 890,
        "iacDescription": {
          "issue": "Query results produced by Athena are may not be encrypted",
          "impact": "Should someone gain unauthorized access to the output location the data may be accessed",
          "resolve": "Set `configuration.result_configuration.encryption_configuration.encryption_option` to `CSE_KMS`, `SSE_KMS` or `SSE_S3`."
        },
        "publicId": "SNYK-CC-AWS-410",
        "msg": "resource.aws_athena_workgroup[sbeacon-workgroup].configuration.result_configuration.encryption_configuration.encryption_option",
        "references": [
          "https://docs.aws.amazon.com/athena/latest/ug/encryption.html",
          "https://docs.aws.amazon.com/athena/latest/ug/encrypting-query-results-stored-in-s3.html"
        ],
        "path": [
          "resource",
          "aws_athena_workgroup[sbeacon-workgroup]",
          "configuration",
          "result_configuration",
          "encryption_configuration",
          "encryption_option"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cognito.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/cognito.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-451",
        "title": "Cognito user pool without MFA",
        "severity": "low",
        "isIgnored": false,
        "subType": "Cognito",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-451",
        "isGeneratedByCustomRule": false,
        "issue": "Cognito user pool does not require multi-factor authentication method",
        "impact": "Single-factor authentication mechanisms such as passwords can be lost or compromised",
        "resolve": "Set `mfa_configuration` attribute to `OFF`",
        "remediation": {
          "cloudformation": "Set `Properties.MfaConfiguration` attribute to `OFF`",
          "terraform": "Set `mfa_configuration` attribute to `OFF`"
        },
        "lineNumber": 4,
        "iacDescription": {
          "issue": "Cognito user pool does not require multi-factor authentication method",
          "impact": "Single-factor authentication mechanisms such as passwords can be lost or compromised",
          "resolve": "Set `mfa_configuration` attribute to `OFF`"
        },
        "publicId": "SNYK-CC-AWS-451",
        "msg": "resource.aws_cognito_user_pool[BeaconUserPool].mfa_configuration",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html"
        ],
        "path": [
          "resource",
          "aws_cognito_user_pool[BeaconUserPool]",
          "mfa_configuration"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "docker_images.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/docker_images.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dynamodb.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/dynamodb.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 66,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[vcf_summaries].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[vcf_summaries]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 54,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[anscestor_terms]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[anscestor_terms]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 121,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[variant_query_responses].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_query_responses]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 42,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[descendant_terms]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[descendant_terms]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 121,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[variant_query_responses]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_query_responses]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[datasets]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[datasets]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 78,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[variant_duplicates].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_duplicates]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 66,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[vcf_summaries]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[vcf_summaries]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 100,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[variant_queries].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_queries]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 42,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[descendant_terms].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[descendant_terms]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[ontologies]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[ontologies]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 78,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[variant_duplicates]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_duplicates]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[datasets].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[datasets]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 54,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[anscestor_terms].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[anscestor_terms]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-125",
        "title": "DynamoDB point-in-time recovery disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-125",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
        "impact": "No automated backups of DynamoDB data",
        "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`",
        "remediation": {
          "cloudformation": "Set `Properties.PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` attribute to `true`",
          "terraform": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "lineNumber": 100,
        "iacDescription": {
          "issue": "DynamoDB does not have Point-in-Time Recovery enabled",
          "impact": "No automated backups of DynamoDB data",
          "resolve": "Set `point_in_time_recovery.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-125",
        "msg": "resource.aws_dynamodb_table[variant_queries]",
        "references": [
          "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery_Howitworks.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[variant_queries]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-417",
        "title": "DynamoDB not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "DynamoDB",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-417",
        "isGeneratedByCustomRule": false,
        "issue": "DynamoDB table is not encrypted with customer managed KMS key",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN",
        "remediation": {
          "cloudformation": "Set `Properties.SSESpecification.SSEType` attribute to `KMS`, and `Properties.SSESpecification.KMSMasterKeyId` attribute to customer managed key ARN",
          "terraform": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "lineNumber": 30,
        "iacDescription": {
          "issue": "DynamoDB table is not encrypted with customer managed KMS key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `server_side_encryption.kms_key_arn` attribute to customer managed key ARN"
        },
        "publicId": "SNYK-CC-AWS-417",
        "msg": "resource.aws_dynamodb_table[ontologies].server_side_encryption.kms_key_arn",
        "references": [
          "https://docs.aws.amazon.com/kms/latest/developerguide/services-dynamodb.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_dynamodb_table[ontologies]",
          "server_side_encryption",
          "kms_key_arn"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "iam.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/iam.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "lambda.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/lambda.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "layers.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/layers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "main.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "outputs.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "s3.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/s3.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket versioning is disabled",
        "impact": "Changes or deletion of objects will not be reversible",
        "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource.",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "lineNumber": 44,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "publicId": "SNYK-CC-TF-124",
        "msg": "resource.aws_s3_bucket[metadata-bucket].versioning.enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[metadata-bucket]",
          "versioning",
          "enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "impact": "Object could be deleted without stronger MFA authorization",
        "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file",
        "remediation": {
          "terraform": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "lineNumber": 44,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "publicId": "SNYK-CC-TF-127",
        "msg": "resource.aws_s3_bucket[metadata-bucket].versioning.mfa_delete",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[metadata-bucket]",
          "versioning",
          "mfa_delete"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "impact": "Object could be deleted without stronger MFA authorization",
        "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file",
        "remediation": {
          "terraform": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "lineNumber": 112,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "publicId": "SNYK-CC-TF-127",
        "msg": "resource.aws_s3_bucket[lambda-layers-bucket].versioning.mfa_delete",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[lambda-layers-bucket]",
          "versioning",
          "mfa_delete"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "impact": "Object could be deleted without stronger MFA authorization",
        "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file",
        "remediation": {
          "terraform": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "lineNumber": 4,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Follow instructions in `https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html` to manually configure the MFA setting. For AWS provider < v4.0.0 set `versioning.mfa_delete` attribute to `true` in aws_s3_bucket resource. For AWS provider >= v4.0.0 set 'versioning_configuration.mfa_delete` attribute to `Enabled`. The terraform change is required to reflect the setting in the state file"
        },
        "publicId": "SNYK-CC-TF-127",
        "msg": "resource.aws_s3_bucket[variants-bucket].versioning.mfa_delete",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiFactorAuthenticationDelete.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[variants-bucket]",
          "versioning",
          "mfa_delete"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket versioning is disabled",
        "impact": "Changes or deletion of objects will not be reversible",
        "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource.",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "lineNumber": 112,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "publicId": "SNYK-CC-TF-124",
        "msg": "resource.aws_s3_bucket[lambda-layers-bucket].versioning.enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[lambda-layers-bucket]",
          "versioning",
          "enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "isGeneratedByCustomRule": false,
        "issue": "S3 bucket versioning is disabled",
        "impact": "Changes or deletion of objects will not be reversible",
        "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource.",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "lineNumber": 4,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "For AWS provider < v4.0.0, set `versioning.enabled` attribute to `true`. For AWS provider >= v4.0.0, add aws_s3_bucket_versioning resource."
        },
        "publicId": "SNYK-CC-TF-124",
        "msg": "resource.aws_s3_bucket[variants-bucket].versioning.enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "path": [
          "resource",
          "aws_s3_bucket[variants-bucket]",
          "versioning",
          "enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "isGeneratedByCustomRule": false,
        "issue": "The s3 access logs will not be collected",
        "impact": "There will be no audit trail of access to s3 objects",
        "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource.",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "lineNumber": 112,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "publicId": "SNYK-CC-TF-45",
        "msg": "input.resource.aws_s3_bucket[lambda-layers-bucket].logging",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[lambda-layers-bucket]",
          "logging"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "isGeneratedByCustomRule": false,
        "issue": "The s3 access logs will not be collected",
        "impact": "There will be no audit trail of access to s3 objects",
        "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource.",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "lineNumber": 4,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "publicId": "SNYK-CC-TF-45",
        "msg": "input.resource.aws_s3_bucket[variants-bucket].logging",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[variants-bucket]",
          "logging"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "S3",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "isGeneratedByCustomRule": false,
        "issue": "The s3 access logs will not be collected",
        "impact": "There will be no audit trail of access to s3 objects",
        "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource.",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "lineNumber": 44,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "For AWS provider < v4.0.0, add `logging` block attribute. For AWS provider >= v4.0.0, add aws_s3_bucket_logging resource."
        },
        "publicId": "SNYK-CC-TF-45",
        "msg": "input.resource.aws_s3_bucket[metadata-bucket].logging",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[metadata-bucket]",
          "logging"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "sns.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/sns.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "severity": "medium",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "isGeneratedByCustomRule": false,
        "issue": "The SNS topic is not encrypted at rest",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `kms_master_key_id` attribute to KMS key",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `kms_master_key_id` attribute to KMS key"
        },
        "publicId": "SNYK-CC-TF-55",
        "msg": "resource.aws_sns_topic[indexer].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[indexer]",
          "kms_master_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "isGeneratedByCustomRule": false,
        "issue": "SNS topic is not encrypted with customer managed key",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `kms_master_key_id` attribute to a customer managed key id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "lineNumber": 11,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "publicId": "SNYK-CC-AWS-422",
        "msg": "resource.aws_sns_topic[performQuery].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[performQuery]",
          "kms_master_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "isGeneratedByCustomRule": false,
        "issue": "SNS topic is not encrypted with customer managed key",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `kms_master_key_id` attribute to a customer managed key id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "publicId": "SNYK-CC-AWS-422",
        "msg": "resource.aws_sns_topic[splitQuery].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[splitQuery]",
          "kms_master_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "severity": "medium",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "isGeneratedByCustomRule": false,
        "issue": "The SNS topic is not encrypted at rest",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `kms_master_key_id` attribute to KMS key",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "lineNumber": 11,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `kms_master_key_id` attribute to KMS key"
        },
        "publicId": "SNYK-CC-TF-55",
        "msg": "resource.aws_sns_topic[performQuery].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[performQuery]",
          "kms_master_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "severity": "medium",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "isGeneratedByCustomRule": false,
        "issue": "The SNS topic is not encrypted at rest",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `kms_master_key_id` attribute to KMS key",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `kms_master_key_id` attribute to KMS key"
        },
        "publicId": "SNYK-CC-TF-55",
        "msg": "resource.aws_sns_topic[splitQuery].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[splitQuery]",
          "kms_master_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "SNS",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "isGeneratedByCustomRule": false,
        "issue": "SNS topic is not encrypted with customer managed key",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "resolve": "Set `kms_master_key_id` attribute to a customer managed key id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "publicId": "SNYK-CC-AWS-422",
        "msg": "resource.aws_sns_topic[indexer].kms_master_key_id",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "path": [
          "resource",
          "aws_sns_topic[indexer]",
          "kms_master_key_id"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "variables.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "versions.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "examples/full/backend.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/examples/full/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "examples/full/main.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/examples/full/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "examples/full/outputs.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/examples/full/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "examples/minimum/main.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/examples/minimum/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "examples/minimum/outputs.tf",
    "projectName": "terraform-aws-serverless-beacon",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon/examples/minimum/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-aws-serverless-beacon",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  }
]