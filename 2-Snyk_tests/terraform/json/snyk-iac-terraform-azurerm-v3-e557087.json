[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": ".utils/features.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/.utils/features.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-504",
        "title": "API Management allows anonymous access to developer portal",
        "severity": "low",
        "isIgnored": false,
        "subType": "API Management",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-504",
        "isGeneratedByCustomRule": false,
        "issue": "API Management allows anonymous access to developer portal",
        "impact": "Anonymous users can access your API documentation and specifications",
        "resolve": "Set a `sign_in.enabled` attribute set to `true`",
        "remediation": {
          "terraform": "Set a `sign_in.enabled` attribute set to `true`",
          "arm": "Set `name` to `signin` and `properties.enabled` to `true`"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "API Management allows anonymous access to developer portal",
          "impact": "Anonymous users can access your API documentation and specifications",
          "resolve": "Set a `sign_in.enabled` attribute set to `true`"
        },
        "publicId": "SNYK-CC-AZURE-504",
        "msg": "resource.azurerm_api_management[this].sign_in",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/api_management#enabled",
          "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2"
        ],
        "path": [
          "resource",
          "azurerm_api_management[this]",
          "sign_in"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 355,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[apim].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[apim]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_api/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_api/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_api/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_api/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_api/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_api/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_api/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_api/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_product/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_product/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_product/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_product/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_product/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_product/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "api_management_product/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/api_management_product/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_gateway/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_gateway/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 308,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[app_gw].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[app_gw]",
          "log"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-610",
        "title": "App Gateway does not use OWASP 3.x rules",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-610",
        "isGeneratedByCustomRule": false,
        "issue": "App Gateway does not use OWASP 3.x rules",
        "impact": "Out-of-date OWASP rules might not protect as effectively as more recent rule sets",
        "resolve": "Set `waf_configuration.rule_set_type` to `OWASP` and `waf_configuration.rule_set_version` to `3.1`",
        "remediation": {
          "terraform": "Set `waf_configuration.rule_set_type` to `OWASP` and `waf_configuration.rule_set_version` to `3.1`",
          "arm": "Set `properties.webApplicationFirewallConfiguration.ruleSetType` to `OWASP` and `properties.webApplicationFirewallConfiguration.ruleSetVersion` to `3.2`"
        },
        "lineNumber": 7,
        "iacDescription": {
          "issue": "App Gateway does not use OWASP 3.x rules",
          "impact": "Out-of-date OWASP rules might not protect as effectively as more recent rule sets",
          "resolve": "Set `waf_configuration.rule_set_type` to `OWASP` and `waf_configuration.rule_set_version` to `3.1`"
        },
        "publicId": "SNYK-CC-AZURE-610",
        "msg": "resource.azurerm_application_gateway[this].waf_configuration",
        "references": [
          "https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.network/applicationgateways?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_application_gateway[this]",
          "waf_configuration"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-474",
        "title": "WAF not enabled on application gateway",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-474",
        "isGeneratedByCustomRule": false,
        "issue": "WAF not enabled on application gateway",
        "impact": "Application will not be protected using a Web Application Firewall",
        "resolve": "Set `enabled` attribute to `true` within the `waf_configuration` block",
        "remediation": {
          "terraform": "Set `enabled` attribute to `true` within the `waf_configuration` block",
          "arm": "Set `properties.webApplicationFirewallConfiguration.enabled` attribute to `true`"
        },
        "lineNumber": 7,
        "iacDescription": {
          "issue": "WAF not enabled on application gateway",
          "impact": "Application will not be protected using a Web Application Firewall",
          "resolve": "Set `enabled` attribute to `true` within the `waf_configuration` block"
        },
        "publicId": "SNYK-CC-AZURE-474",
        "msg": "resource.azurerm_application_gateway[this].waf_configuration",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/application_gateway",
          "https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"
        ],
        "path": [
          "resource",
          "azurerm_application_gateway[this]",
          "waf_configuration"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_gateway/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_gateway/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_gateway/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_gateway/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_gateway/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_gateway/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-595",
        "title": "Geo replication for Azure Container Images disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-595",
        "isGeneratedByCustomRule": false,
        "issue": "Geo replication for Azure Container Images disabled",
        "impact": "Missing geo replication leads to reduced availability of container images",
        "resolve": "Set a `georeplications` block within the resource, including a valid `location` property",
        "remediation": {
          "terraform": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Geo replication for Azure Container Images disabled",
          "impact": "Missing geo replication leads to reduced availability of container images",
          "resolve": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "publicId": "SNYK-CC-AZURE-595",
        "msg": "resource.azurerm_container_registry[reg].georeplications",
        "references": [
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/replications?tabs=json",
          "https://azure.microsoft.com/en-gb/blog/azure-container-registry-makes-geo-replication-generally-available-adding-lifecycle-management-capabilities/",
          "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/container-registry/container-registry-get-started-geo-replication-template.md"
        ],
        "path": [
          "resource",
          "azurerm_container_registry[reg]",
          "georeplications"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/OLD/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/OLD/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/OLD/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/OLD/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/OLD/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/OLD/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-618",
        "title": "Use two or more App Service Plan instances",
        "severity": "medium",
        "isIgnored": false,
        "subType": "App Service (Web Apps)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-618",
        "isGeneratedByCustomRule": false,
        "issue": "Use two or more App Service Plan instances",
        "impact": "A single App Service Plan instance increases the risk of application unavailability",
        "resolve": "Set `sku.capacity` to `2` or more",
        "remediation": {
          "terraform": "Set `sku.capacity` to `2` or more",
          "arm": "Set `sku.capacity` to `2` or more"
        },
        "lineNumber": 59,
        "iacDescription": {
          "issue": "Use two or more App Service Plan instances",
          "impact": "A single App Service Plan instance increases the risk of application unavailability",
          "resolve": "Set `sku.capacity` to `2` or more"
        },
        "publicId": "SNYK-CC-AZURE-618",
        "msg": "resource.azurerm_app_service_plan[app_docker].sku.capacity",
        "references": [
          "https://docs.microsoft.com/en-us/azure/app-service/overview-hosting-plans",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.web/serverfarms?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_app_service_plan[app_docker]",
          "sku",
          "capacity"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-613",
        "title": "App Service does not use production level SKU",
        "severity": "low",
        "isIgnored": false,
        "subType": "App Service (Web Apps)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-613",
        "isGeneratedByCustomRule": false,
        "issue": "App Service does not use production level SKU",
        "impact": "Missing advanced auto scale and traffic management features can cause stability issues for production workload",
        "resolve": "Set `sku.tier` to `Standard` or higher",
        "remediation": {
          "terraform": "Set `sku.tier` to `Standard` or higher",
          "arm": "Set `sku.tier` to `Standard` or higher"
        },
        "lineNumber": 60,
        "iacDescription": {
          "issue": "App Service does not use production level SKU",
          "impact": "Missing advanced auto scale and traffic management features can cause stability issues for production workload",
          "resolve": "Set `sku.tier` to `Standard` or higher"
        },
        "publicId": "SNYK-CC-AZURE-613",
        "msg": "resource.azurerm_app_service_plan[app_docker].sku.tier",
        "references": [
          "https://azure.microsoft.com/en-us/pricing/details/app-service/windows/",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service_plan",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.web/2019-08-01/serverfarms?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_app_service_plan[app_docker]",
          "sku",
          "tier"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-595",
        "title": "Geo replication for Azure Container Images disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-595",
        "isGeneratedByCustomRule": false,
        "issue": "Geo replication for Azure Container Images disabled",
        "impact": "Missing geo replication leads to reduced availability of container images",
        "resolve": "Set a `georeplications` block within the resource, including a valid `location` property",
        "remediation": {
          "terraform": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Geo replication for Azure Container Images disabled",
          "impact": "Missing geo replication leads to reduced availability of container images",
          "resolve": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "publicId": "SNYK-CC-AZURE-595",
        "msg": "resource.azurerm_container_registry[reg].georeplications",
        "references": [
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/replications?tabs=json",
          "https://azure.microsoft.com/en-gb/blog/azure-container-registry-makes-geo-replication-generally-available-adding-lifecycle-management-capabilities/",
          "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/container-registry/container-registry-get-started-geo-replication-template.md"
        ],
        "path": [
          "resource",
          "azurerm_container_registry[reg]",
          "georeplications"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service/tests/OLD/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service/tests/OLD/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-595",
        "title": "Geo replication for Azure Container Images disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-595",
        "isGeneratedByCustomRule": false,
        "issue": "Geo replication for Azure Container Images disabled",
        "impact": "Missing geo replication leads to reduced availability of container images",
        "resolve": "Set a `georeplications` block within the resource, including a valid `location` property",
        "remediation": {
          "terraform": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Geo replication for Azure Container Images disabled",
          "impact": "Missing geo replication leads to reduced availability of container images",
          "resolve": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "publicId": "SNYK-CC-AZURE-595",
        "msg": "resource.azurerm_container_registry[reg].georeplications",
        "references": [
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/replications?tabs=json",
          "https://azure.microsoft.com/en-gb/blog/azure-container-registry-makes-geo-replication-generally-available-adding-lifecycle-management-capabilities/",
          "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/container-registry/container-registry-get-started-geo-replication-template.md"
        ],
        "path": [
          "resource",
          "azurerm_container_registry[reg]",
          "georeplications"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/OLD/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/OLD/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/OLD/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/OLD/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/OLD/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/OLD/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 49,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-618",
        "title": "Use two or more App Service Plan instances",
        "severity": "medium",
        "isIgnored": false,
        "subType": "App Service (Web Apps)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-618",
        "isGeneratedByCustomRule": false,
        "issue": "Use two or more App Service Plan instances",
        "impact": "A single App Service Plan instance increases the risk of application unavailability",
        "resolve": "Set `sku.capacity` to `2` or more",
        "remediation": {
          "terraform": "Set `sku.capacity` to `2` or more",
          "arm": "Set `sku.capacity` to `2` or more"
        },
        "lineNumber": 83,
        "iacDescription": {
          "issue": "Use two or more App Service Plan instances",
          "impact": "A single App Service Plan instance increases the risk of application unavailability",
          "resolve": "Set `sku.capacity` to `2` or more"
        },
        "publicId": "SNYK-CC-AZURE-618",
        "msg": "resource.azurerm_app_service_plan[app_docker].sku.capacity",
        "references": [
          "https://docs.microsoft.com/en-us/azure/app-service/overview-hosting-plans",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.web/serverfarms?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_app_service_plan[app_docker]",
          "sku",
          "capacity"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-595",
        "title": "Geo replication for Azure Container Images disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-595",
        "isGeneratedByCustomRule": false,
        "issue": "Geo replication for Azure Container Images disabled",
        "impact": "Missing geo replication leads to reduced availability of container images",
        "resolve": "Set a `georeplications` block within the resource, including a valid `location` property",
        "remediation": {
          "terraform": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Geo replication for Azure Container Images disabled",
          "impact": "Missing geo replication leads to reduced availability of container images",
          "resolve": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "publicId": "SNYK-CC-AZURE-595",
        "msg": "resource.azurerm_container_registry[reg].georeplications",
        "references": [
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/replications?tabs=json",
          "https://azure.microsoft.com/en-gb/blog/azure-container-registry-makes-geo-replication-generally-available-adding-lifecycle-management-capabilities/",
          "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/container-registry/container-registry-get-started-geo-replication-template.md"
        ],
        "path": [
          "resource",
          "azurerm_container_registry[reg]",
          "georeplications"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "app_service_slot/tests/OLD/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/app_service_slot/tests/OLD/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 15,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[this].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[this]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_standard_web_test/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_standard_web_test/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_web_test_preview/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_web_test_preview/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_web_test_preview/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_web_test_preview/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "application_insights_web_test_preview/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/application_insights_web_test_preview/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-475",
        "title": "Linux VM scale set encryption at host disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-475",
        "isGeneratedByCustomRule": false,
        "issue": "Linux VM scale set encryption at host disabled",
        "impact": "Storage devices attached to the VM will not be encrypted at rest",
        "resolve": "Set `encryption_at_host_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `encryption_at_host_enabled` attribute to `true`",
          "arm": "Set `properties.securityProfile.encryptionAtHost` attribute to `true`"
        },
        "lineNumber": 22,
        "iacDescription": {
          "issue": "Linux VM scale set encryption at host disabled",
          "impact": "Storage devices attached to the VM will not be encrypted at rest",
          "resolve": "Set `encryption_at_host_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-475",
        "msg": "resource.azurerm_linux_virtual_machine_scale_set[this].encryption_at_host_enabled",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine_scale_set",
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disks-enable-host-based-encryption-cli"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine_scale_set[this]",
          "encryption_at_host_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent_custom_image/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent_custom_image/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent_custom_image/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent_custom_image/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent_custom_image/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent_custom_image/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "azure_devops_agent_custom_image/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/azure_devops_agent_custom_image/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-509",
        "title": "CDN Endpoint https not enforced",
        "severity": "medium",
        "isIgnored": false,
        "subType": "CDN",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-509",
        "isGeneratedByCustomRule": false,
        "issue": "CDN Endpoint https not enforced",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set `is_http_allowed` to `false`",
        "remediation": {
          "terraform": "Set `is_http_allowed` to `false`",
          "arm": "Set `properties.isHttpAllowed` to `false`"
        },
        "lineNumber": 50,
        "iacDescription": {
          "issue": "CDN Endpoint https not enforced",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `is_http_allowed` to `false`"
        },
        "publicId": "SNYK-CC-AZURE-509",
        "msg": "resource.azurerm_cdn_endpoint[this].is_http_allowed",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/cdn_endpoint#is_http_allowed",
          "https://docs.microsoft.com/en-us/azure/cdn/cdn-custom-ssl?tabs=option-1-default-enable-https-with-a-cdn-managed-certificate"
        ],
        "path": [
          "resource",
          "azurerm_cdn_endpoint[this]",
          "is_http_allowed"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 700,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[diagnostic_settings_cdn_profile].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[diagnostic_settings_cdn_profile]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-175",
        "title": "Key Vault accidental purge prevention disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-175",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault accidental purge prevention disabled",
        "impact": "Accidentally purged key material will not recoverable",
        "resolve": "Set `purge_protection_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `purge_protection_enabled` attribute to `true`",
          "arm": "Set `properties.enablePurgeProtection` attribute to `true`"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Key Vault accidental purge prevention disabled",
          "impact": "Accidentally purged key material will not recoverable",
          "resolve": "Set `purge_protection_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-175",
        "msg": "resource.azurerm_key_vault[this].purge_protection_enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[this]",
          "purge_protection_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cdn/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cdn/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cert_mounter/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cert_mounter/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cert_mounter/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cert_mounter/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cert_mounter/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cert_mounter/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_environment_v2/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_environment_v2/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/data.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/data.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/locals.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/locals.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-175",
        "title": "Key Vault accidental purge prevention disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-175",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault accidental purge prevention disabled",
        "impact": "Accidentally purged key material will not recoverable",
        "resolve": "Set `purge_protection_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `purge_protection_enabled` attribute to `true`",
          "arm": "Set `properties.enablePurgeProtection` attribute to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Key Vault accidental purge prevention disabled",
          "impact": "Accidentally purged key material will not recoverable",
          "resolve": "Set `purge_protection_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-175",
        "msg": "resource.azurerm_key_vault[key_vault].purge_protection_enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[key_vault]",
          "purge_protection_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[key_vault].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[key_vault]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/data.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/data.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/locals.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/locals.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-175",
        "title": "Key Vault accidental purge prevention disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-175",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault accidental purge prevention disabled",
        "impact": "Accidentally purged key material will not recoverable",
        "resolve": "Set `purge_protection_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `purge_protection_enabled` attribute to `true`",
          "arm": "Set `properties.enablePurgeProtection` attribute to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Key Vault accidental purge prevention disabled",
          "impact": "Accidentally purged key material will not recoverable",
          "resolve": "Set `purge_protection_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-175",
        "msg": "resource.azurerm_key_vault[key_vault].purge_protection_enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[key_vault]",
          "purge_protection_enabled"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": 27,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[key_vault].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[key_vault]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 32,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_app_job_gh_runner_v2/tests/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_app_job_gh_runner_v2/tests/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 61,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[this].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[this]",
          "log"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-595",
        "title": "Geo replication for Azure Container Images disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-595",
        "isGeneratedByCustomRule": false,
        "issue": "Geo replication for Azure Container Images disabled",
        "impact": "Missing geo replication leads to reduced availability of container images",
        "resolve": "Set a `georeplications` block within the resource, including a valid `location` property",
        "remediation": {
          "terraform": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Geo replication for Azure Container Images disabled",
          "impact": "Missing geo replication leads to reduced availability of container images",
          "resolve": "Set a `georeplications` block within the resource, including a valid `location` property"
        },
        "publicId": "SNYK-CC-AZURE-595",
        "msg": "resource.azurerm_container_registry[this].georeplications",
        "references": [
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.containerregistry/registries/replications?tabs=json",
          "https://azure.microsoft.com/en-gb/blog/azure-container-registry-makes-geo-replication-generally-available-adding-lifecycle-management-capabilities/",
          "https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/container-registry/container-registry-get-started-geo-replication-template.md"
        ],
        "path": [
          "resource",
          "azurerm_container_registry[this]",
          "georeplications"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 15,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet_acr].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet_acr]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "container_registry/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/container_registry/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-621",
        "title": "Restrict user access to data operations in Azure Cosmos DB",
        "severity": "medium",
        "isIgnored": false,
        "subType": "CosmosDB (DocumentDB)",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-621",
        "isGeneratedByCustomRule": false,
        "issue": "Restrict user access to data operations in Azure Cosmos DB",
        "impact": "Account key-based write access to account data exposes sensitive configuration options to non-administrative accounts",
        "resolve": "Set `access_key_metadata_writes_enabled` to `false`",
        "remediation": {
          "terraform": "Set `access_key_metadata_writes_enabled` to `false`",
          "arm": "Set `Properties.disableKeyBasedMetadataWriteAccess` to `true`"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Restrict user access to data operations in Azure Cosmos DB",
          "impact": "Account key-based write access to account data exposes sensitive configuration options to non-administrative accounts",
          "resolve": "Set `access_key_metadata_writes_enabled` to `false`"
        },
        "publicId": "SNYK-CC-AZURE-621",
        "msg": "resource.azurerm_cosmosdb_account[this].access_key_metadata_writes_enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/cosmos-db/audit-control-plane-logs",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.documentdb/databaseaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_cosmosdb_account[this]",
          "access_key_metadata_writes_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_account/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_account/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_mongodb_collection/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_mongodb_collection/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_mongodb_collection/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_mongodb_collection/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_mongodb_collection/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_mongodb_collection/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_mongodb_collection/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_mongodb_collection/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_container/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_container/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_container/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_container/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_container/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_container/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_container/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_container/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_database/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_database/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_database/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_database/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_database/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_database/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cosmosdb_sql_database/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/cosmosdb_sql_database/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_factory/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_factory/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-514",
        "title": "Data Factory not encrypted with customer managed key",
        "severity": "low",
        "isIgnored": false,
        "subType": "Data Factory",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-514",
        "isGeneratedByCustomRule": false,
        "issue": "Data Factory is not using customer managed key to encrypt data",
        "impact": "Scope of use of the key cannot be controlled via access policies",
        "resolve": "Set `customer_managed_key_id` attribute",
        "remediation": {
          "terraform": "Set `customer_managed_key_id` attribute",
          "arm": "Set `properties.encryption.keyName` attribute to customer managed key"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Data Factory is not using customer managed key to encrypt data",
          "impact": "Scope of use of the key cannot be controlled via access policies",
          "resolve": "Set `customer_managed_key_id` attribute"
        },
        "publicId": "SNYK-CC-AZURE-514",
        "msg": "resource.azurerm_data_factory[this].customer_managed_key_id",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#customer_managed_key_id",
          "https://docs.microsoft.com/en-us/azure/data-factory/enable-customer-managed-key"
        ],
        "path": [
          "resource",
          "azurerm_data_factory[this]",
          "customer_managed_key_id"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-513",
        "title": "Data Factory public access enabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Data Factory",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-513",
        "isGeneratedByCustomRule": false,
        "issue": "The Azure Data Factory REST APIs are accessible from the Internet",
        "impact": "The REST APIs are subject to attacks from the public internet, such as zero-day vulnerabilities and unauthorized access via lost credentials",
        "resolve": "Set `public_network_enabled` to `false`",
        "remediation": {
          "terraform": "Set `public_network_enabled` to `false`",
          "arm": "Set `properties.publicNetworkAccess` to `Disabled`"
        },
        "lineNumber": 5,
        "iacDescription": {
          "issue": "The Azure Data Factory REST APIs are accessible from the Internet",
          "impact": "The REST APIs are subject to attacks from the public internet, such as zero-day vulnerabilities and unauthorized access via lost credentials",
          "resolve": "Set `public_network_enabled` to `false`"
        },
        "publicId": "SNYK-CC-AZURE-513",
        "msg": "resource.azurerm_data_factory[this].public_network_enabled",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled",
          "https://docs.microsoft.com/en-us/azure/data-factory/data-movement-security-considerations"
        ],
        "path": [
          "resource",
          "azurerm_data_factory[this]",
          "public_network_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_factory/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_factory/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_factory/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_factory/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/app_service.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/app_service.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/network.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/network.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/resource_group.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/resource_group.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/storage.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/storage.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/tests/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/tests/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "data_indexer/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/data_indexer/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder/vars.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder/vars.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[dns_forwarder_vmss_administrator_username]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[dns_forwarder_vmss_administrator_username]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[dns_forwarder_vmss_administrator_password]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[dns_forwarder_vmss_administrator_password]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_lb_vmss/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_lb_vmss/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-475",
        "title": "Linux VM scale set encryption at host disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-475",
        "isGeneratedByCustomRule": false,
        "issue": "Linux VM scale set encryption at host disabled",
        "impact": "Storage devices attached to the VM will not be encrypted at rest",
        "resolve": "Set `encryption_at_host_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `encryption_at_host_enabled` attribute to `true`",
          "arm": "Set `properties.securityProfile.encryptionAtHost` attribute to `true`"
        },
        "lineNumber": 21,
        "iacDescription": {
          "issue": "Linux VM scale set encryption at host disabled",
          "impact": "Storage devices attached to the VM will not be encrypted at rest",
          "resolve": "Set `encryption_at_host_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-475",
        "msg": "resource.azurerm_linux_virtual_machine_scale_set[this].encryption_at_host_enabled",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine_scale_set",
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disks-enable-host-based-encryption-cli"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine_scale_set[this]",
          "encryption_at_host_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_scale_set_vm/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_scale_set_vm/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_vm_image/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_vm_image/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_vm_image/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_vm_image/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_vm_image/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_vm_image/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "dns_forwarder_vm_image/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/dns_forwarder_vm_image/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/yaml/2.12/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/yaml/2.12/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/yaml/2.6/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/yaml/2.6/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_agent/yaml/2.9/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_agent/yaml/2.9/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/SecretProvider.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/SecretProvider.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/crds.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/crds.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/ingress_apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/ingress_apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/ingress_elastic.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/ingress_elastic.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/ingress_kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/ingress_kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/mounter.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/mounter.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[alpine].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[alpine].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[alpine].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[alpine].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.12/operator.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.12/operator.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[4].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 3]",
          "rules[4]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 416,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 8]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/SecretProvider.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/SecretProvider.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/crds.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/crds.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/ingress_apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/ingress_apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/ingress_elastic.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/ingress_elastic.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/ingress_kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/ingress_kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/mounter.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/mounter.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[alpine].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[alpine].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[alpine].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[alpine].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.6/operator.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.6/operator.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[4].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 3]",
          "rules[4]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 374,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 8]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/SecretProvider.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/SecretProvider.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/agent.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/agent.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "isGeneratedByCustomRule": false,
        "issue": "The pod is sharing host's Network namespace",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "remediation": {
          "kubernetes": "Remove `hostNetwork` attribute, or set value to `false`",
          "terraform": "Remove `host_network` attribute, or set value to `false`"
        },
        "lineNumber": 950,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "publicId": "SNYK-CC-K8S-14",
        "msg": "input.spec.template.spec.hostNetwork",
        "description": "",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[elastic-agent].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1036,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[var-lib].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[var-lib]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 981,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1018,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[proc].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[proc]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1024,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlibdockercontainers].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlibdockercontainers]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1027,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[varlog].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[varlog]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1021,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[cgroup].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[cgroup]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-37",
        "title": "Container is running with host path mount",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "isGeneratedByCustomRule": false,
        "issue": "Host path has been mounted inside the pod",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "resolve": "Remove `hostPath` volume mount",
        "remediation": {
          "kubernetes": "Remove `hostPath` volume mount",
          "terraform": "Remove `host_path` from `spec.volume` property"
        },
        "lineNumber": 1033,
        "iacDescription": {
          "issue": "Host path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "publicId": "SNYK-CC-K8S-37",
        "msg": "spec.template.spec.volumes[etc-full].hostPath",
        "references": [
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "path": [
          "[DocId: 1]",
          "spec",
          "template",
          "spec",
          "volumes[etc-full]",
          "hostPath"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 980,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[elastic-agent].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 1]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[elastic-agent]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/crds.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/crds.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/ingress_apm.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/ingress_apm.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/ingress_elastic.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/ingress_elastic.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/ingress_kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/ingress_kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/kibana.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/kibana.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/mounter.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/mounter.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "severity": "low",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "isGeneratedByCustomRule": false,
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
          "terraform": "Set `security_context.read_only_root_filesystem` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
        },
        "publicId": "SNYK-CC-K8S-8",
        "msg": "spec.template.spec.containers[alpine].securityContext.readOnlyRootFilesystem",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "readOnlyRootFilesystem"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "isGeneratedByCustomRule": false,
        "issue": "Liveness probe is not defined",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "resolve": "Add `livenessProbe` attribute",
        "remediation": {
          "kubernetes": "Add `livenessProbe` attribute",
          "terraform": "Add `liveness_probe` attribute"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "publicId": "SNYK-CC-K8S-41",
        "msg": "spec.template.spec.containers[alpine].livenessProbe",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "livenessProbe"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "isGeneratedByCustomRule": false,
        "issue": "The image policy does not prevent image reuse",
        "impact": "The container may run with outdated or unauthorized image",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "remediation": {
          "kubernetes": "Set `imagePullPolicy` attribute to `Always`",
          "terraform": "Set `image_pull_policy` attribute to `Always"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "publicId": "SNYK-CC-K8S-42",
        "msg": "spec.template.spec.containers[alpine].imagePullPolicy",
        "references": [
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "imagePullPolicy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Pod",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "isGeneratedByCustomRule": false,
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
        "remediation": {
          "kubernetes": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
          "terraform": "Set `spec.container.security_context.allow_privilege_escalation` to `false`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
        },
        "publicId": "SNYK-CC-K8S-9",
        "msg": "spec.template.spec.containers[alpine].securityContext.allowPrivilegeEscalation",
        "references": [
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "path": [
          "[DocId: 0]",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "allowPrivilegeEscalation"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-10",
        "title": "Container or Pod is running without root user control",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "isGeneratedByCustomRule": false,
        "issue": "Container or Pod is running without root user control",
        "impact": "Container or Pod could be running with full administrative privileges",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsNonRoot` to `true`",
          "terraform": "Set `security_context.run_as_non_root` to `true`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "Container or Pod is running without root user control",
          "impact": "Container or Pod could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "publicId": "SNYK-CC-K8S-10",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.runAsNonRoot",
        "description": "",
        "references": [
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "runAsNonRoot"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "isGeneratedByCustomRule": false,
        "issue": "All default capabilities are not explicitly dropped",
        "impact": "Containers are running with potentially unnecessary privileges",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "remediation": {
          "kubernetes": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
          "terraform": "Add `ALL` to `spec.container.security_context.capabilities.drop` list, and add only required capabilities to `spec.container.security_context.capabilities.add`, ensuring it also does not contain `ALL`"
        },
        "lineNumber": 20,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "publicId": "SNYK-CC-K8S-6",
        "msg": "input.spec.template.spec.containers[alpine].securityContext.capabilities.drop",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "path": [
          "[DocId: 0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[alpine]",
          "securityContext",
          "capabilities",
          "drop"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "elastic_stack/yaml/2.9/operator.yaml",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/elastic_stack/yaml/2.9/operator.yaml",
    "packageManager": "k8sconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-K8S-47",
        "title": "Role or ClusterRole with dangerous permissions",
        "severity": "high",
        "isIgnored": false,
        "subType": "ClusterRole",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47",
        "isGeneratedByCustomRule": false,
        "issue": "A role was found using a dangerous permissions",
        "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
        "resolve": "Consider removing these permissions",
        "remediation": {
          "kubernetes": "Consider removing these permissions",
          "terraform": "Consider removing these permissions"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "A role was found using a dangerous permissions",
          "impact": "Using this role grants dangerous permissions. For a ClusterRole this would be considered high severity.",
          "resolve": "Consider removing these permissions"
        },
        "publicId": "SNYK-CC-K8S-47",
        "msg": "rules[4].resources",
        "references": [
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/"
        ],
        "path": [
          "[DocId: 3]",
          "rules[4]",
          "resources"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-K8S-11",
        "title": "Container's or Pod's  UID could clash with host's UID",
        "severity": "low",
        "isIgnored": false,
        "subType": "Deployment",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "isGeneratedByCustomRule": false,
        "issue": "`runAsUser` value is set to low UID",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
        "remediation": {
          "kubernetes": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
          "terraform": "Set `security_context.run_as_user` value to greater or equal than 10'000"
        },
        "lineNumber": 413,
        "iacDescription": {
          "issue": "`runAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
        },
        "publicId": "SNYK-CC-K8S-11",
        "msg": "input.spec.template.spec.containers[manager].securityContext.runAsUser",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "path": [
          "[DocId: 8]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[manager]",
          "securityContext",
          "runAsUser"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[this].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[this]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[this].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[this]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "eventhub_configuration/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/eventhub_configuration/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 17,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "function_app_slot/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/function_app_slot/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/locals.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/locals.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "github_federated_identity/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/github_federated_identity/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana_dashboard/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana_dashboard/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana_dashboard/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana_dashboard/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "grafana_dashboard/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/grafana_dashboard/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "jwt_keys/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/jwt_keys/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 36,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[jwt_private_key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[jwt_private_key]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 54,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[jwt_cert]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[jwt_cert]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 63,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[jwt_kid]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[jwt_kid]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 45,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[jwt_public_key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[jwt_public_key]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "jwt_keys/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/jwt_keys/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "jwt_keys/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/jwt_keys/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "jwt_keys/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/jwt_keys/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 55,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[key_vault].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[key_vault]",
          "log"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": 11,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[this].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[this]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault_secrets_query/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault_secrets_query/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault_secrets_query/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault_secrets_query/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault_secrets_query/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault_secrets_query/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "key_vault_secrets_query/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/key_vault_secrets_query/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "isGeneratedByCustomRule": false,
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "remediation": {
          "terraform": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
          "arm": "Set `properties.networkProfile.networkPolicy` attribute to `azure` or `calico`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "publicId": "SNYK-CC-TF-176",
        "msg": "resource.azurerm_kubernetes_cluster[this].network_profile.network_policy",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[this]",
          "network_profile",
          "network_policy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-82",
        "title": "Container Insights is disabled for AKS",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "isGeneratedByCustomRule": false,
        "issue": "Container Insights is disabled for AKS",
        "impact": "No insight into an AKS cluster might prevent incident response based on crucial log or hardware utilization information",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
          "arm": "Set attribute `properties.addonProfiles.omsagent.enabled` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Container Insights is disabled for AKS",
          "impact": "No insight into an AKS cluster might prevent incident response based on crucial log or hardware utilization information",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-82",
        "msg": "resource.azurerm_kubernetes_cluster[this].addon_profile.oms_agent",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview",
          "https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AKS.ContainerInsights/"
        ],
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[this]",
          "addon_profile",
          "oms_agent"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "isGeneratedByCustomRule": false,
        "issue": "The Kubernetes API server could be accessible by anyone",
        "impact": "Increases attack vector reachability",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "remediation": {
          "terraform": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
          "arm": "Set `properties.apiServerAccessProfile.authorizedIPRanges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "publicId": "SNYK-CC-TF-81",
        "msg": "resource.azurerm_kubernetes_cluster[this].api_server_authorized_ip_ranges",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[this]",
          "api_server_authorized_ip_ranges"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/02_monitor_aks.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/02_monitor_aks.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 46,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[aks].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[aks]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/03_pod_identity_extension.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/03_pod_identity_extension.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/10_outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/10_outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/99_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/99_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/99_variables_monitoring_alerts.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/99_variables_monitoring_alerts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster/99_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster/99_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "isGeneratedByCustomRule": false,
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "remediation": {
          "terraform": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
          "arm": "Set `properties.networkProfile.networkPolicy` attribute to `azure` or `calico`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "publicId": "SNYK-CC-TF-176",
        "msg": "resource.azurerm_kubernetes_cluster[this].network_profile.network_policy",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[this]",
          "network_profile",
          "network_policy"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-82",
        "title": "Container Insights is disabled for AKS",
        "severity": "low",
        "isIgnored": false,
        "subType": "Container",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "isGeneratedByCustomRule": false,
        "issue": "Container Insights is disabled for AKS",
        "impact": "No insight into an AKS cluster might prevent incident response based on crucial log or hardware utilization information",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
          "arm": "Set attribute `properties.addonProfiles.omsagent.enabled` to `true`"
        },
        "lineNumber": 13,
        "iacDescription": {
          "issue": "Container Insights is disabled for AKS",
          "impact": "No insight into an AKS cluster might prevent incident response based on crucial log or hardware utilization information",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-82",
        "msg": "resource.azurerm_kubernetes_cluster[this].addon_profile.oms_agent",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview",
          "https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.AKS.ContainerInsights/"
        ],
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[this]",
          "addon_profile",
          "oms_agent"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/02_monitor_aks.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/02_monitor_aks.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 46,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[aks].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[aks]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/03_pod_identity_extension.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/03_pod_identity_extension.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/10_outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/10_outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/99_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/99_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/99_variables_monitoring_alerts.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/99_variables_monitoring_alerts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_udr/99_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_udr/99_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_velero/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_velero/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_velero/99_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_velero/99_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_cluster_velero/99_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_cluster_velero/99_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_pod_identity/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_pod_identity/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_pod_identity/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_pod_identity/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_pod_identity/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_pod_identity/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_pod_identity/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_pod_identity/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_prometheus_install/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_prometheus_install/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_prometheus_install/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_prometheus_install/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_prometheus_install/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_prometheus_install/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_service_account/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_service_account/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_service_account/output.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_service_account/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_service_account/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_service_account/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_service_account/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_service_account/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_storage_class/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_storage_class/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_storage_class/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_storage_class/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_storage_class/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_storage_class/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_velero_backup/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_velero_backup/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_velero_backup/99_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_velero_backup/99_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_velero_backup/99_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_velero_backup/99_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_configuration/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_configuration/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 88,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[workload_identity_client_id]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[workload_identity_client_id]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 97,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[workload_identity_service_account_name]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[workload_identity_service_account_name]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_configuration/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_configuration/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_configuration/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_configuration/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_configuration/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_configuration/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_init/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_init/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_init/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_init/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_init/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_init/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "kubernetes_workload_identity_init/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/kubernetes_workload_identity_init/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "letsencrypt_credential/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/letsencrypt_credential/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "letsencrypt_credential/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/letsencrypt_credential/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "letsencrypt_credential/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/letsencrypt_credential/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[this].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[this]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "load_balancer/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/load_balancer/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "monitoring_function/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/monitoring_function/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "monitoring_function/99_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/monitoring_function/99_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "monitoring_function/99_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/monitoring_function/99_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "nat_gateway/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/nat_gateway/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/02_monitor_flexible.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/02_monitor_flexible.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[this].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[this]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/03_outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/03_outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/04_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/04_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/05_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/05_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 138,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[pgres_flex_admin_pwd]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[pgres_flex_admin_pwd]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 129,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[pgres_flex_admin_login]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[pgres_flex_admin_login]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-173",
        "title": "Vault key expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-173",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault key",
        "impact": "Key rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 186,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault key",
          "impact": "Key rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-173",
        "msg": "resource.azurerm_key_vault_key[pgsqlkey]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_key[pgsqlkey]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 18,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[test_vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[test_vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server_replica/01_main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server_replica/01_main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server_replica/02_monitor_flexible.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server_replica/02_monitor_flexible.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 73,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[this].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[this]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server_replica/03_outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server_replica/03_outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server_replica/04_variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server_replica/04_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgres_flexible_server_replica/05_versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgres_flexible_server_replica/05_versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgresql_server/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgresql_server/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgresql_server/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgresql_server/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgresql_server/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgresql_server/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "postgresql_server/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/postgresql_server/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "redis_cache/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/redis_cache/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "route_table/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/route_table/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "route_table/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/route_table/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "route_table/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/route_table/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "route_table/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/route_table/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-173",
        "title": "Vault key expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-173",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault key",
        "impact": "Key rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": 11,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault key",
          "impact": "Key rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `YYYY-MM-DD'T'H:M:S'Z'`, e.g `2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-173",
        "msg": "resource.azurerm_key_vault_key[key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_key[key]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_account_customer_managed_key/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_account_customer_managed_key/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_management_policy/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_management_policy/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/tests/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/tests/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "storage_object_replication/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/storage_object_replication/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "subnet/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/subnet/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "subnet/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/subnet/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "subnet/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/subnet/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "subnet/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/subnet/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "tls_checker/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/tls_checker/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "tls_checker/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/tls_checker/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "tls_checker/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/tls_checker/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[this].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[this]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network_peering/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network_peering/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network_peering/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network_peering/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network_peering/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network_peering/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "virtual_network_peering/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/virtual_network_peering/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-475",
        "title": "Linux VM scale set encryption at host disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-475",
        "isGeneratedByCustomRule": false,
        "issue": "Linux VM scale set encryption at host disabled",
        "impact": "Storage devices attached to the VM will not be encrypted at rest",
        "resolve": "Set `encryption_at_host_enabled` attribute to `true`",
        "remediation": {
          "terraform": "Set `encryption_at_host_enabled` attribute to `true`",
          "arm": "Set `properties.securityProfile.encryptionAtHost` attribute to `true`"
        },
        "lineNumber": 37,
        "iacDescription": {
          "issue": "Linux VM scale set encryption at host disabled",
          "impact": "Storage devices attached to the VM will not be encrypted at rest",
          "resolve": "Set `encryption_at_host_enabled` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-475",
        "msg": "resource.azurerm_linux_virtual_machine_scale_set[this].encryption_at_host_enabled",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine_scale_set",
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/disks-enable-host-based-encryption-cli"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine_scale_set[this]",
          "encryption_at_host_enabled"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/tests/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/tests/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/tests/resources.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/tests/resources.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": 8,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vm_scale_set/tests/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vm_scale_set/tests/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vpn_gateway/main.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vpn_gateway/main.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 113,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[sec_gw_logs].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[sec_gw_logs]",
          "log"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-655",
        "title": "Active-Active VPN Gateways not in use",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-655",
        "isGeneratedByCustomRule": false,
        "issue": "Active-Active VPN Gateways not in use",
        "impact": "Not using active-active VPN Gateway configuration might lead to connectivity downtime",
        "resolve": "Set `resource.active_active` to `true`",
        "remediation": {
          "terraform": "Set `resource.active_active` to `true`",
          "arm": "Set `properties.activeActive` to `true`"
        },
        "lineNumber": 69,
        "iacDescription": {
          "issue": "Active-Active VPN Gateways not in use",
          "impact": "Not using active-active VPN Gateway configuration might lead to connectivity downtime",
          "resolve": "Set `resource.active_active` to `true`"
        },
        "publicId": "SNYK-CC-AZURE-655",
        "msg": "resource.azurerm_virtual_network_gateway[gw].active_active",
        "references": [
          "https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-activeactive-rm-powershell",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network_gateway",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.network/virtualnetworkgateways?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network_gateway[gw]",
          "active_active"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-552",
        "title": "Ensure Diagnostic Setting captures appropriate categories",
        "severity": "low",
        "isIgnored": false,
        "subType": "Monitor",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-552",
        "isGeneratedByCustomRule": false,
        "issue": "Ensure Diagnostic Setting captures appropriate categories",
        "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
        "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each",
        "remediation": {
          "terraform": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "lineNumber": 25,
        "iacDescription": {
          "issue": "Ensure Diagnostic Setting captures appropriate categories",
          "impact": "Not capturing the diagnostic setting categories for appropriate management activities leads to missing important alerts",
          "resolve": "Set log blocks for the categories `Administrative`,`Alert`,`Policy`,`Security` with `enabled` set to `true` for each"
        },
        "publicId": "SNYK-CC-AZURE-552",
        "msg": "resource.azurerm_monitor_diagnostic_setting[gw_pip].log",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_diagnostic_setting#category",
          "https://docs.microsoft.com/en-us/azure/azure-monitor/essentials/resource-manager-diagnostic-settings "
        ],
        "path": [
          "resource",
          "azurerm_monitor_diagnostic_setting[gw_pip]",
          "log"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vpn_gateway/outputs.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vpn_gateway/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vpn_gateway/variables.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vpn_gateway/variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false,
        "autoApproveIgnores": false
      },
      "org": "mbisss2025",
      "orgPublicId": "32dffbe1-779c-4e43-91cc-5faf2c10977a",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "vpn_gateway/versions.tf",
    "projectName": "terraform-azurerm-v3",
    "org": "mbisss2025",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3/vpn_gateway/versions.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/gitclone_terraform/terraform-azurerm-v3",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  }
]