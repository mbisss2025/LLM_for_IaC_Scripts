{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "python/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1",
                    "lines": [
                      {
                        "line": "    return os.path.join(DATAROOT, obj_path)\n",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return safe_join(DATAROOT, obj_path)\n",
                        "lineNumber": 123,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "def _get_index_absolute_path(index):\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return os.path.join(INDEXDIR, index)\n",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "@scope_blueprint.route('/obj/<path:obj_path>')\n",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "def get_object_src_http(obj_path):\n",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path = _get_obj_absolute_path(obj_path)\n",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 133,
                        "lineChange": "none"
                      },
                      {
                        "line": "    headers = Headers()\n",
                        "lineNumber": 134,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # With add_etags=True, conditional=True\n",
                        "lineNumber": 135,
                        "lineChange": "none"
                      },
                      {
                        "line": "    # Flask should be smart enough to do 304 Not Modified\n",
                        "lineNumber": 136,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response = send_file(path,\n",
                        "lineNumber": 137,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "destdir = None\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "if sys.argv[1:]:\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "os.chdir(wdir)\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "tar = src + \".tar\"\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "gz = tar + \".gz\"\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "tgz = src + \".tgz\"\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"source:\", src\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "print \"dest:\", tgz\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.system('gzip -9v %s' % tar)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.rename(gz, tgz)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "if destdir:\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprint \"destination directory:\", destdir\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tos.system('mv %s %s' % (gz, destdir))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1",
                    "lines": [
                      {
                        "line": "import string, random\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import string, random, hashlib, os\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "from werkzeug import secure_filename\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "#Load config file\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "config = {}\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "with open('config.ini', 'r') as file:\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfor line in file.read().splitlines():\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tline = line.split('==')\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tconfig[line[0]] = line[1]\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "app = flask.Flask(__name__) #Initialize our application\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "def genHash(seed): #Generate five letter filenames for our files\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    base = string.ascii_lowercase+string.digits \n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    random.seed(seed)\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    hash_value = \"\"\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    for i in range(5):\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        hash_value += random.choice(base)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return hash_value\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "@app.route('/', methods=['GET', 'POST'])\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "def index():\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif flask.request.method == 'POST':\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tFile upload happens here.\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tThen we redirect to the file itself.\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\"\"\"\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tf = flask.request.files['file']\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\textension = f.filename.split('.')[-1]\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tfilename = genHash(f.filename) + '.' + extension\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tf.save('static/files/%s' % filename)\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher = hashlib.md5() \t\t\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tbuf = f.read()\t\t   \t\t\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tdirname = genHash(hasher.hexdigest())\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\telse:\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 180,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/DOMXSS",
              "name": "DOMXSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "DOMXSS",
                  "Security",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/codice/ddf/commit/a8c54db08a09e8104443fd8531c0f8b6cffda1c7?diff=split#diff-e3bb069f9efbc30d0207a7c690710bc5a3b2acac15a5b8425e622a88e63a41cdL-1",
                    "lines": [
                      {
                        "line": "$('#extramessage').html(decodeURIComponent(param[1].split('+').join(' ')));\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$('#extramessage').text(decodeURIComponent(param[1].split('+').join(' '))).html();\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Drive4ik/simple-tab-groups/commit/d23caa02378845671eb32ee2c43c368f857b47c3?diff=split#diff-efdba41d528998f946ce1103fa57532e3746b2e9b1984cb92c94a2526451aedbL-1",
                    "lines": [
                      {
                        "line": "document.getElementById('title').innerHTML = title || url;\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "document.getElementById('title').innerText = title || url;\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mykter/TagTime-desktop/commit/684351457a3299047fa60563785aa1716df00888?diff=split#diff-821c318e2a22a1360159993ee2168341f78e7567d0b1c9996a76f3e0cfb27b26L-1",
                    "lines": [
                      {
                        "line": "document.getElementById(\"time\").innerHTML =\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    moment(time, 'x').format('HH:mm:ss');\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "document.getElementById(\"time\").textContent = moment(time, 'x').format('HH:mm:ss');\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 227,
                "cwe": [
                  "CWE-79"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[json.dump](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openapi2jsonschema.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 9,
                  "endColumn": 18
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca767233fe66de0dc627654d9e8415dfaeb42046645f3882622c35bf5986acc7",
            "1": "2e8ddaeb.a215d38b.187bf175.139c59a8.175c247b.111d979a.081ac3f4.545e9171.2e8ddaeb.590535da.187bf175.8a4e3f10.145e7f2f.111d979a.f6dc7859.d14165fe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 630,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[json.dump](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openapi2jsonschema.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 25,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "649c8f716621eb6bfce0a0a6b9e44e6e3fc53bb48d9e71b410283ebdf1cf96d9",
            "1": "8c93a3c0.e3d9b656.a26e5c41.b5f6ec27.719ec7b9.ba14daf2.081ac3f4.09d188dd.b4f10813.2414d090.a26e5c41.b5f6ec27.145e7f2f.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 630,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[json.dump](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openapi2jsonschema.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 202,
                  "endLine": 202,
                  "startColumn": 25,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "64a851994ebbb22cbb753667ea18a35cd6e74f46ec1cf816d6161f74b9690ca3",
            "1": "8c93a3c0.e3d9b656.a26e5c41.b5f6ec27.719ec7b9.ba14daf2.081ac3f4.09d188dd.b4f10813.2414d090.a26e5c41.b5f6ec27.145e7f2f.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 630,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/PT",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[json.dump](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openapi2jsonschema.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 218,
                  "endLine": 218,
                  "startColumn": 17,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "886964ac8d0c0a3f621aa8b2d965bf7acf5557e7a1dbb60eec00af6edc7eec09",
            "1": "8c93a3c0.e3d9b656.a26e5c41.b5f6ec27.719ec7b9.ba14daf2.081ac3f4.09d188dd.b4f10813.2414d090.a26e5c41.b5f6ec27.145e7f2f.ba14daf2.a2237efa.f46ed94e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 12,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 202,
                            "endLine": 202,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 43,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 218,
                            "endLine": 218,
                            "startColumn": 35,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 117,
                            "endLine": 117,
                            "startColumn": 12,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 10,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 28,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 27,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "openapi2jsonschema.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 630,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/DOMXSS",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the document location flows into innerHTML, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[the document location](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[innerHTML](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "charts/superset/files/requestctl-generator.html",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 32,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "165248c759d5a55bd2464607fed8b302e9f505d4f5cabbf7c9ff316273f3e41e",
            "1": "cf7733e4.4773f344.37a8c729.6483b32f.9cde7c93.dbe83c7e.83265159.545e9171.b3e4c2e9.7d4b7307.aff85a25.d7919eeb.5bcab2b0.dbe83c7e.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 63,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 63,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 47,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 48,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 17,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 11,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 50,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 22,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 27,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "charts/superset/files/requestctl-generator.html",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 770,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "HTML+ERB",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "PHP",
            "files": 1,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 10,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Ruby",
            "files": 10,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}