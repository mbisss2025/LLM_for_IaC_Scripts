[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/ansible/roles-misc/0.6-ARM-Deployment/templates/empty-deployment.json",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/ansible/roles-misc/0.6-ARM-Deployment/templates/empty-deployment.json",
    "packageManager": "armconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "armconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/ansible/templates/empty-deployment.json",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/ansible/templates/empty-deployment.json",
    "packageManager": "armconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "armconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/scripts/templates/empty-deployment.json",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/scripts/templates/empty-deployment.json",
    "packageManager": "armconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "armconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_deployer/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_deployer/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/imports.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/imports.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/bootstrap/sap_library/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/bootstrap/sap_library/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/imports.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/imports.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_deployer/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_deployer/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/imports.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/imports.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_landscape/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_landscape/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/imports.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/imports.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_library/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_library/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/backend.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/backend.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/imports.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/imports.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/module.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/module.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/tfvar_variables.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/tfvar_variables.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/transform.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/transform.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/run/sap_system/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/run/sap_system/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/app_service.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/app_service.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/bastion.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/bastion.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/configure-deployer.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/configure-deployer.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/firewall.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/firewall.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet_mgmt].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet_mgmt]",
          "ddos_protection_plan"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[deployer].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[deployer]",
          "account_replication_type"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/key_vault.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/key_vault.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[kv_user].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[kv_user]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/nsg-mgmt.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/nsg-mgmt.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/randomid.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/randomid.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_deployer/vm-deployer.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_deployer/vm-deployer.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[deployer].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[deployer]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/ams.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/ams.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/anf.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/anf.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-516",
        "title": "Virtual Network DDoS protection plan disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Network",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-516",
        "isGeneratedByCustomRule": false,
        "issue": "Virtual Network DDoS protection plan disabled",
        "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
        "resolve": "Set `ddos_protection_plan.enable` attribute to `true`",
        "remediation": {
          "terraform": "Set `ddos_protection_plan.enable` attribute to `true`",
          "arm": "Set `properties.enableDdosProtection` to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Virtual Network DDoS protection plan disabled",
          "impact": "Services deployed in the network will not benefit from advanced DDoS protection features such as attack alerting and analytics",
          "resolve": "Set `ddos_protection_plan.enable` attribute to `true`"
        },
        "publicId": "SNYK-CC-AZURE-516",
        "msg": "resource.azurerm_virtual_network[vnet_sap].ddos_protection_plan",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
          "https://docs.microsoft.com/en-us/azure/ddos-protection/ddos-protection-overview"
        ],
        "path": [
          "resource",
          "azurerm_virtual_network[vnet_sap]",
          "ddos_protection_plan"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/iscsi.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/iscsi.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[iscsi].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[iscsi]",
          "admin_password"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[iscsi_password]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[iscsi_password]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[iscsi_pk]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[iscsi_pk]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[iscsi_ppk]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[iscsi_ppk]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[iscsi_username]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[iscsi_username]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/key_vault_sap_landscape.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/key_vault_sap_landscape.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[kv_user].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[kv_user]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[witness_name]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[witness_name]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sid_ppk]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sid_ppk]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[witness_access_key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[witness_access_key]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sid_username]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sid_username]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[deployer_keyvault_user_name]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[deployer_keyvault_user_name]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sid_password]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sid_password]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sid_pk]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sid_pk]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/nsg.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/nsg.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/randomid.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/randomid.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/storage_accounts.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/storage_accounts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-148",
        "title": "Storage Account does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-148",
        "isGeneratedByCustomRule": false,
        "issue": "Azure Storage Account does not enforce HTTPS traffic only",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set `enable_https_traffic_only` attribute to `true`",
        "remediation": {
          "terraform": "Set `enable_https_traffic_only` attribute to `true`",
          "arm": "Set `properties.supportsHttpsTrafficOnly` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce HTTPS traffic only",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `enable_https_traffic_only` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-148",
        "msg": "resource.azurerm_storage_account[install].enable_https_traffic_only",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[install]",
          "enable_https_traffic_only"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[storage_bootdiag].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[storage_bootdiag]",
          "account_replication_type"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[witness_storage].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[witness_storage]",
          "account_replication_type"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account[transport].network_rules",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[transport]",
          "network_rules"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-148",
        "title": "Storage Account does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-148",
        "isGeneratedByCustomRule": false,
        "issue": "Azure Storage Account does not enforce HTTPS traffic only",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set `enable_https_traffic_only` attribute to `true`",
        "remediation": {
          "terraform": "Set `enable_https_traffic_only` attribute to `true`",
          "arm": "Set `properties.supportsHttpsTrafficOnly` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce HTTPS traffic only",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `enable_https_traffic_only` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-148",
        "msg": "resource.azurerm_storage_account[transport].enable_https_traffic_only",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[transport]",
          "enable_https_traffic_only"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[install].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[install]",
          "account_replication_type"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account[install].network_rules",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[install]",
          "network_rules"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[transport].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[transport]",
          "account_replication_type"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account[witness_storage].network_rules",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[witness_storage]",
          "network_rules"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/subnets.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/subnets.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_landscape/vm.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_landscape/vm.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[utility_vm].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[utility_vm]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/dns.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/dns.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/key_vault.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/key_vault.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/keyvault_endpoint.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/keyvault_endpoint.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/randomid.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/randomid.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/storage_accounts.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/storage_accounts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account_network_rules[storage_tfstate]",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account_network_rules[storage_tfstate]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account_network_rules[storage_sapbits]",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account_network_rules[storage_sapbits]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_library/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_library/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/keyvault.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/keyvault.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/output.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/output.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/ppg-avset.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/ppg-avset.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/resourcegroup.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/resourcegroup.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_namegenerator/vm.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_namegenerator/vm.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/vm-anydb.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/vm-anydb.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[dbserver].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[dbserver]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/anydb_node/vm-observer.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/anydb_node/vm-observer.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[observer].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[observer]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/disk_logic.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/disk_logic.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/nsg-app-subnet.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/nsg-app-subnet.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/nsg-webdisp.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/nsg-webdisp.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-app.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-app.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[app].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[app]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-scs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-scs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[scs].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[scs]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-webdisp.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/app_tier/vm-webdisp.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[web].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[web]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/anf.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/anf.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/key_vault_sap_system.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/key_vault_sap_system.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[auth_username]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[auth_username]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[auth_password]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[auth_password]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sdu_private_key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sdu_private_key]"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-AZURE-625",
        "title": "Key Vault soft deletion not set to 90 days",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-625",
        "isGeneratedByCustomRule": false,
        "issue": "Key Vault soft deletion not set to 90 days",
        "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
        "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
        "remediation": {
          "terraform": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention",
          "arm": "Set `properties.enableSoftDelete` to `true` and `softDeleteRetentionInDays` to `90`, or remove the attributes entirely to use enabled soft delete default with 90 days retention"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Key Vault soft deletion not set to 90 days",
          "impact": "Accidentally deleted vaults and vault items are not recoverable and might lead to data loss",
          "resolve": "Set `soft_delete_retention_days` to `90`, or remove the attribute entirely to use 90 days default retention"
        },
        "publicId": "SNYK-CC-AZURE-625",
        "msg": "resource.azurerm_key_vault[sid_keyvault_user].soft_delete_retention_days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults?tabs=bicep"
        ],
        "path": [
          "resource",
          "azurerm_key_vault[sid_keyvault_user]",
          "soft_delete_retention_days"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-174",
        "title": "Vault secret expiration date not set",
        "severity": "low",
        "isIgnored": false,
        "subType": "Key Vault",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-174",
        "isGeneratedByCustomRule": false,
        "issue": "Expiration date is not set for Azure Vault secret",
        "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
        "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
        "remediation": {
          "terraform": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`",
          "arm": "Set `properties.attributes.exp` attribute to date in the future time in seconds, e.g. `1658319657`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Expiration date is not set for Azure Vault secret",
          "impact": "Secret rotation will not be enforced, which can lead to use of stale or compromised credentials",
          "resolve": "Set `expiration_date` attribute to date in the future, with format `Y-m-d'T'H:M:S'Z'`, e.g.`2019-01-01T01:02:03Z`"
        },
        "publicId": "SNYK-CC-TF-174",
        "msg": "resource.azurerm_key_vault_secret[sdu_public_key]",
        "references": [
          "https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates"
        ],
        "path": [
          "resource",
          "azurerm_key_vault_secret[sdu_public_key]"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/nsgs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/nsgs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/randomid.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/randomid.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/storage_accounts.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/storage_accounts.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-AZURE-649",
        "title": "Storage Account geo-replication disabled",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AZURE-649",
        "isGeneratedByCustomRule": false,
        "issue": "Storage Account geo-replication disabled",
        "impact": "Data might be exposed to the risk of loss or unavailability",
        "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
        "remediation": {
          "terraform": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`",
          "arm": "Set `sku.name` to either `Standard_GRS`,`Standard_GZRS`,`Standard_RAGRS` or `Standard_RAGZRS`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Storage Account geo-replication disabled",
          "impact": "Data might be exposed to the risk of loss or unavailability",
          "resolve": "Set `sku.name` to either `GRS`,`RAGRS`,`GZRS` or `RAGZRS`"
        },
        "publicId": "SNYK-CC-AZURE-649",
        "msg": "resource.azurerm_storage_account[sapmnt].account_replication_type",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy",
          "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
          "https://docs.microsoft.com/en-us/azure/templates/microsoft.storage/storageaccounts?tabs=json"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[sapmnt]",
          "account_replication_type"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "severity": "low",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "isGeneratedByCustomRule": false,
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
        "remediation": {
          "terraform": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`",
          "arm": "Set `properties.networkAcls.bypass` attribute to `'Azure Services'. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Trusted network services cannot be whitelisted via network rules. When any network rule is configured, the trusted services will not be able to access the storage account. Note, by default there is no network rule configured.",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']. Ensure to add appropriate rules for your application alongside the proposed remediation step. Setting this remediation without any other rules will block all network access to the storage account except for Microsoft Trusted Services.`"
        },
        "publicId": "SNYK-CC-TF-172",
        "msg": "resource.azurerm_storage_account[sapmnt].network_rules",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[sapmnt]",
          "network_rules"
        ],
        "compliance": []
      },
      {
        "id": "SNYK-CC-TF-148",
        "title": "Storage Account does not enforce HTTPS",
        "severity": "medium",
        "isIgnored": false,
        "subType": "Storage",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-148",
        "isGeneratedByCustomRule": false,
        "issue": "Azure Storage Account does not enforce HTTPS traffic only",
        "impact": "The content could be intercepted and manipulated in transit",
        "resolve": "Set `enable_https_traffic_only` attribute to `true`",
        "remediation": {
          "terraform": "Set `enable_https_traffic_only` attribute to `true`",
          "arm": "Set `properties.supportsHttpsTrafficOnly` attribute to `true`"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce HTTPS traffic only",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `enable_https_traffic_only` attribute to `true`"
        },
        "publicId": "SNYK-CC-TF-148",
        "msg": "resource.azurerm_storage_account[sapmnt].enable_https_traffic_only",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer"
        ],
        "path": [
          "resource",
          "azurerm_storage_account[sapmnt]",
          "enable_https_traffic_only"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/subnets.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/subnets.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/vm-anchor.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/common_infrastructure/vm-anchor.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[anchor].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[anchor]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/anf.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/anf.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/avg.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/avg.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/infrastructure.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/infrastructure.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/hdb_node/vm-hdb.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/hdb_node/vm-hdb.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "id": "SNYK-CC-TF-263",
        "title": "Virtual machine is configured with password authentication for admin",
        "severity": "high",
        "isIgnored": false,
        "subType": "Compute",
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "isGeneratedByCustomRule": false,
        "issue": "Administrative password has been set in configuration file",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "remediation": {
          "terraform": "Set `admin_ssh_key` attribute instead of password authentication",
          "arm": "Set `properties.osProfile.linuxConfiguration.ssh` attribute instead of password authentication"
        },
        "lineNumber": -1,
        "iacDescription": {
          "issue": "Administrative password has been set in configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "publicId": "SNYK-CC-TF-263",
        "msg": "resource.azurerm_linux_virtual_machine[vm_dbnode].admin_password",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[vm_dbnode]",
          "admin_password"
        ],
        "compliance": []
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/dns_records.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/dns_records.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/inventory.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/inventory.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/naming.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/naming.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/outputs.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/outputs.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/providers.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/providers.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/variables_global.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/variables_global.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": {
        "adminOnly": false,
        "reasonRequired": false,
        "disregardFilesystemIgnores": false
      },
      "org": "mbissine2022",
      "orgPublicId": "a4e8e0af-6ef6-42f7-ba8c-edc4687b1910",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "deploy/terraform/terraform-units/modules/sap_system/output_files/variables_local.tf",
    "projectName": "sap-automation",
    "org": "mbissine2022",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "/home/mbissine/snyk_ansible/sap-automation/deploy/terraform/terraform-units/modules/sap_system/output_files/variables_local.tf",
    "packageManager": "terraformconfig",
    "path": "/home/mbissine/snyk_ansible/sap-automation",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  }
]