{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "DisablePoweredBy",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/lucasweng/yelp-camp/commit/f4e907734aea3ec98000d61f5d49c729a95cb77c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "      app            = express(),\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "      bodyParser     = require(\"body-parser\"),\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "      mongoose       = require(\"mongoose\"),\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "      helmet         = require(\"helmet\"),\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "      flash          = require(\"connect-flash\"),\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "      session        = require(\"express-session\"),\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "      moment         = require(\"moment\"),\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "      passport       = require(\"passport\"),\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "      LocalStrategy  = require(\"passport-local\"),\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "      methodOverride = require(\"method-override\"),\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "      User           = require(\"./models/user\");\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "// requiring routes     \n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "const indexRoute      = require(\"./routes/index\"),\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "      campgroundRoute = require(\"./routes/campgrounds\"),\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "      commentRoute    = require(\"./routes/comments\"),\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "      userRoute       = require(\"./routes/user\"),\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "      passwordRoute   = require(\"./routes/password\");\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "// connect to the DB\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "let url = process.env.DATABASEURL || \"mongodb://localhost/yelp_camp_v13\"; // fallback in case global var not working\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "mongoose.connect(url, {useMongoClient: true});\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set(\"view engine\", \"ejs\");\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/infor-design/enterprise/commit/20888f176d6bccc41b009a54b2d47a2b29845db3?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1",
                    "lines": [
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const BASE_PATH = process.env.BASEPATH || '/';\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "const packageJSON = getJSONFile('../../../package.json');\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'html');\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.resolve(__dirname, 'views'));\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('basepath', BASE_PATH);\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.disable('x-powered-by');\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/galtenberg/evernote-random/commit/32109271055df8a60bf4dafe289b717dbb950305?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L-1",
                    "lines": [
                      {
                        "line": "const csp = require('helmet-csp')\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express()\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "// parse application/x-www-form-urlencoded\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }))\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "// json parser\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json())\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Serve static assets\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static(path.resolve(__dirname, '..', 'build')))\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Re-enable on glitch.com\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Always return the main index.html, so react-router render the route in the client\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "//app.get('*', (req, res) => {\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  //res.sendFile(path.resolve(__dirname, '..', 'build', 'index.html'));\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "//})\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieSession({\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  name: 'evernoteSolitaire',\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secret: 'evernote-sandbox-secret',\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  maxAge: 30 * 24 * 60 * 60 * 1000 // 1 month\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "}))\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "//require('./api/experiment')(app)\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "require('./api/auth')(app)\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "require('./api/notes')(app)\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "const PORT = process.env.PORT || 8000\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(bodyParser.json({\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "  type: ['json', 'application/csp-report']\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "}))\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.post('/report-violation', function (req, res) {\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (req.body) {\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log('CSP Violation: ', req.body)\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "  } else {\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log('CSP Violation: No data received!')\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(204).end()\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "})\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "const PORT = 8000 //process.env.PORT || 8000\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(csp({\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "  directives: {\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "    defaultSrc: [\"'self'\"],\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "    scriptSrc: [\"'unsafe-inline'\"],\n",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "    styleSrc: [\"'unsafe-inline'\"],\n",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "    reportUri: '/report-violation',\n",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    upgradeInsecureRequests: true\n",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "  },\n",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "  reportOnly: false,\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "  loose: true,\n",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "  setAllHeaders: true,\n",
                        "lineNumber": 58,
                        "lineChange": "added"
                      },
                      {
                        "line": "  browserSniff: false\n",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "}))\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 416,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "javascript/FormatString",
              "name": "FormatString",
              "shortDescription": {
                "text": "Use of Externally-Controlled Format String"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSimilar to SQL injection and other injection-type weaknesses, a format string weakness is one in which the user is able to control the application's execution by supplying unexpected input. In this case, the input string is passed directly from the user to a format function such as printf (this weakness appears primarily in C-type languages).\n\nFormat functions were originally designed to provide more flexible output options through specified parameters. However, if input is passed directly from the user to the site or application without sanitization, an attacker may add special characters that will then be interpreted as formatting parameters, causing the application to behave unpredictably, read/write in unauthorized memory locations, crash, or even permit the attacker to execute commands. Since format functions with this weakness may behave exactly like properly coded format functions (until the weakness is exploited), it may be difficult to identify with standard testing.\n\n## Best practices for prevention\n* Implement constraints for user input wherever possible (permitted length, special characters, etc.).\n* Always perform input validation; never pass user data directly to the application.\n* Avoid single-parameter calls to format functions. Always pass a format-specifying parameter, ideally one that is not user-controlled, to the format function in addition to the text output. Never allow user-controlled input to be the only parameter passed.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "FormatString",
                  "Security",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eric19960304/Ridesharing-App-For-HK-Back-End/commit/3c33b9f2e7d58536a3a78e1fdb9c21b7d58b93dd?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1",
                    "lines": [
                      {
                        "line": "const printRequest = (req, res, next) => { console.log(req.url + ': ', req.body); next(); };\n",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const printRequest = (req, res, next) => { console.log(req.url); next(); };\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/QuixoticScientist/whiteboard/commit/5f50f602c55e13a6f6435b1554bfa284c18c97b7?diff=split#diff-873b963592b895ad3bbbc2c62cfc1d7b8d04783b31861228af8a62045e40ed04L-1",
                    "lines": [
                      {
                        "line": "socket.on('moveShape', function (data) {\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "  console.log(data, 'moveShape')\n",
                        "lineNumber": 50,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  rooms.editShape(data, socket);\n",
                        "lineNumber": 51,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  rooms.moveShape(data, socket);\n",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "  socket.to(this.room).emit('shapeMoved', data);\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/alibaba/kiwi/commit/9dd42659b10ad81b016a09d7c9eb7933e61f018a?diff=split#diff-27def4a02a5fbd6b0d7350fb77523b7d48c441da80b3278ab476fdf4aa4fd6adL-1",
                    "lines": [
                      {
                        "line": "const defaultLang = getCurrentLang();\n",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "console.log(defaultLang, 'defaultLang');\n",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "let curLang;\n",
                        "lineNumber": 65,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 4,
                "cwe": [
                  "CWE-134"
                ]
              }
            },
            {
              "id": "javascript/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mafintosh/hyperlog/commit/d93cc65e485d740face1dacffa66dbcf03bcc7c3?diff=split#diff-b29a862e995b5e16d1763a35604cec4f13f3ca08bb9318d8f7ccfa24b757f7e0L-1",
                    "lines": [
                      {
                        "line": "return crypto.createHash('sha1')\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return crypto.createHash('sha256')\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/raphael-group/magi/commit/1e1ed6435a97858e38d0cab962d7e248710f60e1?diff=split#diff-a4bd8e7c606b00ad2f2d6eeb95ba96714ece5c8b1266c2b503f3531b12d46257L-1",
                    "lines": [
                      {
                        "line": "hasher = crypto.createHash('md5').update(url),\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hasher = crypto.createHash('RIPEMD-64').update(url),\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/steilerDev/homebridge-openhab2-complete/commit/6e92ef40f991cc372b701390945e0e5bbeb71016?diff=split#diff-34bbd467b1ab0e3497ce244b09d2bfbc4ab192303dd90b13603baf6711b522dfL-1",
                    "lines": [
                      {
                        "line": "function generate(name) {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const sha1sum = crypto.createHash('sha1');\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    sha1sum.update(name);\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "function generate(name, type) {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const hash = crypto.createHash('sha512');\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "    hash.update(name);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "    hash.update(type);\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 134,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/ServerLeak",
              "name": "ServerLeak",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n* Encrypt data at all times, whether in transit or at rest.\n* When transporting data, always use a secure protocol such as TLS.\n* Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n* Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n* Ensure that caching is disabled for all transactions involving sensitive information.\n* Store passwords with secure, salted hashing functions.\n* Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "ServerLeak",
                  "Security",
                  "ErrorMessageOutput",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/gaoxiaoliangz/readr/commit/8f3cc39ea75d8873c4f0a9fa200f3d7c06eb4fbb?diff=split#diff-b32d091414fa2a61cc7df6fa5333e2df7c3fba3d093e7fc022d020983040df70L-1",
                    "lines": [
                      {
                        "line": "}, err => {\n",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const statusCode = err.statusCode || 500\n",
                        "lineNumber": 58,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const htmlString = err.htmlString || err.message\n",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  })\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "} catch (error) {\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const errorMsg = isProd ? PROD_ERROR_MSG : error.message\n",
                        "lineNumber": 62,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const htmlString = render500(errorMsg, isProd)\n",
                        "lineNumber": 63,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/shock-lee/mix-api/commit/1c301459d2dff2d32995fe7ed4168d9cef9f4061?diff=split#diff-fce178fd04f00c87abe19ae834d3b46a0a3ed66cfbd77f9e3c83cddadf026c73L-1",
                    "lines": [
                      {
                        "line": "res.send(err);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.send(response);\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/djenriquez/vault-ui/commit/e3f4146be29dd5cf90a865d5c03277c1225811a3?diff=split#diff-a1cb18479d10d3a9a08c88c4eefa33add2e4fc9337e22c5a2ac3f0bb1829687fL-1",
                    "lines": [
                      {
                        "line": "res.status(err.response.status).send(err.response);\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (err.response.status === 403) {\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.status(err.response.status).send(\"You are not authorized to access these resources.\");\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "} else {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.status(err.response.status).send(err.message);\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 73,
                "cwe": [
                  "CWE-200"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/bitcoin/api/src/app.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3d1629bea6ad6b08e744aadaecb472f0b97a22766f0cdc6d8f7434af1f36a2f4",
            "1": "ae77ea27.883ce888.8b18f948.d7919eeb.ac82cb7b.5fce695c.ea4b1c47.89d75565.630e4ed1.4773f344.44eded10.d7919eeb.79a7d027.5fce695c.69fd0700.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/bitcoin/api/src/app.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 538,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/ethereum/api/src/app.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "21dda93831f1216ef0a77fee43af6d5dcad91970df2db25e8cf7b3d946884686",
            "1": "ae77ea27.883ce888.8b18f948.d7919eeb.ac82cb7b.5fce695c.ea4b1c47.89d75565.630e4ed1.4773f344.44eded10.d7919eeb.79a7d027.5fce695c.69fd0700.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/ethereum/api/src/app.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 538,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/packages/blockbook/src/app.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1d3074167867bcef2c94af307eafc6ead1f5da19da909432ea200c23e1086d0",
            "1": "ae77ea27.883ce888.8b18f948.d7919eeb.ac82cb7b.5fce695c.ea4b1c47.89d75565.0345acc7.4773f344.44eded10.d7919eeb.79a7d027.5fce695c.60d372c8.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/packages/blockbook/src/app.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 538,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/FormatString",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized user input from the request URL flows into warn, where it is used as a format string. This may allow a user to inject unexpected content into an application log.",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used as a format string. This may allow a user to inject unexpected content into an application log.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3)",
              "[warn](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/common/api/src/middleware.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "startColumn": 13,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a817c1d81bfad2b21f2394ff01a49cb0ba69c7c44fc638308ca6b60ba0e68431",
            "1": "cf7733e4.4773f344.126beb45.d4f443f4.ef9f7d82.d40a5762.cd61fc56.25f903e1.630e4ed1.1d48d0df.6b72e2fc.d7919eeb.79a7d027.d40a5762.83265159.ef6bffc1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 53,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 49,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 18,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 9,
                            "endLine": 9,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[crypto.createHash](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "go/pulumi/src/api.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 16,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd0ecae2377fff025ee6992dc272b49294636b590626ecb8b2cf0574f1be12f2",
            "1": "e0fda459.b6e32c83.8b18f948.d7919eeb.ef9f7d82.82ca542b.24e58b06.041df0b3.9ff0579e.b6e32c83.72aa1700.d7919eeb.ef9f7d82.5fce695c.24e58b06.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "go/pulumi/src/api.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "go/pulumi/src/api.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 388,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[crypto.createHash](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/common/pulumi/src/api.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 16,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f265639ec444f82671eb36cc519e758b02217b3a9901444a9a5359e317d9377",
            "1": "e0fda459.b6e32c83.8b18f948.d7919eeb.ef9f7d82.82ca542b.24e58b06.041df0b3.9ff0579e.b6e32c83.72aa1700.d7919eeb.ef9f7d82.5fce695c.24e58b06.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/pulumi/src/api.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/pulumi/src/api.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 388,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "crypto.createHash hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[crypto.createHash](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/common/pulumi/src/hasher.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 16,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3ea82d056f3dc660da4b920e0f329dfa3a708555bcd6f01fbf6a7ae2a8aa4e5",
            "1": "e0fda459.b6e32c83.8b18f948.d7919eeb.ef9f7d82.82ca542b.24e58b06.041df0b3.9ff0579e.b6e32c83.72aa1700.d7919eeb.ef9f7d82.5fce695c.24e58b06.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/pulumi/src/hasher.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/pulumi/src/hasher.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 388,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "javascript/ServerLeak",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "An error object flows to send and is leaked to the attacker. This may disclose important information about the application to an attacker.",
            "markdown": "{0} {1} to {2} and is leaked to the attacker. This may disclose important information about the application to an attacker.",
            "arguments": [
              "[An error object](0)",
              "[flows](1)",
              "[send](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node/coinstacks/common/api/src/middleware.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 19,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df91d6b4321f44436ec7f34d3a72db234c01549351c15817ef480773e0aa1bca",
            "1": "48bfe4d5.4773f344.a32ed1a1.d7919eeb.79a7d027.37110c89.9d5c5f32.d5de5421.67e7998e.1d48d0df.6b72e2fc.d7919eeb.79a7d027.81c05e24.83265159.d5de5421"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 24,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "node/coinstacks/common/api/src/middleware.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 563,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "Go",
            "files": 35,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 2,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 7,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "TypeScript",
            "files": 46,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}