{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "cpp/BufferOverflow",
              "name": "BufferOverflow",
              "shortDescription": {
                "text": "Buffer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array \u2014 hence the name overflow \u2014 and corrupt adjacent memory. Like most bugs, a buffer overflow doesn\u2019t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability \u2014 typically by a malicious actor who wants to gain access or information. In this post, we\u2019ll explain how a buffer overflow occurs and show you how to protect your C++ code from these attacks. Buffer overflows generally result in program crashes, however if the data that would overflow is user controlled, an attacker may cause more damage including deny of service attacks, infinite loops, or even remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "BufferOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iiitv/algos/commit/f55b97c0702e5416ecda62b33fabd69eb2b2174f?diff=split#diff-075b726a53851ef1448de2c45d79110a51e67d7ffbc860414764b9d73a972f29L-1",
                    "lines": [
                      {
                        "line": "scanf(\"%s\", str1);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "scanf(\"%s\", str2);\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(str1, \"mathematicians study maths\");\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "strcpy(str2, \"people study matrix multiplication\");\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/howerj/dbcc/commit/faddbb2e5d7f7dc157df17953b32971df729f4a9?diff=split#diff-a0cb465674c1b01a07d361f25a0ef2b0214b7dfe9412b7777f89add956da10ecL-1",
                    "lines": [
                      {
                        "line": "\toutpath = allocate(strlen(outpath) + strlen(outdir) + 2 /* '/' + '\\0'*/);\n",
                        "lineNumber": 216,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, outdir);\n",
                        "lineNumber": 217,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, \"/\");\n",
                        "lineNumber": 218,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, argv[i]);\n",
                        "lineNumber": 219,
                        "lineChange": "removed"
                      },
                      {
                        "line": "size_t outpath_size = strlen(outpath) + strlen(outdir) + 2; /* '/' + '\\0'*/\n",
                        "lineNumber": 217,
                        "lineChange": "added"
                      },
                      {
                        "line": "\toutpath = allocate(outpath_size);\n",
                        "lineNumber": 218,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, outdir);\n",
                        "lineNumber": 219,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, \"/\");\n",
                        "lineNumber": 220,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, argv[i]);\n",
                        "lineNumber": 221,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uclouvain/openjpeg/commit/8715ce2749d1e5a1e9c77646e9a2ddf0ec82bac9?diff=split#diff-c1330160924cae174cdacdb4b0a6ab7561d56a377c9e44dc867b24030ceda35aL-1",
                    "lines": [
                      {
                        "line": "  char output_file[64];\n",
                        "lineNumber": 98,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const char *output_file;\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  /* should be test_tile_encoder 3 2000 2000 1000 1000 8 tte1.j2k */\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if( argc == 9 )\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    num_comps = (OPJ_UINT32)atoi( argv[1] );\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_width = atoi( argv[2] );\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_height = atoi( argv[3] );\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_width = atoi( argv[4] );\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_height = atoi( argv[5] );\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    comp_prec = atoi( argv[6] );\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    irreversible = atoi( argv[7] );\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strcpy(output_file, argv[8] );\n",
                        "lineNumber": 110,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    output_file = argv[8];\n",
                        "lineNumber": 110,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 139,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "cpp/BufferOverflow/test",
              "name": "BufferOverflow/test",
              "shortDescription": {
                "text": "Buffer Overflow"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array \u2014 hence the name overflow \u2014 and corrupt adjacent memory. Like most bugs, a buffer overflow doesn\u2019t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability \u2014 typically by a malicious actor who wants to gain access or information. In this post, we\u2019ll explain how a buffer overflow occurs and show you how to protect your C++ code from these attacks. Buffer overflows generally result in program crashes, however if the data that would overflow is user controlled, an attacker may cause more damage including deny of service attacks, infinite loops, or even remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "BufferOverflow",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/iiitv/algos/commit/f55b97c0702e5416ecda62b33fabd69eb2b2174f?diff=split#diff-075b726a53851ef1448de2c45d79110a51e67d7ffbc860414764b9d73a972f29L-1",
                    "lines": [
                      {
                        "line": "scanf(\"%s\", str1);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "scanf(\"%s\", str2);\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(str1, \"mathematicians study maths\");\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "strcpy(str2, \"people study matrix multiplication\");\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/howerj/dbcc/commit/faddbb2e5d7f7dc157df17953b32971df729f4a9?diff=split#diff-a0cb465674c1b01a07d361f25a0ef2b0214b7dfe9412b7777f89add956da10ecL-1",
                    "lines": [
                      {
                        "line": "\toutpath = allocate(strlen(outpath) + strlen(outdir) + 2 /* '/' + '\\0'*/);\n",
                        "lineNumber": 216,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, outdir);\n",
                        "lineNumber": 217,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, \"/\");\n",
                        "lineNumber": 218,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstrcat(outpath, argv[i]);\n",
                        "lineNumber": 219,
                        "lineChange": "removed"
                      },
                      {
                        "line": "size_t outpath_size = strlen(outpath) + strlen(outdir) + 2; /* '/' + '\\0'*/\n",
                        "lineNumber": 217,
                        "lineChange": "added"
                      },
                      {
                        "line": "\toutpath = allocate(outpath_size);\n",
                        "lineNumber": 218,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, outdir);\n",
                        "lineNumber": 219,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, \"/\");\n",
                        "lineNumber": 220,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tstrcat_s(outpath, outpath_size, argv[i]);\n",
                        "lineNumber": 221,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uclouvain/openjpeg/commit/8715ce2749d1e5a1e9c77646e9a2ddf0ec82bac9?diff=split#diff-c1330160924cae174cdacdb4b0a6ab7561d56a377c9e44dc867b24030ceda35aL-1",
                    "lines": [
                      {
                        "line": "  char output_file[64];\n",
                        "lineNumber": 98,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const char *output_file;\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  /* should be test_tile_encoder 3 2000 2000 1000 1000 8 tte1.j2k */\n",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if( argc == 9 )\n",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "    num_comps = (OPJ_UINT32)atoi( argv[1] );\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_width = atoi( argv[2] );\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "    image_height = atoi( argv[3] );\n",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_width = atoi( argv[4] );\n",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "    tile_height = atoi( argv[5] );\n",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "    comp_prec = atoi( argv[6] );\n",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "    irreversible = atoi( argv[7] );\n",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strcpy(output_file, argv[8] );\n",
                        "lineNumber": 110,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    output_file = argv[8];\n",
                        "lineNumber": 110,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 139,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow/test",
              "name": "IntegerOverflow/test",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            },
            {
              "id": "cpp/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/intel-isl/Open3D/commit/ebc639913ff128060fd2def3446f6caa14d10859?diff=split#diff-20a35acdf4289c8de90812539cbe0547d61890ab0415c544171ed8acd6833056L-1",
                    "lines": [
                      {
                        "line": "FILE *f = fopen(binname.c_str(), \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *f = utility::filesystem::FOpen(binname, \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "PT",
                  "Security",
                  "InTest",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/awslabs/aws-c-compression/commit/25cd4134377b6e2ed787d42a3a221582bdc1fa57?diff=split#diff-7be55cd889d1d7041835371d751f0ab01f17a3bb46e6d94acdcbf92473244ba2L-1",
                    "lines": [
                      {
                        "line": "FILE *file = fopen(input_path, \"r\");\n",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *file = aws_fopen(input_path, \"r\");\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qpdf/qpdf/commit/ac4deac1873ca1bb570ffd479ed2cc1010762f89?diff=split#diff-86ce344dc69debd78135a45c16f074eecc538658a36ca4dab21839bcd330dbaeL-1",
                    "lines": [
                      {
                        "line": "    FILE* infile = fopen(infilename, \"rb\"); // XXXX\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (infile == 0)\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    {\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tstd::cerr << \"can't open \" << infilename << std::endl;\n",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\texit(2);\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FILE* infile = QUtil::safe_fopen(infilename, \"rb\");\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/intel-isl/Open3D/commit/ebc639913ff128060fd2def3446f6caa14d10859?diff=split#diff-20a35acdf4289c8de90812539cbe0547d61890ab0415c544171ed8acd6833056L-1",
                    "lines": [
                      {
                        "line": "FILE *f = fopen(binname.c_str(), \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "removed"
                      },
                      {
                        "line": "FILE *f = utility::filesystem::FOpen(binname, \"wb\");\n",
                        "lineNumber": 69,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "cpp/UnsafeFunctionStringHandling",
              "name": "UnsafeFunctionStringHandling",
              "shortDescription": {
                "text": "Potential buffer overflow from usage of unsafe function"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nA potential buffer overflow issue was identified via use of an insecure function. Use of this function could lead to memory corruption attacks if arbitrary user input (which has not been validated in terms of its length) is allowed to flow into it. It is advisable to use the safer alternative instead, which is less prone to memory corruption issues.\n\nA buffer overflow is a type of runtime error that allows a program to write past the end of a buffer or array \u2014 hence the name overflow \u2014 and corrupt adjacent memory. Like most bugs, a buffer overflow doesn\u2019t manifest at every program execution. Instead, the vulnerability is triggered under certain circumstances, such as unexpected user input.\n\nA buffer overflow attack is the exploitation of a buffer overflow vulnerability \u2014 typically by a malicious actor who wants to gain access or information, or trigger a crash to deny service to others. Buffer overflows generally result in program crashes, however under certain circumstances, an attacker may be able to trigger remote code execution.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "UnsafeFunctionStringHandling",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/root-project/root/commit/181bbef8d3999fb240c9b4c4c3a2362e74641aad?diff=split#diff-318d614eb480fcc82d94d700c94ab416d68a1dff5e8fb957ae94a6cb9b6793e1L-1",
                    "lines": [
                      {
                        "line": "char line[128];\n",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "strcpy(line,GetMethod());\n",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strncpy(line,GetMethod(),127);\n",
                        "lineNumber": 104,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/nurdism/neko/commit/56bd6acf100f37ca12559f8def619e98f919af13?diff=split#diff-37254a1dc0e29dffd313e2e005c182ba8cd9dd747a0d053a1b597705846a388aL-1",
                    "lines": [
                      {
                        "line": "char cmd[12] = \"setxkbmap \";\n",
                        "lineNumber": 170,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcat(cmd, layout);\n",
                        "lineNumber": 171,
                        "lineChange": "removed"
                      },
                      {
                        "line": "char cmd[13] = \"setxkbmap \";\n",
                        "lineNumber": 170,
                        "lineChange": "added"
                      },
                      {
                        "line": "strncat(cmd, layout, 2);\n",
                        "lineNumber": 171,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/alisw/AliRoot/commit/f600fc614f90fcec43863a247fa68a0b25df501f?diff=split#diff-549671f05f93723480a35c85ff7681323ccf6764ef1b258da9195d9fa53b9803L-1",
                    "lines": [
                      {
                        "line": "sprintf(runNbFileName,\"%s/run%u\",ddlDir,aliHeader->Get(\"RunNb\"));\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "snprintf(runNbFileName,sizeof(runNbFileName),\"%s/run%u\",ddlDir,aliHeader->Get(\"RunNb\"));\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 33,
                "cwe": [
                  "CWE-122"
                ]
              }
            },
            {
              "id": "cpp/UseAfterFree",
              "name": "UseAfterFree",
              "shortDescription": {
                "text": "Use After Free"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nMemory allocated on the heap is released, and then subsequently referenced. This can cause a program to crash, use unexpected values, or execute code.\n\n\n## Best practices for prevention\n* Store a new value in pointers immediately after `free()`\n  * The new value can be:\n    * a constant that can be checked (ie, `NULL`), or\n    * a reference to another valid object.\n\n\n## References\n\n* [CERT MEM01-C](https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152148)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "UseAfterFree",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jlmucb/cloudproxy/commit/4437ebf34a64c0ddadfbcdf834964c1f7680678b?diff=split#diff-fd44eb004baf0c6cd208492e38bd37d52740af1725f131e3058575d98686b723L-1",
                    "lines": [
                      {
                        "line": "out->assign((const char*)buf, n);\n",
                        "lineNumber": 73,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/feiskyer/linux-perf-examples/commit/5c167c49f2fa8b11d7d4229f1d7de703472280de?diff=split#diff-4ac62d0e3e70045c820c45da8b94803e9a4ad44b254a604acfda40354db4a6aeL-1",
                    "lines": [
                      {
                        "line": "n1 = *v;\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "free(v);\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, *v);\n",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "printf(\"%dth => %lld\\n\", n, n1);\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/asfadmin/ASF_MapReady/commit/9eb2f300779a07e77127389e43421a6ca58a092c?diff=split#diff-6f0d067854363ef95657748d5a96a50d5130d0cfe620351ab6c8ae1a17933b32L-1",
                    "lines": [
                      {
                        "line": "FREE(out_file);\n",
                        "lineNumber": 2686,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 104,
                "cwe": [
                  "CWE-416"
                ]
              }
            },
            {
              "id": "python/InsecureFilePermissions",
              "name": "InsecureFilePermissions",
              "shortDescription": {
                "text": "Insecure File Permissions"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nEnsuring correct file and directory permissions is one of the most critical security tasks for any organization. It takes careful planning and ongoing tracking for every single user (or group of users) within the application. When this weakness is present, it means that due to a misconfiguration, the wrong permission level is applied for a particular resource. This could give a user with a relatively low access level (such as any authenticated user or even an anonymous user) access to sensitive information. Once an attacker gains access, they can delete or modify it, sell it, or hold it for ransom. They can even potentially run executable files on the server.\n\nIn certain regulated industries such as healthcare and finance, unpatched vulnerabilities stemming from this weakness can lead to fines for non-compliance. And in all cases, breaches due to this weakness can quickly lead to a loss of reputation and low user confidence in the security of the application. Therefore, careful design and planning are essential for validating security policies and ensuring their implementation and maintenance.\n\n## Best practices for prevention\n* Classify application functionality according to privilege level: anonymous, normal, privileged, and administrative; then define user groups and roles and the access required by each to create a comprehensive security policy that is simpler to implement.\n* Make no assumptions about the environment in which the application will run (for example, single user, on-premises, user types, UI, etc.).\n* Never create applications with loose default security settings. Often, businesses rely on administrators to tighten security following installation; this is a weak security tactic. Implement restrictive security settings by default and open access to securely authenticated users as needed.\n* Ensure secure-channel communication for all API-based interactions.\n* Implement multifactor authentication and familiarize all developers with safe cookie-handling practices to ensure session-level security.\n* Encrypt all stored sensitive data such as credentials or configuration information to minimize the potential for harm if this data is breached.\n* Run code in a sandbox or jail, if possible; however, this approach does not prevent all problems and should be used in combination with some or all of the above.\n* Verify that all configuration files, executables, and libraries are readable and writable only by the software administrator.\n* Implement thorough static and dynamic test strategies (both manual and automatic) to flag permission problems wherever possible (bearing in mind that few tests offer complete coverage).",
                "text": ""
              },
              "properties": {
                "tags": [
                  "python",
                  "InsecureFilePermissions",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Juniper/jsnapy/commit/f07761e533c2daa0040d3e978bcf22b0b3bfe6ba?diff=split#diff-60f61ab7a8d1910d86d9fda2261620314edcae5894d5aaa236b821c7256badd7L-1",
                    "lines": [
                      {
                        "line": "mode = 0o777\n",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "mode = 0o700\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "install.run(self)\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "os.chmod(dir_path, mode)\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Scan-o-Matic/scanomatic/commit/f56e6426036e11cee248fe25dd455fc91251a6f0?diff=split#diff-30b4f76359bc943319fd211c442fa1c397044dc1d9bfb56d89fbb6c419aa13a5L-1",
                    "lines": [
                      {
                        "line": "os.chmod(targetBase, 0777)\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "os.chmod(targetBase, 0755)\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/BOINC/boinc/commit/a822d8312bcb9e3c01de58c5c63f77012dbf5c94?diff=split#diff-f2bfd017d66abcafe76da3d50faf3ff88e4bc22b03aa33077a02b7515c23431eL-1",
                    "lines": [
                      {
                        "line": "map(lambda d: os.chmod(dir(d), 0777),\n",
                        "lineNumber": 297,
                        "lineChange": "removed"
                      },
                      {
                        "line": "map(lambda d: os.chmod(dir(d), 02770),\n",
                        "lineNumber": 297,
                        "lineChange": "added"
                      },
                      {
                        "line": "    [\n",
                        "lineNumber": 298,
                        "lineChange": "none"
                      },
                      {
                        "line": "        'cgi-bin',\n",
                        "lineNumber": 299,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'upload',\n",
                        "lineNumber": 300,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'html/cache',\n",
                        "lineNumber": 301,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'html/inc',\n",
                        "lineNumber": 302,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'html/languages',\n",
                        "lineNumber": 303,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'html/languages/compiled',\n",
                        "lineNumber": 304,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'html/user_profile/images'\n",
                        "lineNumber": 305,
                        "lineChange": "none"
                      },
                      {
                        "line": "])\n",
                        "lineNumber": 306,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-732"
                ]
              }
            },
            {
              "id": "cpp/CMissingClose/test",
              "name": "CMissingClose/test",
              "shortDescription": {
                "text": "Missing Release of File Descriptor or Handle after Effective Lifetime"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nA file descriptor or handler is allocated, and is not released after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.\n\nThis can lead to a denial of service, as an OS has a finite pool of file descriptors, and it may prevent other processes from obtaining their own file descriptors.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "CMissingClose",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/NCAR/ncl/commit/e0223ba7f96e77f00809a415e3308c70303f9542?diff=split#diff-df5e9e724e8583ee52188d12a745d16920f767c1810b04a27c6eeb7232423b58L-1",
                    "lines": [
                      {
                        "line": "\tif ((fp = fopen(\"/dev/tty\", \"w\")) == NULL) {\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfp = stderr;\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif (header) (void) fprintf(fp, \"%s - \", header);\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fprintf(fp, \"Version %s\\n\", VERSION);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t(void) fflush(fp);\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (fp != stderr) fclose(fp);\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/sirupsen/flying-cat/commit/c06788fa4d076221fa4a00c3b1fd1452660c34fe?diff=split#diff-29219c331c8b7f6acd9f5ceb186c4e811fc2d027b47aae3368f1cf93973b8af0L-1",
                    "lines": [
                      {
                        "line": "FILE* s = fopen(argv[1], \"rb\");\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "FILE* d = fopen(argv[2], \"wb\");\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "int o = atoi(argv[3]);\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(o < 0)\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Offset must be a positive integer\\n\");\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(s == NULL)\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for reading\\n\", argv[1]);\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(d == NULL)\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tprintf(\"Can't open %s for writing\\n\", argv[2]);\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn 1;\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "fseek(s, o, SEEK_SET);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "while(1)\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tchar c = fgetc(s);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(c == EOF)\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tbreak;\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tfputc(c, d);\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "printf(\"Done\\n\");\n",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "fclose(s);\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "fclose(d);\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cr88192/bgbtech_misc/commit/5fbfccef27162e81e616231135641b95bfa071ce?diff=split#diff-e4ce6bdd50720d1880d4dae6f0ac1206fbff5542479518e49bb8d83812446ddfL-1",
                    "lines": [
                      {
                        "line": "fd=fopen(name, \"wb\");\n",
                        "lineNumber": 307,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(!fd)return(-1);\n",
                        "lineNumber": 308,
                        "lineChange": "none"
                      },
                      {
                        "line": "BTIC1H_Img_StoreTGA(fd, buf, w, h);\n",
                        "lineNumber": 309,
                        "lineChange": "none"
                      },
                      {
                        "line": "fclose(fd);\n",
                        "lineNumber": 310,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 57,
                "cwe": [
                  "CWE-775"
                ]
              }
            },
            {
              "id": "cpp/ImproperNullTermination/test",
              "name": "ImproperNullTermination/test",
              "shortDescription": {
                "text": "Improper Null Termination"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nImproper null termination occurs when a character string's ending null character is omitted or outside the allocated memory for the string. This typically leads to information leaks or buffer overflows and occurs when:\n* There is an off-by-one error which leads to the null character being out of bounds\n* Raw data is passed to functions expecting strings. This can lead to out of bounds reading or writing (e.g., strlen / strcpy using raw data)\n\n## Best practices for prevention\n* Use functions that ensure proper null termination. Pay attention to the way the string functions affect the ending null character (e.g., strncpy doesn't necessarily ensure null termination)\n* Avoid passing raw data to functions expecting strings. If this can't be avoided ensure there is proper null termination (e.g., write a null character at the end of the buffer)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "ImproperNullTermination",
                  "Security",
                  "InTest",
                  "SourceImproperNullTermination",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/aquynh/capstone/commit/22a5a761d8be37bab9d3d507841874f19625d3e9?diff=split#diff-66a380d2b83d14e1b2cc0743651892bfb6c73490ea39ba8b6eb027ddd1cbf97eL-1",
                    "lines": [
                      {
                        "line": "strncpy(insn->mnemonic, buffer, sizeof(insn->mnemonic) - 1);\n",
                        "lineNumber": 314,
                        "lineChange": "removed"
                      },
                      {
                        "line": "insn->mnemonic[sizeof(insn->mnemonic) - 1] = '\\0';\n",
                        "lineNumber": 315,
                        "lineChange": "removed"
                      },
                      {
                        "line": "strcpy(insn->mnemonic, buffer);\n",
                        "lineNumber": 314,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/uudiin/raspd/commit/39170d13306259d98816566a3ac30afa138c70ba?diff=split#diff-fb2adfba4fdb4b1695553f0e720141b28d8026ad94a502f3fd7256df5a979d6cL-1",
                    "lines": [
                      {
                        "line": "#include <string.h>\r\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <errno.h>\r\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <getopt.h>\r\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <unistd.h>\r\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/socket.h>\r\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sys/un.h>\r\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "#include <sock.h>\r\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "#define BUF_SIZE    1024\r\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "int main(int argc, char *argv[])\r\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "{\r\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    static struct option options[] = {\r\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { \"unix\", required_argument, NULL, 'u' },\r\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        { 0, 0, 0, 0 }\r\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    };\r\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int c;\r\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char *unixsock = NULL;\r\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int fd;\r\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "    union sockaddr_u addr;\r\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    socklen_t len;\r\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    char buffer[BUF_SIZE];\r\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    int err;\r\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while ((c = getopt_long(argc, argv, \"du:\", options, NULL)) != -1) {\r\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (c) {\r\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        case 'u': unixsock = optarg; break;\r\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\r\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (unixsock == NULL) {\r\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fprintf(stderr, \"must be set the unixsock socket file\");\r\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\r\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0)\r\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (strlen(unixsock) >= sizeof(addr.un.sun_path))\r\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "    memset(&addr, 0, sizeof(addr));\r\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "    addr.un.sun_family = AF_UNIX;\r\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    strncpy(addr.un.sun_path, unixsock, sizeof(addr.un.sun_path));\r\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    len = SUN_LEN(&addr.un);\r\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (connect(fd, &addr.sockaddr, len) < 0)\r\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return 1;\r\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    /* main loop */\r\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while (fgets(buffer, sizeof(buffer), stdin) != NULL) {\r\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "        size_t size = strlen(buffer);\r\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int retval;\r\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = write(fd, buffer, size);\r\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval != size)\r\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fprintf(stderr, \"send date error, err = %d\\n\", retval);\r\n",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "\r\n",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        retval = read(fd, buffer, sizeof(buffer));\r\n",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (retval)\r\n",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        if (retval) {\r\n",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "            buffer[retval] = '\\0';\r\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/swoole/swoole-src/commit/77fd91854b865bc6fba16aca6adf699b60a81603?diff=split#diff-9188d03744376460f57ecbe5914ccfe8f20ca6ef14d0d12100dcd8d738c0ad71L-1",
                    "lines": [
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, PATH_MAX - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        ssize_t byte = ::readlink(task.filename, buf, sizeof(buf) - 1);\n",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if (byte <= 0) {\n",
                        "lineNumber": 152,
                        "lineChange": "none"
                      },
                      {
                        "line": "            return false;\n",
                        "lineNumber": 153,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 154,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 155,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        strcpy(task.filename, buf);\n",
                        "lineNumber": 156,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        task.filename[byte] = 0;\n",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 158,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        buf[byte] = 0;\n",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "        swoole_strlcpy(task.filename, buf, sizeof(task.filename));\n",
                        "lineNumber": 156,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 114,
                "cwe": [
                  "CWE-170"
                ]
              }
            },
            {
              "id": "cpp/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/coturn/rfc5766-turn-server/commit/697286823ba9bf2f6325a340f04c3475930210bb?diff=split#diff-75b8ac48a3f3763232f92a7f2c91f5facbe335bf59e071d9778bb1a986662daeL-1",
                    "lines": [
                      {
                        "line": "\tif (!HMAC(EVP_sha1(), key, keylen, buf, len, hmac, NULL)) {\n",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\tERR_clear_error();\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif(shatype == SHATYPE_SHA256) {\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\tif (!HMAC(EVP_sha256(), key, keylen, buf, len, hmac, hmac_len)) {\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jgarzik/picocoin/commit/2ef8aec4979b901801150ed08488dd45b0025f5b?diff=split#diff-2e5075e9a4076e0f6d5da488e6c90f2d67ed3a768ad4c01149bf334b8c86434cL-1",
                    "lines": [
                      {
                        "line": "i = EVP_BytesToKey(EVP_aes_256_cbc(), EVP_sha1(), salt, key_data,\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "i = EVP_BytesToKey(EVP_aes_256_cbc(), EVP_sha512(), salt, key_data,\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/fador/mineserver/commit/2b4a69a3e1164afc7ae4febbb8413d220a116481?diff=split#diff-a12d9ccf5fb5da70151577083fb4f0d95f47d4d23213538c2b3e9783505dceecL-1",
                    "lines": [
                      {
                        "line": "EVP_BytesToKey(EVP_aes_128_cfb8(), EVP_sha1(), NULL, (const uint8_t *)secret.c_str(), 16, nrounds, key, iv);\n",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memcpy(&key,secret.c_str(),16);    \n",
                        "lineNumber": 101,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 32,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "cpp/IntegerOverflow",
              "name": "IntegerOverflow",
              "shortDescription": {
                "text": "Integer Overflow"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nAn integer overflow is a type of an arithmetic overflow error when the result of an integer operation does not fit within the allocated memory space. Instead of an error in the program, it usually causes the result to be unexpected. In the context of application security, this could lead to bypass of application logic or validation, and in some cases may lead to buffer overflow vulnerabilities.\n\nExample:\n\n```\nnresp = packet_get_int();\nif (nresp > 0) {\n response = xmalloc(nresp*sizeof(char*));\n for (i = 0; i < nresp; i++)\n  response[i] = packet_get_string(NULL);\n}\n```\n\nIf `nresp` is 1073741824 and `sizeof(char*)` is 4 (which is typical), then `nresp*sizeof(char*)` results in an overflow. Therefore, `xmalloc()` receives and allocates a 0-byte buffer. The subsequent loop causes a heap buffer overflow, which may, in turn, be used by an attacker to execute arbitrary code.\n\n## Best practices for prevention\n\nInteger overflow can be hard to detect and prevent, especially in large and complex codebases. Developers should perform checks as appropriate to determine that arithmetic operations do not result in an overflow. This could be as simple as ensuring the result of the additive operation is not less than the operands themselves (and the inverse for subtractive operations). Libraries and processes can help to prevent such issues too - in the case of the GCC compiler, for example, there are built-in functions that check for integer overflows. In the case of C++ programs, there is a library called SafeInt that performs safe operations.\n\n## References\n\n* [CWE-190: Integer Overflow or Wraparound](https://cwe.mitre.org/data/definitions/190.html)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "cpp",
                  "IntegerOverflow",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-190"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "cpp/BufferOverflow",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2)",
              "[memcpy](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/radixdbg/radixdbg.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 3,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "54226617a1c94f2b3e08bc393ef0d74f3c3de5a890167620782e0e31337f949a",
            "1": "2d06e3d6.76503df6.0b9f33be.cc899355.546b9441.34c6cc13.30ad82ea.6b81937f.b76431c2.a9f42d03.0b9f33be.27f9dbc8.baf5e6ff.34c6cc13.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 6,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 6,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/BufferOverflow",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3)",
              "[memcpy](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/slsdb/slsdb.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 3,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "92e76ba091d943de554047583a05ad595c0a758063308f6aabbd29caac8085c1",
            "1": "2d06e3d6.176ec791.0b9f33be.cc899355.9dc35004.6a274ab8.30ad82ea.5b6cf5fb.2d06e3d6.51c51836.0b9f33be.1bd0bc43.9dc35004.6a274ab8.30ad82ea.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 3,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 555,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/BufferOverflow/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2)",
              "[memcpy](3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/main/main.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 2,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "14a11c573c547e5e2ab235dcd48ab4461cc4e41494599e581a883c531d9a4de9",
            "1": "2d06e3d6.76503df6.554dd003.6483b32f.031a268a.05942b75.1e451703.5b6cf5fb.2d06e3d6.5397acef.a1f15da6.27f9dbc8.a43d18bd.05942b75.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/main/main.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/main/main.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 23,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/main/main.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/main/main.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/BufferOverflow/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[memcpy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 2,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "775b44adb01334112280d45aa72c92c9d02cf4337d0c450e80c3e16f096f9843",
            "1": "6c220da5.c489c967.98501263.cc899355.9bdebda7.60907e64.5db3d4a6.545e9171.6c220da5.d597959c.405c1407.d9c92da3.5bcab2b0.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 408,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/BufferOverflow/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into memcpy, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to manipulate application memory. This may result in a buffer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[memcpy](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fef2ddcf84df9d176d95450448fe5f42c2129ec7c717964315d7569308a96944",
            "1": "ed27a822.d597959c.a0947d4e.4c600262.10982d71.6a274ab8.30ad82ea.05171946.ed27a822.d597959c.a0947d4e.4c600262.10982d71.6a274ab8.30ad82ea.05171946"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 408,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/llist/llist.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "startColumn": 35,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2b64f5b5ef780db6272b13feb4650ca8ea259a02fd64541323a7e6569352eb0",
            "1": "2d06e3d6.976f0f27.c6e8cedb.3f8c3213.baf5e6ff.0962a940.5db3d4a6.3735aa66.2d06e3d6.76503df6.c6e8cedb.3f8c3213.baf5e6ff.0962a940.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 14,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 2,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/llist/llist.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 35,
                            "endColumn": 44
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 158,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/newfs_sls/newfs_sls.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b41db7b33ffc6d3c99ee6a53c44ffaab60aaacaeece426b93e7513458c938595",
            "1": "ed27a822.76503df6.37ba97ac.93cc8d4d.031a268a.34c6cc13.f4b4b044.8dd92b16.3b4b9534.76503df6.37ba97ac.93cc8d4d.dce0faad.34c6cc13.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/newfs_sls/newfs_sls.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/newfs_sls/newfs_sls.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/newfs_sls/newfs_sls.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 508,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3)",
              "[open](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/radixdbg/radixdbg.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d318356e09f2a929e38e252ee063f60830a07eba8d5b979edd608f38ec3617c9",
            "1": "57664a44.76503df6.554dd003.6520237d.f5fd3da5.34c6cc13.5db3d4a6.8dd92b16.2d06e3d6.76503df6.a1f15da6.6520237d.d662de49.34c6cc13.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 2,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixdbg.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 133,
                            "endLine": 133,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/slsdb/slsdb.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 449,
                  "endLine": 449,
                  "startColumn": 8,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3fe0c388f08af61f08d574a2bd86d53e2335e3aa1340f1441d619a62711168a1",
            "1": "ed27a822.50626e53.554dd003.cc899355.9dc35004.2f4e1548.5db3d4a6.8dd92b16.ed27a822.f055ff22.a1f15da6.9290282d.9dc35004.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 13,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/slsdb.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 449,
                            "endLine": 449,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 558,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1)",
              "[open](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/journal/journal.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc8d8d20eaeb82a529901994e130b1226da81cf75acd136bccab31f8ec4122ac",
            "1": "8ee2ac81.76503df6.554dd003.1bd0bc43.031a268a.34c6cc13.30ad82ea.8dd92b16.ed27a822.76503df6.a1f15da6.1bd0bc43.baf5e6ff.34c6cc13.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/journal/journal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/journal/journal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/journal/journal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 370,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 10,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "281be9affba601f0c8129fca14c4bd5d34b48c12134871bf8e7a1df7972d066d",
            "1": "7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.6a274ab8.30ad82ea.8dd92b16.6c220da5.d597959c.405c1407.d9c92da3.5bcab2b0.34c6cc13.50e07b35.25051215"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 2,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 2,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3dd7558eebf82dd1f34a103128402c1a1cb921c7d77ff6ac438e93ddc44713d8",
            "1": "7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.564b8470.5db3d4a6.8dd92b16.7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.6a274ab8.9957b03c.d26540ab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f99e9f4c3877b1c30db46578278f9b6fd6c9ab8179b2a2c1ce517e967e2d9ee",
            "1": "6c220da5.b5aee8af.98501263.cc899355.9bdebda7.60907e64.5db3d4a6.8dd92b16.6c220da5.d597959c.405c1407.d8754cbd.5bcab2b0.60907e64.9957b03c.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sas/sas.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "53188f4c29391aba63baf428e4362db52acc6bf963575ab003eb473fa0dd5e67",
            "1": "ed27a822.d597959c.a0947d4e.4c600262.10982d71.6a274ab8.30ad82ea.05171946.ed27a822.d597959c.a0947d4e.4c600262.10982d71.6a274ab8.30ad82ea.05171946"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 21,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 132,
                            "endLine": 132,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 10,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sas/sas.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[open](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sastrack/sastrack.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 10,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc4c55d7e4347d9336f6228da1a93a76f737103cfc4db29834bc83c9886345a7",
            "1": "7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.6a274ab8.30ad82ea.8dd92b16.7614eeee.d597959c.ab785560.4cbd0ad6.5bcab2b0.d1660556.50e07b35.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 289,
                            "endLine": 289,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 301,
                            "endLine": 301,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 8,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 2,
                            "endColumn": 5
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 303,
                            "endLine": 303,
                            "startColumn": 2,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "libsls/sls_wal.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sastrack/sastrack.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 7,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75d00c0396e97610366fe1b160acecf6d64cd18be07dc0195fba9dbd0f57eaff",
            "1": "7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.564b8470.5db3d4a6.8dd92b16.7614eeee.d597959c.405c1407.d8754cbd.5bcab2b0.6a274ab8.9957b03c.d26540ab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/PT/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a command line argument flows into open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[open](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/sastrack/sastrack.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 3,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5417c0db63e3c1c0c3d6cc2a9f9621e826d4d405f8a6d16bf408e7dbb4b06020",
            "1": "ed27a822.d597959c.a0947d4e.f7bcd1c0.5515d090.6a274ab8.30ad82ea.b5c86bfe.ed27a822.d597959c.a1f15da6.f7bcd1c0.5515d090.6a274ab8.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 38,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 12,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/sastrack/sastrack.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 7,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 420,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/UnsafeFunctionStringHandling",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Using strcpy can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "markdown": "Using {0} can lead to buffer overflow vulnerabilities, if arbitrary user input is able to flow into this function without the length of the input being checked. Use the safer alternative strncpy instead.",
            "arguments": [
              "[strcpy](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "slos/slos_btree.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 555,
                  "endLine": 555,
                  "startColumn": 2,
                  "endColumn": 8
                }
              }
            }
          ],
          "fingerprints": {
            "0": "07dff9e9697018a7b0fe9795864a6641d7beefd7335a9e68f07107df6b1dee03",
            "1": "ed27a822.6b36a779.412e46b6.ba24df1d.abd4d176.a8358bd3.6a6cb5a6.5b6cf5fb.ed27a822.6b36a779.412e46b6.ba24df1d.abd4d176.a8358bd3.6a6cb5a6.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_btree.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 555,
                            "endLine": 555,
                            "startColumn": 2,
                            "endColumn": 8
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 503,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Use after free. sess is used in sess_hold after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[sess](0)",
              "[sess_hold](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_proc.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 511,
                  "endLine": 511,
                  "startColumn": 13,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f1fbbc030c6c583c46ba76053d84a79a6459e4cee4087e5754e59c172fcc3863",
            "1": "cd794e09.0d254423.742961a0.234d7fe8.1ea1395f.51211531.1e451703.f620e7c4.cd794e09.3e6882d1.86c60c7c.27f9dbc8.baf5e6ff.51211531.30ad82ea.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 511,
                            "endLine": 511,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 511,
                            "endLine": 511,
                            "startColumn": 3,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Use after free. _ is used in global::slskv_add after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[_](0)",
              "[global::slskv_add](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_proc.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 513,
                  "endLine": 513,
                  "startColumn": 42,
                  "endColumn": 57
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37541e9f18135790e38e947a01602d6ae73b30c35ab04de9601bef9dff5d9261",
            "1": "cd794e09.277c621c.405c1407.cc899355.5bcab2b0.ece065b5.c29594de.4fb6396e.fb646cca.277c621c.01578529.14252543.baf5e6ff.51211531.c29594de.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 513,
                            "endLine": 513,
                            "startColumn": 42,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 512,
                            "endLine": 512,
                            "startColumn": 11,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Use after free. sess is used in sess_release after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[sess](0)",
              "[sess_release](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_proc.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 515,
                  "endLine": 515,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6d1c540fde27f350d8cb86e848db0c019e92ba44ea19c3b37162d55a2b9f6d7f",
            "1": "cd794e09.0d254423.aaace749.14252543.1ea1395f.9f53276c.1e451703.55a54eef.98a6b99d.0d254423.aaace749.14252543.5bcab2b0.51211531.abd48e56.4fb6396e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 515,
                            "endLine": 515,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 515,
                            "endLine": 515,
                            "startColumn": 4,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/UseAfterFree",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Use after free. sess is used in sess_release after it may already have been freed with call to free.",
            "markdown": "Use after free. {0} is used in {1} after it may already have been freed with {2}.",
            "arguments": [
              "[sess](0)",
              "[sess_release](1)",
              "[call to free](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_proc.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 528,
                  "endLine": 528,
                  "startColumn": 18,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0431ea1f65a20c5971c2b0486fb86f4887e595dc761fb68867b3e41e7256a4c2",
            "1": "cd794e09.0d254423.aaace749.14252543.1ea1395f.51211531.df7e59ba.55a54eef.98a6b99d.0d254423.aaace749.14252543.5bcab2b0.51211531.30ad82ea.4fb6396e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 528,
                            "endLine": 528,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 528,
                            "endLine": 528,
                            "startColumn": 5,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_proc.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 614,
                            "endLine": 614,
                            "startColumn": 9,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/InsecureFilePermissions",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "The permission 511 is set on a file using os.chmod. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "markdown": "The permission {0} is set on a file using {1}. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "arguments": [
              "[511](0)",
              "[os.chmod](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/run.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 304,
                  "endLine": 304,
                  "startColumn": 5,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1279c04576ac6a69d72b1ce9c145aa92b3e14809bfcbe2da2c0ded55218ef848",
            "1": "16691f08.b5a115c3.b588a99c.139c59a8.24d83f0d.48e1de78.793ef6fd.fd34eb40.16691f08.b5a115c3.b588a99c.139c59a8.24d83f0d.48e1de78.793ef6fd.fd34eb40"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 32,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 304,
                            "endLine": 304,
                            "startColumn": 5,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/InsecureFilePermissions",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "The permission 511 is set on a file using os.chmod. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "markdown": "The permission {0} is set on a file using {1}. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "arguments": [
              "[511](0)",
              "[os.chmod](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/run.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 525,
                  "endLine": 525,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3f9fd64cf64b91b8d19a770a64db0e82459daef7cedf3d36f0899d829c60d376",
            "1": "0e2e3a47.1c6650e9.79e62dc9.139c59a8.1d07cee4.ba14daf2.081ac3f4.ebed174f.0e2e3a47.1c6650e9.79e62dc9.139c59a8.1d07cee4.ba14daf2.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 525,
                            "endLine": 525,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/InsecureFilePermissions",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "The permission 511 is set on a file using os.chmod. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "markdown": "The permission {0} is set on a file using {1}. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "arguments": [
              "[511](0)",
              "[os.chmod](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/run.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 577,
                  "endLine": 577,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e380a8d8b84a4955729e41b4969ae6b34a1113d298d540068e8f4a780180dd9f",
            "1": "0e2e3a47.1c6650e9.79e62dc9.139c59a8.7a121c2e.ba14daf2.081ac3f4.ebed174f.0e2e3a47.1c6650e9.79e62dc9.139c59a8.7a121c2e.ba14daf2.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 577,
                            "endLine": 577,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "python/InsecureFilePermissions",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "The permission 511 is set on a file using os.chmod. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "markdown": "The permission {0} is set on a file using {1}. Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed leading to information exposure.",
            "arguments": [
              "[511](0)",
              "[os.chmod](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "benchmarks/run.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 587,
                  "endLine": 587,
                  "startColumn": 21,
                  "endColumn": 29
                }
              }
            }
          ],
          "fingerprints": {
            "0": "859416f77c1a887cead2311a8dba018359dd4d5ce3af7d594d1b676f5c7c803e",
            "1": "4fe0fda2.5b46cdac.2683ade8.139c59a8.7a121c2e.c7570064.d9c10edc.ebed174f.4fe0fda2.5b46cdac.2683ade8.139c59a8.7a121c2e.ba14daf2.081ac3f4.ebed174f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 587,
                            "endLine": 587,
                            "startColumn": 36,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "benchmarks/run.py",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 587,
                            "endLine": 587,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/CMissingClose/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "File opened by open may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[open](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/slsfs/file.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 11,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e80d20746e303310f162fe98d8e30b221704828998710cd2b1a1044aab42e649",
            "1": "7ddb1868.394d292f.98b36e81.b6461bb4.bc1f3c0c.6a274ab8.30ad82ea.10999153.7ddb1868.afc52d44.0b9f33be.b6461bb4.68bbacbc.b391a980.50e07b35.10999153"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/slsfs/file.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 355,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/CMissingClose/test",
          "ruleIndex": 8,
          "level": "note",
          "message": {
            "text": "File opened by open may not be closed. The file does not seem to be closed on all possible execution paths.",
            "markdown": "File opened by {0} may not be closed. The file does not seem to be closed on all possible execution paths.",
            "arguments": [
              "[open](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/walfd/walfd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 13,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4f78c0df5a3f29bc0f11946deb7bdd272300769a6255559204d45dbc22c3187b",
            "1": "67f040b7.d984bf35.f6f6d89b.1bd0bc43.d662de49.6a274ab8.30ad82ea.ceb10d4b.af821a62.d984bf35.12b95dc2.d9c92da3.d662de49.b5d7a2b3.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/walfd/walfd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 355,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into printf, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[printf](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/forkshm/forkshm.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 4,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d917bf2acf479f6f91ae57705d11aa59f86aef4008beabfe4a4ff9f09da3fc77",
            "1": "2d06e3d6.0d254423.98501263.cc899355.a63a3fd4.0df9d02a.c95df8e7.5b6cf5fb.794b7082.28b255a6.16d3d5ce.3c0e1aa2.a63a3fd4.7420ea5d.a9c482d3.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 8,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 10,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 3,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into printf, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11)",
              "[printf](12)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/forkshm/forkshm.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 14,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "423ab241de01a16f21effd938b8ef3abecb4494d41ab3716ecec2914f08ab69d",
            "1": "794b7082.76503df6.16d3d5ce.3c0e1aa2.baf5e6ff.34c6cc13.a9c482d3.ae94f388.794b7082.76503df6.16d3d5ce.3c0e1aa2.baf5e6ff.34c6cc13.a9c482d3.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 8,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 10,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 3,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 40,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 4,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strncpy, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[strncpy](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/forkshm/forkshm.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 3,
                  "endColumn": 10
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f3fa5b263af442e4bdad090ecf184f12bc66deb178ecb5339659310ab763d7f",
            "1": "d603e754.76503df6.98501263.cc899355.a63a3fd4.34c6cc13.5db3d4a6.5b6cf5fb.794b7082.28b255a6.16d3d5ce.b6461bb4.baf5e6ff.51211531.a9c482d3.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 8,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 10,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 3,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/ImproperNullTermination/test",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Potential improperly null terminated input from a pointer to an input buffer flows into strncpy, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "markdown": "Potential improperly null terminated input from {0} {1} into {2}, where it is used as a string. This may result in an information disclosure or buffer overflow vulnerability.",
            "arguments": [
              "[a pointer to an input buffer](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[strncpy](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/forkshm/forkshm.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 7,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "359a67d0501b08eea5430b6ef7fd0a8e48cf2afda49223602c91b1adc7e70be9",
            "1": "1cc5253e.76503df6.a0947d4e.7fe152b9.baf5e6ff.7420ea5d.a9c482d3.ae94f388.794b7082.76503df6.16d3d5ce.3c0e1aa2.baf5e6ff.7420ea5d.a9c482d3.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 121,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 8,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 121,
                            "endLine": 122,
                            "startColumn": 2,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 14,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 11,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 10,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 3,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 3,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/forkshm/forkshm.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 3,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 410,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/InsecureHash",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "MD5Init hash (used in MD5Init) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[MD5Init](0)",
              "[MD5Init](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_pgresident.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 2,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3881880c91b83dfdb94315bef836dcceb1a58f9daf2b2e77eb76becd5a16056",
            "1": "57664a44.0bc41b22.c3454f06.d4de3cf2.12d3302b.508bcdaa.c2768c0d.5b6cf5fb.57664a44.0bc41b22.c3454f06.1409790a.12d3302b.508bcdaa.c2768c0d.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_pgresident.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_pgresident.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/InsecureHash",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "MD5Init hash (used in MD5Init) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[MD5Init](0)",
              "[MD5Init](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_sockrcv.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 2,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1bf257fa0bf04051f552638d2e815fc9aa2d38bac641610b5ecb5a508ad7a54",
            "1": "57664a44.0bc41b22.c3454f06.d4de3cf2.12d3302b.508bcdaa.c2768c0d.5b6cf5fb.57664a44.0bc41b22.c3454f06.1409790a.12d3302b.508bcdaa.c2768c0d.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_sockrcv.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_sockrcv.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/InsecureHash",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "MD5Init hash (used in MD5Init) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[MD5Init](0)",
              "[MD5Init](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sls/sls_socksnd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 2,
                  "endColumn": 9
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74977ee1db9d4b611298a7ab3a7e33a53ce956cf2357419418773c41d9f81f24",
            "1": "57664a44.0bc41b22.c3454f06.d4de3cf2.12d3302b.508bcdaa.c2768c0d.5b6cf5fb.57664a44.0bc41b22.c3454f06.1409790a.12d3302b.508bcdaa.c2768c0d.5b6cf5fb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_socksnd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "sls/sls_socksnd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 2,
                            "endColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/radixdbg/radixnode.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 184,
                  "endLine": 184,
                  "startColumn": 12,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71ae4fdc3ee4bc4ce1511255beec0200d7b66703b656d177ad27bb6424b30c36",
            "1": "f5ca8ed0.76503df6.6a51c0bd.8ab4267b.3aef9f3e.34c6cc13.d3dc24a6.5b6cf5fb.749868bc.0c6e2dfa.0b9f33be.8ab4267b.3aef9f3e.51211531.02693a5c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 2,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 2,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 3,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 30,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 195,
                            "endLine": 195,
                            "startColumn": 2,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1198,
                            "endLine": 1198,
                            "startColumn": 23,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1205,
                            "endLine": 1205,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1220,
                            "endLine": 1220,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1179,
                            "endLine": 1179,
                            "startColumn": 26,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 53,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 53,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 49,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 49,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a multiplication operator (*), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/radixdbg/radixnode.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 229,
                  "endLine": 229,
                  "startColumn": 11,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "71744ebd04d872deb2b769165a9b022a29835ad2beac0f62a8df82be964254d3",
            "1": "f5ca8ed0.76503df6.6a51c0bd.cc899355.3aef9f3e.34c6cc13.d3dc24a6.5b6cf5fb.9642845f.0c6e2dfa.0b9f33be.8ab4267b.3aef9f3e.51211531.02693a5c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 9,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 2,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 11,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 2,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 10,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 244,
                            "endLine": 244,
                            "startColumn": 3,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/radixdbg/radixnode.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 229,
                            "endLine": 229,
                            "startColumn": 33,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1198,
                            "endLine": 1198,
                            "startColumn": 23,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1200,
                            "endLine": 1200,
                            "startColumn": 23,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1205,
                            "endLine": 1205,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 150,
                            "endLine": 150,
                            "startColumn": 16,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1220,
                            "endLine": 1220,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1179,
                            "endLine": 1179,
                            "startColumn": 26,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 53,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 53,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 49,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "slos/slos_radix.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 1181,
                            "endLine": 1181,
                            "startColumn": 49,
                            "endColumn": 71
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 358,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tools/slsdb/directory.cc",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 44,
                  "endColumn": 55
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3ba86cfee99c0c75da0ba6c1953e098ece4f2897b9b1f60be5834df943cf191",
            "1": "2c6744fc.a5b374ad.c690af74.27f9dbc8.c484c1a3.6a274ab8.30ad82ea.7d294f4a.2c6744fc.51c51836.0b9f33be.27f9dbc8.9dc35004.e4696292.9957b03c.619e1fc0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/directory.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/directory.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 15,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/directory.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tools/slsdb/directory.cc",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 44,
                            "endColumn": 55
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 308,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into an addition operator (+), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/fd/fd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 37,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73d82f7557116b561ed9513e366648a3e4e4b2ba101fad77675ae7b3846893ed",
            "1": "806fabc4.8be50dd5.742961a0.27f9dbc8.add3e9a5.e723426a.9957b03c.619e1fc0.806fabc4.277c621c.d69601ce.27f9dbc8.add3e9a5.e4696292.9957b03c.348c8065"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 19,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 19,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 4,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 208,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "cpp/IntegerOverflow/test",
          "ruleIndex": 2,
          "level": "note",
          "message": {
            "text": "Unsanitized input from a file flows into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into a subtraction operator (-), where it is used in integer arithmetic. This may result in an integer overflow vulnerability.",
            "arguments": [
              "[a file](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/fd/fd.c",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 57,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "73d82f7557116b561ed9513e366648a3e4e4b2ba101fad77675ae7b3846893ed",
            "1": "806fabc4.a26f00bc.7ba83221.cc899355.add3e9a5.e723426a.9957b03c.619e1fc0.806fabc4.4f70ed53.d69601ce.27f9dbc8.add3e9a5.e723426a.9957b03c.619e1fc0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 19,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 19,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 10,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 4,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 35,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 30,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "tests/fd/fd.c",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 57,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 208,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              }
            ],
            "isAutofixable": false
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "C",
            "files": 106,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "C++",
            "files": 55,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "PHP",
            "files": 3,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Python",
            "files": 1,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}